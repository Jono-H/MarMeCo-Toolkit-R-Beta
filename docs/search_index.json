[["index.html", "Marine Megafauna Conservation Toolkit Preface", " Marine Megafauna Conservation Toolkit BirdLife International Partnership Preface "],["tracking-data-introduction.html", "1 Tracking data: Introduction 1.1 Introduction to animal tracking data considered in this toolkit 1.2 Lay introduction to GPS, PTT, GLS devices", " 1 Tracking data: Introduction This chapter was built with R version 4.2.2 (2022-10-31 ucrt) The chapter was last updated on 2023-05-09 1.1 Introduction to animal tracking data considered in this toolkit This toolkit focuses on the analysis of data primarily from GPS and PTT devices. Some of the analyses may be extended to data from GLS devices. For all devices, we encourage users to understand the limitations of each device and how these limitations can affect interpretation of animal movement patterns. For a general introduction into understanding animal movement patterns, we refer users to: animal movement references TBC For a general introduction into understanding seabird movement patterns, we refer users to: seabird movement references TBC For a general introduction into understanding GPS, PTT and GLS technologies, we refer users to: GPS, PTT, GLS references TBC 1.2 Lay introduction to GPS, PTT, GLS devices [Consider from MIRO board: Figure: Location data associated with different device types: GPS | PTT | GLS. Showcasing error associated with devices.] "],["tracking-data-sampling-strategy.html", "2 Tracking data: Sampling strategy 2.1 Sampling strategy when collecting animal tracking data for seabirds 2.2 How many birds should you track? 2.3 How many years of tracking data should you collect? 2.4 How many years of tracking data should you collect for IBA or KBA identification? 2.5 Which locations should you track animals from? 2.6 Sampling strategy general recommendations", " 2 Tracking data: Sampling strategy This chapter was built with R version 4.2.2 (2022-10-31 ucrt) The chapter was last updated on 2023-05-09 2.1 Sampling strategy when collecting animal tracking data for seabirds Animal tracking technology has evolved with respect to size and cost of devices. Hence, the opportunities for collecting tracking data have changed too. In the past - when devices were much larger and much more expensive - it was likely that few birds were tracked. Tracking typically occurred from sites that were more accessible than others, as opposed to sites specifically being chosen for their larger source populations. While this type of sampling strategy (selecting sites for accessibility) is often dictated by pragmatic choices needing to be made, or alternate research questions being addressed, outputs from these studies may not necessarily lend themselves well to the identification of globally important sites such as IBAs and KBAs. Researchers must take sampling strategy into account when considering the type of question they wish to answer in their studies. Of course, data collected from one study may be used in a different study in future. But the utility of such data being considered for retrospective analyses should be considered appropriately. 2.2 How many birds should you track? There is no precise answer to this question. The answer in part depends on what kind of question you are trying to answer about a particular species. If you are tracking a globally threatened species with an extremely small population size, or are tracking a species highly sensitive to devices being deployed on it, then a small number of individuals being tracked may be sufficient to identify where an important site might be. However, we suggest that at least 10 birds from a unique dataGroup are tracked before inferring movement patterns about a particular source population. dataGroup: learn more about how to define a dataGroup in the dataGroup chapter. 2.3 How many years of tracking data should you collect? Again, there is no precise answer to this question. Recent evidence, based on GPS tracking of 23 chick-rearing seabird species, suggests that: tracking chick-rearing seabirds across years improves the estimation of at-sea spatial distributions. However, in most cases the information gain is marginal. samples collected in only one or two years can be useful for the identification of important sites. of key importance when considering tracking data for questions related to area-based conservation is whether the sample of tracked individuals is representative at the population level. when only one or two years of tracking data are available for important site identification, using independent evidence to assess whether conditions were typical of the region and time of year is critical for interpretation of results. if conditions were atypical, then further years of sampling may be warranted. One to two years of tracking data may be sufficient to inform area-based conservation decisions. However, long-term studies will still be critical to inform how seabirds may respond to envrionmental perturbation. 2.4 How many years of tracking data should you collect for IBA or KBA identification? [See: KBA Guidelines. Discuss appropriate text with Charlotte] 2.5 Which locations should you track animals from? A number of factors may dictate which locations you track animals from. Broadly speaking, these factors may include: sites selected depending on the research question you wish to address sites selected owing to feasibility of accessing sites sites selected according to species known ecology, and hence ability to capture and deploy (and / or retrieve where necessary) devices on animals In the context of the marine toolkit, where identification of globally important marine sites is often linked to individuals tracked from a particular source location (i.e. the dataGroup): we advise investigators to track animals from source locations where those sites themselves would trigger relevant IBA or KBA criteria. [Further figure should be provided to better showcase sampling strategy] 2.6 Sampling strategy general recommendations In general, to support identification of an important site at sea from animal tracking data, we suggest the following: A minimum of 10 individual animals are tracked; all from the same source population Data from the 10 individual animals that are tracked should all represent data from the same life-cycle stage, within a given year, when it is expected that animals are moving in a similar manner to one another. (e.g. for penguins, you should have tracking information for all 10 individuals from within the chick-guard period) the dataGroup: [consider text here about the dataGroup] "],["tracking-data-load-data-into-r-and-visualise.html", "3 Tracking data: Load data into R and visualise 3.1 Description of the example dataset 3.2 Load packages 3.3 Input parameters for chapter tutorial 3.4 Storing, reading, and formatting raw tracking data 3.5 Load raw tracking data 3.6 Format data to match that of the Seabird Tracking Database 3.7 Review of the example data so far 3.8 Explore the tabular data 3.9 Review of summary output 3.10 Arrange data and remove duplicate entries 3.11 Visualise all the location data 3.12 Review of overall plot for all data points 3.13 Save all the location data as a shapefile 3.14 Save all the location data as a plot 3.15 Visualise individual animal tracks", " 3 Tracking data: Load data into R and visualise This tutorial uses example data from a project led by the BirdLife International partner in Croatia: BIOM The citation for this data is: TBC The example data can be downloaded from: TBC - SBTD Analyses outlined in this chapter were performed in R version 4.2.2 (2022-10-31 ucrt) This chapter was last updated on 2023-05-09 3.1 Description of the example dataset Species tracked: Yelkouan Shearwater (Puffinus yelkouan) Life-cycle stage when birds were tracked: chick-rearing Site / source population birds tracked from: Lastovo SPA, Croatia Years birds were tracked over: 2019, 2020 Devices birds were tracked with: GPS Device model type: PathTrack nanoFix GPS/UHF transmitters (≤ 5.5 g) [Figure showcasing Lastovo SPA and source populations] 3.2 Load packages Load required R packages: If the package(s) fails to load, you will need to install the relevant package(s). ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Load libraries -------------------------------------------------------------- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## sf package for spatial data analyses (i.e. vector files such as points, lines, polygons) library(sf) ## Tidyverse for data manipulation library(tidyverse) ## ggplot2 for plotting opionts library(ggplot2) ## rnaturalearth package for geographic basemaps in R library(rnaturalearth) ## leaflet package for interactive maps in R library(leaflet) ## lubridate for date time library(lubridate) 3.3 Input parameters for chapter tutorial Here we define input parameters needed for sections of the code later in this tutorial. Depending on how your data is set up, you should not need to define any further input parameters. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Specify projections / store needed CRS definitions as variables ---- ## SEE: https://epsg.io/ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## world - unprojected coordinates wgs84 &lt;- st_crs(&quot;EPSG:4326&quot;) ## Croatia - projected coordinates htrs96 &lt;- st_crs(&quot;EPSG:3765&quot;) ## Source a world map from the rnaturalearth R package ## see details of function to change the type of map you get worldmap &lt;- rnaturalearth::ne_download(scale = &quot;large&quot;, type = &quot;countries&quot;, category = &quot;cultural&quot;, destdir = tempdir(), load = TRUE, returnclass = &quot;sf&quot;) 3.4 Storing, reading, and formatting raw tracking data 3.4.1 Storing raw tracking data The type of device you use will dictate what format your raw tracking data is stored in. Typically, we will work with .csv files. Good file management is critical when working with large tracking datasets. [As a guide, the following file structure can support efficient data management] 3.4.2 Reading raw tracking data into R / Rstudio Depending on your file structure, type of raw data, and size of your overall data, we recommend reading data into R in a way that produces a single data frame (or tibble) for all your data required for a specific analysis. [Example R code for reading in raw tracking data is provided in the Appendix] 3.4.3 Format of data Having data standardised into a common format greatly improves reproducible research, and also the ability for data to be used in other studies. The primary format we recommend is that of BirdLife International’s Seabird Tracking Database: - https://www.seabirdtracking.org/ We recognise, however, that this format may not be appropriate for all analyses. Nevertheless, we encourage users to standardise their data into a common format. This will facilitate the ease through which data can be reformatted when necessary for other analyses. [Decide on best way to show example datasets - either as screen shot images? Or as example data files? Or perhaps as both. Maybe just taking subsets of the data as required.] 3.5 Load raw tracking data Below, we load the raw tracking data obtained for Yelkouan Shearwaters. To see how this data was loaded into R originally, and merged to create a single data frame, see the example code in the Appendix. [Example R code for reading in raw tracking data is provided in the Appendix] The load function supports loading various R file formats. Here we are loading an .Rdata file. The file was previously saved with the name of yelk. So when we load the file, an object called yelk will be loaded into the working environment in R. ## Load the example data for Yelkouan Shearwaters load(&quot;data-testing/tracking-data/Tracking_YESH_raw.Rdata&quot;) ## view the first two rows of data ## First view the data in tibble format head(yelk,2) ## # A tibble: 2 × 16 ## day month year hour minute second satell…¹ latit…² longi…³ altit…⁴ time_…⁵ ## &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 24 5 19 0 49 9 5 42.8 16.9 -1.5 2.91 ## 2 24 5 19 1 9 3 5 42.8 16.9 5.25 2.80 ## # … with 5 more variables: accuracy &lt;dbl&gt;, voltage &lt;dbl&gt;, colony_code &lt;chr&gt;, ## # bird_id &lt;chr&gt;, dttm &lt;dttm&gt;, and abbreviated variable names ¹​satellites, ## # ²​latitude, ³​longitude, ⁴​altitude, ⁵​time_offset ## Then view the data in data frame format head(data.frame(yelk),2) ## day month year hour minute second satellites latitude longitude altitude ## 1 24 5 19 0 49 9 5 42.81153 16.88553 -1.50 ## 2 24 5 19 1 9 3 5 42.81203 16.88691 5.25 ## time_offset accuracy voltage colony_code bird_id ## 1 2.910 4.70376e-07 4.12 Z 19_Tag17600_Z-9 ## 2 2.795 9.25368e-07 4.08 Z 19_Tag17600_Z-9 ## dttm ## 1 2019-05-24 00:49:09 ## 2 2019-05-24 01:09:03 tibble vs data frame: we don’t go into the specifics of these different data formats. The key message is that each provides a different way of interacting with, or viewing, data. Both are essentially a mechanism through which to work with tabular data. (i.e. data in rows and columns) [Decide on best way to show example datasets – either screen shot images? Or as example data files? Or perhaps as both. Maybe just taking subsets of the data as required.] 3.6 Format data to match that of the Seabird Tracking Database In the example dataset, you will notice that the data is not in the format of that relating to the seabird tracking database. We can reformat the data by extracting the relevant columns of information, and by adding in any information where it might be missing. ## First, add relevant columns of information to align with SBTD format ## the mutate functions allows you to add a new column of information. ## add the new columns and rename the object to a more standardised name. df_sbtd &lt;- yelk %&gt;% dplyr::mutate(dataset_id = &quot;tbc&quot;, scientific_name = &quot;Puffinus yelkouan&quot;, common_name = &quot;Yelkouan Shearwater&quot;, site_name = &quot;Lastovo SPA&quot;, lat_colony = &quot;tbc&quot;, lon_colony = &quot;tbc&quot;, device = &quot;GPS&quot;, age= &quot;adult&quot;, sex= &quot;unknown&quot;, breed_stage = &quot;chick-rearing&quot;, breed_status = &quot;breeding&quot;, argos_quality = NA, equinox = NA) ## Create the separate date and time columns to match the format of the SBTD, where ## these columns are provided separately df_sbtd &lt;- df_sbtd %&gt;% mutate(date_gmt = date(dttm), time_gmt = format(dttm, format = &quot;%H:%M:%S&quot;)) ## review the changes you have made (i.e. the new columns you have added) head(data.frame(df_sbtd),2) ## day month year hour minute second satellites latitude longitude altitude ## 1 24 5 19 0 49 9 5 42.81153 16.88553 -1.50 ## 2 24 5 19 1 9 3 5 42.81203 16.88691 5.25 ## time_offset accuracy voltage colony_code bird_id ## 1 2.910 4.70376e-07 4.12 Z 19_Tag17600_Z-9 ## 2 2.795 9.25368e-07 4.08 Z 19_Tag17600_Z-9 ## dttm dataset_id scientific_name common_name ## 1 2019-05-24 00:49:09 tbc Puffinus yelkouan Yelkouan Shearwater ## 2 2019-05-24 01:09:03 tbc Puffinus yelkouan Yelkouan Shearwater ## site_name lat_colony lon_colony device age sex breed_stage ## 1 Lastovo SPA tbc tbc GPS adult unknown chick-rearing ## 2 Lastovo SPA tbc tbc GPS adult unknown chick-rearing ## breed_status argos_quality equinox date_gmt time_gmt ## 1 breeding NA NA 2019-05-24 00:49:09 ## 2 breeding NA NA 2019-05-24 01:09:03 ## Now select all the relevant columns to align data with the format of the ## seabird tracking database. ## There are 21 columns of data in the format for the SBTD. ## Remember, when you use the select function, you can also rename columns simultaneously. df_sbtd &lt;- df_sbtd %&gt;% dplyr::select(dataset_id, scientific_name, common_name, site_name, ## below for example, we select the column ## called colony_code but rename it to colony_name colony_name = colony_code, lat_colony, lon_colony, device, bird_id = bird_id, track_id = bird_id, original_track_id = bird_id, age, sex, breed_stage, breed_status, date_gmt, time_gmt, latitude, longitude, argos_quality, equinox) ## review the changes again head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## 2 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## 2 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## time_gmt latitude longitude argos_quality equinox ## 1 00:49:09 42.81153 16.88553 NA NA ## 2 01:09:03 42.81203 16.88691 NA NA 3.7 Review of the example data so far For the following columns, you may notice a few things: dataset_id is specified as tbc. This is because until data has been loaded into the SBTD, it will not have a unique dataset identification code that would relate to the dataset stored in the SBTD. lat_colony, lon_colony are specified as tbc, because we still need to define what the colony coordinates would be for each of locations birds were tagged from. bird_id, track_id, original_track_id, are all specified with the same code. This is because when data is formatted to align with the format of the SBTD: we have a code that relates to the bird that was tracked (bird_id) we have a SBTD unique code that relates to each trip undertaken by the bird, when multiple trips are recorded (track_id). Note though, it is often the case that users do not provide data which has been pre-split into unique trips. Therefore, it is often the case that all entries relating to track_id match that of bird_id. we have a user defined code that can relate to each trip undertaken by the bird. However, the same caveat in the case of track_id applies to this column of data too. argos_quality and equinox are both specified as NA. This is because our data relates to GPS data which does not have an argos_quality estimate (typical of PTT devices) or a measure relating to the equinox (typical of GLS devices). 3.8 Explore the tabular data Before you plot any data, it can be a good idea to broadly explore the data. While you might know which species you tracked, and from which colonies, and from which years, it can often be worth checking over these (and other) aspects of your data. Checking the data helps refresh your view on what data you have, and also helps you pick up any errors that may have arisen when inputting data. ## Reminder on what the data looks like so far head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## 2 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## 2 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## time_gmt latitude longitude argos_quality equinox ## 1 00:49:09 42.81153 16.88553 NA NA ## 2 01:09:03 42.81203 16.88691 NA NA ## Review the main columns of data separately. This helps check for errors associated ## with data entry. E.g. perhaps you typed chick-rearing and CHICK-rearing. Because ## of the difference in lower-case vs. upper-case text, you might accidentally consider ## these as separate components of your dataset. ## the table function is useful to check the unique number of entries per unique input table(df_sbtd$scientific_name) ## ## Puffinus yelkouan ## 16703 table(df_sbtd$site_name) ## ## Lastovo SPA ## 16703 table(df_sbtd$colony_name) ## ## VM VR Z ## 3610 1739 11354 table(df_sbtd$breed_status) ## ## breeding ## 16703 table(df_sbtd$breed_stage) ## ## chick-rearing ## 16703 table(df_sbtd$age) ## ## adult ## 16703 table(df_sbtd$sex) ## ## unknown ## 16703 ## Summarise the data by species, site_name, colony_name, year, ## breed_status, breed_stage, age, sex. ## First we add a new year column by splitting the date column so we can get information about years df_overview &lt;- df_sbtd %&gt;% mutate(year = year(date_gmt)) %&gt;% ## then we group the data by relevant columns group_by(scientific_name, site_name, colony_name, year, breed_status, breed_stage, age, sex) %&gt;% ## then we continue to summarise by the distinct number of entries per group summarise(n_birds = n_distinct(bird_id), n_tracks = n_distinct(track_id), n_original_tracks = n_distinct(original_track_id)) ## review the summary output df_overview ## # A tibble: 4 × 11 ## # Groups: scientific_name, site_name, colony_name, year, breed_status, ## # breed_stage, age [4] ## scientific…¹ site_…² colon…³ year breed…⁴ breed…⁵ age sex n_birds n_tra…⁶ ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; ## 1 Puffinus ye… Lastov… VM 2020 breedi… chick-… adult unkn… 8 8 ## 2 Puffinus ye… Lastov… VR 2021 breedi… chick-… adult unkn… 1 1 ## 3 Puffinus ye… Lastov… Z 2019 breedi… chick-… adult unkn… 19 19 ## 4 Puffinus ye… Lastov… Z 2020 breedi… chick-… adult unkn… 15 15 ## # … with 1 more variable: n_original_tracks &lt;int&gt;, and abbreviated variable ## # names ¹​scientific_name, ²​site_name, ³​colony_name, ⁴​breed_status, ## # ⁵​breed_stage, ⁶​n_tracks 3.9 Review of summary output From the summary output above we can see the following: scientific_name: we have tracking data from one species site_name: we have tracking data from one general site colony_name: we have tracking data from three colonies year: data comes from between 2019 and 2021 breed_status and breed_stage: all data relates to breeding birds in the chick-rearing life-cycle stage. age and sex: data is from adult birds of unknown sex n_birds, n_tracks, n_original_tracks: because n_birds = n_tracks, it indicates that: either the tracking data from each individual bird has not been separated into unique trips, or the tracking data from each individual bird is only representative of a single trip to sea 3.10 Arrange data and remove duplicate entries Once you have formatted your data into a standardised format and ensured that parts of your data is inputted correctly, it is also worth ensuring your data is ordered (arranged) correctly chronologically. An artifact of manipulating spatial data is that sometimes the data can become un-ordered with respect to time, or, given the way various devices interact with satellites, you can also end up with duplicated entries according to timestamps. This can be a first problem, causing your track to represent unrealistic movement patterns of the animal. We need to ensure our data is ordered correctly and also remove any duplicate timestamps. ## review your OVERALL data again head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## 2 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## 2 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## time_gmt latitude longitude argos_quality equinox ## 1 00:49:09 42.81153 16.88553 NA NA ## 2 01:09:03 42.81203 16.88691 NA NA ## merge the date and time columns df_sbtd$dttm &lt;- with(df_sbtd, ymd(date_gmt) + hms(time_gmt)) ## first check how many duplicate entries you may have. If there are many, it ## is worth exploring your data further to understand why. n_duplicates &lt;- df_sbtd %&gt;% group_by(bird_id, track_id) %&gt;% arrange(dttm) %&gt;% dplyr::filter(duplicated(dttm) == T) ## review how many duplicate entries you may have. Print the message: print(paste(&quot;you have &quot;,nrow(n_duplicates), &quot; duplicate records in a dataset of &quot;, nrow(df_sbtd), &quot; records.&quot;, sep =&quot;&quot;)) ## [1] &quot;you have 11 duplicate records in a dataset of 16703 records.&quot; ## remove duplicates entries if no further exploration is deemed necessary df_sbtd &lt;- df_sbtd %&gt;% ## first group data by individual animals and unique track_ids group_by(bird_id, track_id) %&gt;% ## then arrange by timestamp arrange(dttm) %&gt;% ## then if a timestamp is duplicated (TRUE), then don&#39;t select this data entry. ## only select entries where timestamps are not duplicated (i.e. FALSE) dplyr::filter(duplicated(dttm) == F) 3.11 Visualise all the location data Using the leaflet package in R, you can easily visualise your tracking data interactively within RStudio. What should you look for when visualising the raw data? * Are your locations in realistic places? * Have you perhaps mixed up the latitude and longitude columns? * Does your data cross the international date line? Do you know how to deal with this? * Will you need to remove sections of the data that do not represent a time when the animal was tagged? (e.g. perhaps you set the device to start recording locations before deploying on the animal. So the tag might have recorded while you were travelling to the deployment location. Therefore, removing these sections of the track will facilitate your overall analysis.) ## review your OVERALL data again head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt latitude longitude argos_quality equinox dttm ## 1 21:40:41 42.81508 16.89058 NA NA 2019-05-01 21:40:41 ## 2 22:00:41 42.83751 16.89750 NA NA 2019-05-01 22:00:41 ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## visualise all data ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## number of datapoints nrow(df_sbtd) ## [1] 16692 ## interactive plot map.alldata &lt;- leaflet() %&gt;% ## start leaflet plot ## select background imagery addProviderTiles(providers$Esri.WorldImagery, group = &quot;World Imagery&quot;) %&gt;% ## plot the points. Note: leaflet automatically finds lon / lat colonies addCircleMarkers(data = df_sbtd, ## size of points radius = 3, ## colour of points fillColor = &quot;cyan&quot;, ## transparency of points fillOpacity = 0.5, ## set stroke = F to remove borders around points stroke = F) ## generate the plot map.alldata 3.12 Review of overall plot for all data points Based on the interactive plot, you can see that generally the data looks good. Generally, all the locations are in the Adriatic Sea area (something we would anticipate based on what we know about Yelkouan Shearwaters breeding in Croatia). We can conclude the following: Locations appear to be in realistic places. It’s unlikely that we have mixed up the latitude and longitude columns. The data does not cross the international date line. Regarding removing sections of the data that do not represent a time when the animal was tagged: Later filtering steps may remove these parts of the track if locations are near the vicinity of the colony (see details of the tripSplit() function. However, if there are broader location data associated with these types of locations, you will need to remove these sections of the track. 3.13 Save all the location data as a shapefile Visualising all the location data in R can be a simpler starting point. You may also want to save this data as a shapefile (.shp) for viewing in GIS software such as QGIS or ArcGIS. Note: saving all data as a single shapefile can be a memory intensive task (i.e. if you have a lot of data, then your computer might take a long time to save the file, or the file will be big and slow to work with) ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## First add a simplified unique id and create the sf spatial object ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Review data head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt latitude longitude argos_quality equinox dttm ## 1 21:40:41 42.81508 16.89058 NA NA 2019-05-01 21:40:41 ## 2 22:00:41 42.83751 16.89750 NA NA 2019-05-01 22:00:41 ## add a simplified animal ID column - a simple number for each unique animal tracked df_sbtd$bird_id_num &lt;- as.numeric(factor(df_sbtd$bird_id, levels = unique(df_sbtd$bird_id))) ## Review data again (tail function prints the end of the dataframe so you can ## check if the last unique number matches the number of animals you tracked.) head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt latitude longitude argos_quality equinox dttm ## 1 21:40:41 42.81508 16.89058 NA NA 2019-05-01 21:40:41 ## 2 22:00:41 42.83751 16.89750 NA NA 2019-05-01 22:00:41 ## bird_id_num ## 1 1 ## 2 1 tail(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 16691 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA VR ## 16692 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA VR ## lat_colony lon_colony device bird_id track_id ## 16691 tbc tbc GPS 21_Tag41220_VR-1 21_Tag41220_VR-1 ## 16692 tbc tbc GPS 21_Tag41220_VR-1 21_Tag41220_VR-1 ## original_track_id age sex breed_stage breed_status date_gmt ## 16691 21_Tag41220_VR-1 adult unknown chick-rearing breeding 2021-07-09 ## 16692 21_Tag41220_VR-1 adult unknown chick-rearing breeding 2021-07-09 ## time_gmt latitude longitude argos_quality equinox dttm ## 16691 18:10:17 42.80311 16.78880 NA NA 2021-07-09 18:10:17 ## 16692 19:10:14 42.80255 16.79699 NA NA 2021-07-09 19:10:14 ## bird_id_num ## 16691 43 ## 16692 43 ## create the sf spatial object df_sbtd_sf &lt;- df_sbtd %&gt;% ## first create new columns of lon and lat again so you keep this location ## information in tabular format. mutate(lon_device = longitude, lat_device = latitude) %&gt;% ## then convert object to sf spatial object st_as_sf(coords = c(&quot;longitude&quot;, &quot;latitude&quot;), crs = wgs84) ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Save raw tracking data as shapefile for viewing in GIS software ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Option allows for multispecies data ## Or the loop will only run once if you have single species data for(i in unique(df_sbtd$scientific_name)){ ## subset the data taking the track information for each unique species temp_species &lt;- df_sbtd_sf %&gt;% dplyr::filter(scientific_name == i) ## create new folder within current working directory where you will save data ## first create the name of the species and the file path you need ## also use gsub to replace spaces within character strings (words) with a &quot;-&quot; species_name &lt;- gsub(&quot; &quot;, &quot;-&quot;, temp_species$scientific_name[1]) ## print the name for checking print(species_name) ## then create the new folder within current working directory path_to_folder &lt;- paste(&quot;./data-testing/tracking-data/&quot;, species_name, &quot;/shapefiles-all-tracks&quot;, sep=&quot;&quot;) ## print the file path name for checking print(path_to_folder) ## Check if folder exists, and if it does not, then make a new folder if (!file.exists(path_to_folder)) { # If it does not exist, create a new folder dir.create(path_to_folder) print(paste(&quot;Created folder:&quot;, path_to_folder)) } else { # do nothing, but let us know the folder exists already print(paste(&quot;Folder already exists:&quot;, path_to_folder)) } ## write the spatial data as a shapefile ## NOTE: For some GIS software, column names will be abbreviated upon saving ## NOTE: If you have very long file paths, this operation may fail. One solution ## is to save the shapefile elsewhere. Another solution is to instead save the file ## as a geopackage (.gpkg): simply replace the .shp text below with .gpkg st_write(df_sbtd_sf, paste(path_to_folder,&quot;/&quot;, species_name, &quot;_AllTracks.shp&quot;, sep = &quot;&quot;), delete_layer = TRUE) ## remove the temporary file at the end of each loop rm(temp_species) } 3.14 Save all the location data as a plot [A simple plot to look at all the point location data] ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Save raw tracking data as simple plot ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Option allows for multispecies data ## Or the loop will only run once if you have single species data for(i in unique(df_sbtd$scientific_name)){ ## subset the data taking the track information for each unique species temp_species &lt;- df_sbtd_sf %&gt;% dplyr::filter(scientific_name == i) ## create new folder within current working directory where you will save data ## first create the name of the species and the file path you need ## also use gsub to replace spaces within character strings (words) with a &quot;-&quot; species_name &lt;- gsub(&quot; &quot;, &quot;-&quot;, temp_species$scientific_name[1]) ## print the name for checking print(species_name) ## then create the new folder within current working directory path_to_folder &lt;- paste(&quot;./data-testing/tracking-data/&quot;, species_name, &quot;/plots-all-tracks&quot;, sep=&quot;&quot;) ## print the file path name for checking print(path_to_folder) ## Check if folder exists, and if it does not, then make a new folder if (!file.exists(path_to_folder)) { # If it does not exist, create a new folder dir.create(path_to_folder) print(paste(&quot;Created folder:&quot;, path_to_folder)) } else { # do nothing, but let us know the folder exists already print(paste(&quot;Folder already exists:&quot;, path_to_folder)) } ## plot track information for each unique species plot_alltracks &lt;- ggplot() + ## Use the world map data as the underlying basemap geom_sf(data = worldmap, fill = &quot;grey&quot;) + ## Add the point data as transparent cyan circles geom_point(data = df_sbtd_sf, aes(x = lon_device, y = lat_device), color = &quot;cyan&quot;, alpha = 0.5) + ## plot the basemap again, but this time superimpose only the country borders over the point data ## this is to help you see better which points might obviously be over land. geom_sf(data = worldmap, fill = NA, color = &quot;black&quot;) + ## Set the bounding box to only include the point locations coord_sf(xlim = range(df_sbtd_sf$lon_device), ylim = range(df_sbtd_sf$lat_device)) + ## Customize the x and y axis labels labs(x = &quot;Longitude&quot;, y = &quot;Latitude&quot;) + ## add a title to the plot ggtitle(paste(species_name, &quot;\\n&quot;, &quot;points-all-animals&quot;,sep=&quot;&quot;)) + theme(plot.title = element_text(hjust = 0.5)) ## the plot plot_alltracks ## save the plot ggsave(paste(path_to_folder, &quot;/&quot;, species_name, &quot;_all-points.png&quot;, sep = &quot;&quot;), plot_alltracks, ## when units in mm, then width = 160, height = 160, dpi = 300, units = &quot;mm&quot;) ## remove the temporary file at the end of each loop rm(temp_species) } 3.15 Visualise individual animal tracks Once you have reviewed the overall status of the tracking data you collected, it can be worth assessing the tracks of individual animals. This can give you a better idea of the quality of the data for each individual. Visualising tracking data from individual animals can help you understand which data you might remove, or which data you might try and salvage. Depending on the amount of data you have, you can often initially a perform a static exploration of tracks from each individual (i.e. a simple plot of tracks from each individual), followed by an interactive exploration of tracks from all individuals, or only data from those individuals where interactive exploration is deemed necessary. Below, outlines options for visualising individual animal tracks. 3.15.1 Denote beginning and end of tracks for individual animals entire track ## reminder on data structure head(data.frame(df_sbtd_sf),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt argos_quality equinox dttm bird_id_num lon_device ## 1 21:40:41 NA NA 2019-05-01 21:40:41 1 16.89058 ## 2 22:00:41 NA NA 2019-05-01 22:00:41 1 16.89750 ## lat_device geometry ## 1 42.81508 POINT (16.89058 42.81508) ## 2 42.83751 POINT (16.8975 42.83751) head(data.frame(df_sbtd),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt latitude longitude argos_quality equinox dttm ## 1 21:40:41 42.81508 16.89058 NA NA 2019-05-01 21:40:41 ## 2 22:00:41 42.83751 16.89750 NA NA 2019-05-01 22:00:41 ## bird_id_num ## 1 1 ## 2 1 #head(data.frame(df_sbtd2),2) ## add a column indicating start and end of tracks for each individual animal df_sbtd_sf &lt;- df_sbtd_sf %&gt;% group_by(bird_id_num) %&gt;% mutate(nlocs = 1:length(bird_id_num)) %&gt;% mutate(track_segment = if_else(nlocs &lt;= 10, &quot;track.start&quot;,&quot;track.journey&quot;)) %&gt;% ## note: if you have a track with less than 20 points, then you will overwrite ## some of the previous data. mutate(track_segment = if_else(nlocs %in% (length(bird_id_num)-9):(length(bird_id_num)),&quot;track.end&quot;,track_segment)) %&gt;% ## add a column indicating colour for start and end of tracks ## colours from: https://colorbrewer2.org/#type=qualitative&amp;scheme=Set2&amp;n=3 mutate(track_colour = if_else(nlocs &lt;= 10, &quot;#66c2a5&quot;,&quot;#8da0cb&quot;)) %&gt;% mutate(track_colour = if_else(nlocs %in% (length(bird_id_num)-9):(length(bird_id_num)),&quot;#fc8d62&quot;,track_colour)) 3.15.2 Save individual tracks as static plots [A simple plot to look at all the point location data for each individual tracked] ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Save raw tracking data for each individual as a static plot ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## reminder on data structure head(data.frame(df_sbtd_sf),2) for(i in 1:max(df_sbtd_sf$bird_id_num)){ ## subset the data taking the track information for each unique bird tagged temp_individual &lt;- df_sbtd_sf %&gt;% dplyr::filter(bird_id_num == i) ## create new folder (if needed) within current working directory where you will save data ## first create the name of the species and the file path you need ## also use gsub to replace spaces within character strings (words) with a &quot;-&quot; species_name &lt;- gsub(&quot; &quot;, &quot;-&quot;, temp_individual$scientific_name[1]) ## print the name for checking print(species_name) ## then create the new folder within current working directory path_to_folder &lt;- paste(&quot;./data-testing/tracking-data/&quot;, species_name, &quot;/plots-individual-tracks&quot;, sep=&quot;&quot;) ## print the file path name for checking print(path_to_folder) ## Check if folder exists, and if it does not, then make a new folder if (!file.exists(path_to_folder)) { # If it does not exist, create a new folder dir.create(path_to_folder) print(paste(&quot;Created folder:&quot;, path_to_folder)) } else { # do nothing, but let us know the folder exists already print(paste(&quot;Folder already exists:&quot;, path_to_folder)) } ## get animal id for naming plots animal_id &lt;- gsub(&quot; &quot;, &quot;-&quot;, temp_individual$bird_id[1]) ## plot track information for each unique species plot_individual_tracks &lt;- ggplot() + ## Use the world map data as the underlying basemap geom_sf(data = worldmap, fill = &quot;grey&quot;) + ## Add the point data as transparent cyan circles #geom_point(data = temp_individual, aes(x = lon_device, y = lat_device), color = &quot;cyan&quot;, alpha = 0.5) + ## Add the point data - get colours from object #geom_point(data = temp_individual, aes(x = lon_device, y = lat_device, color = track_colour), alpha = 0.5) + ## Add the journey locations geom_point(data = subset(temp_individual, track_segment == &quot;track.journey&quot;), aes(x = lon_device, y = lat_device, color = track_colour), alpha = 0.5) + ## Add the start locations geom_point(data = subset(temp_individual, track_segment == &quot;track.start&quot;), aes(x = lon_device, y = lat_device, color = track_colour), alpha = 0.5) + ## Add the end locations geom_point(data = subset(temp_individual, track_segment == &quot;track.end&quot;), aes(x = lon_device, y = lat_device, color = track_colour), alpha = 0.5) + ## plot the basemap again, but this time superimpose only the country borders over the point data ## this is to help you see better which points might obviously be over land. geom_sf(data = worldmap, fill = NA, color = &quot;black&quot;) + ## Set the bounding box to only include the point locations coord_sf(xlim = range(temp_individual$lon_device), ylim = range(temp_individual$lat_device)) + ## Customize the x and y axis labels labs(x = &quot;Longitude&quot;, y = &quot;Latitude&quot;) + ## add a title to the plot ggtitle(paste(&quot;points-individual:&quot;,&quot;\\n&quot;, animal_id, sep=&quot;&quot;)) + theme(plot.title = element_text(hjust = 0.5)) + ## remove legend theme(legend.position = &quot;none&quot;) ## the plot plot_individual_tracks ## save the plot ggsave(paste(path_to_folder, &quot;/&quot;, animal_id, &quot;_points.png&quot;, sep = &quot;&quot;), plot_individual_tracks, ## when units in mm, then width = 160, height = 160, dpi = 300, units = &quot;mm&quot;) ## print a loop progress message print(paste(&quot;Loop &quot;, i, &quot; of &quot;, max(df_sbtd_sf$bird_id_num), sep = &quot;&quot;)) ## remove the temporary file at the end of each loop rm(temp_individual) } 3.15.3 Save individual tracks as shapefiles ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Save raw tracking data for each individual as shapefile for viewing in GIS software ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## reminder on data structure head(data.frame(df_sbtd_sf),2) for(i in 1:max(df_sbtd_sf$bird_id_num)){ ## subset the data taking the track information for each unique bird tagged temp_individual &lt;- df_sbtd_sf %&gt;% dplyr::filter(bird_id_num == i) ## create new folder (if needed) within current working directory where you will save data ## first create the name of the species and the file path you need ## also use gsub to replace spaces within character strings (words) with a &quot;-&quot; species_name &lt;- gsub(&quot; &quot;, &quot;-&quot;, temp_individual$scientific_name[1]) ## print the name for checking print(species_name) ## then create the new folder within current working directory path_to_folder &lt;- paste(&quot;./data-testing/tracking-data/&quot;, species_name, &quot;/shapefiles-individual-tracks&quot;, sep=&quot;&quot;) ## print the file path name for checking print(path_to_folder) ## Check if folder exists, and if it does not, then make a new folder if (!file.exists(path_to_folder)) { # If it does not exist, create a new folder dir.create(path_to_folder) print(paste(&quot;Created folder:&quot;, path_to_folder)) } else { # do nothing, but let us know the folder exists already print(paste(&quot;Folder already exists:&quot;, path_to_folder)) } ## write the spatial data. Label it by species and bird_id st_write(temp_individual, paste(path_to_folder, &quot;/tracks-individual-animals&quot;, species_name, &quot;_&quot;, temp_individual$bird_id[1], &quot;.shp&quot;, sep = &quot;&quot;), delete_layer = T) ## print a loop progress message print(paste(&quot;Loop &quot;, i, &quot; of &quot;, max(df_sbtd_sf$bird_id_num), sep = &quot;&quot;)) ## remove the temporary file at the end of each loop rm(temp_individual) } 3.15.4 When to remove or salvage data for a tracked individual [Examples / details to be added] In some cases, an entire track may be worth disregarding or trying to salvage. However, it often might be the case that only certain trips from the entire period an animal was tracked may be worth removing. NEXT STEP: Split data from individual animal into unique trips and then consider assessing each unique trip for data quality ## save updated file for next steps save(df_sbtd_sf, file = &quot;data-testing/tracking-data/Tracking_YESH_raw_step2.Rdata&quot;) "],["tracking-data-visualise-individual-trips.html", "4 Tracking data: Visualise individual trips 4.1 Description of data 4.2 Goal of chapter: 4.3 Load packages 4.4 Input parameters for chapter tutorial 4.5 Load input example data and prepare for track2KBA R package protocol 4.6 track2KBA::formatFields() 4.7 Quick visual inspection of your data 4.8 Define colony / origin of trips —- 4.9 Apply tripSplit() 4.10 Keep points associated with complete trips only 4.11 Sampling interval assessment 4.12 Interpolation 4.13 When to remove or salvage data for a tracked individual 4.14 Next steps: in next chapter", " 4 Tracking data: Visualise individual trips This chapter is a continuation from the previous chapter viewing all tracking data. It requires the outputted data file from the previous chapter 4.1 Description of data The example data for this chapter relates to the previous. It has just add some additional columns added which help to specify start and end of the overall track. 4.2 Goal of chapter: The previous chapter ended by noting: In some cases, an entire track may be worth disregarding or trying to salvage. However, it often might be the case that only certain trips from the entire period an animal was tracked may be worth removing or require salvaging. This chapter will help split tracks into trips and support options for assessing quality of individual trips prior to input into the track2KBA protocol. 4.3 Load packages Load required R packages: If the package(s) fails to load, you will need to install the relevant package(s). ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Load libraries -------------------------------------------------------------- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &quot;Had to install R version: R version 4.2.2 (2022-10-31 ucrt) for aniMotum&quot; ## [1] &quot;Had to install R version: R version 4.2.2 (2022-10-31 ucrt) for aniMotum&quot; ## Options to install aniMotum package for animal track interpolation ## aniMotum: https://besjournals.onlinelibrary.wiley.com/doi/10.1111/2041-210X.14060 #install.packages(&#39;aniMotum&#39;, repos = c(&#39;https://ianjonsen.r-universe.dev&#39;, &#39;https://cloud.r-project.org&#39;)) # may need to install aniMotum after downloading using: devtools::install_local(package.zip) #install.packages(&#39;TMB&#39;, type = &#39;source&#39;) library(&quot;aniMotum&quot;) ## sf package for spatial data analyses (i.e. vector files such as points, lines, polygons) library(sf) ## Tidyverse for data manipulation library(tidyverse) ## ggplot2 for plotting opionts library(ggplot2) ## rnaturalearth package for basemaps in R library(rnaturalearth) ## leaflet package for interactive maps in R #install.packages(&quot;leaflet&quot;) library(leaflet) ## library(purrr) library(furrr) #install.packages(&quot;track2KBA&quot;) library(track2KBA) ## for date time library(lubridate) ## for stats library(stats) ## speed filter library(trip) ## linear interpolation library(adehabitatLT) 4.4 Input parameters for chapter tutorial Here we define input parameters needed for sections of the code later in this tutorial. Depending on how your data is set up, you should not need to define any further input parameters. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Specify projections / store needed CRS definitions as variables ---- ## SEE: https://epsg.io/ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## world - unprojected coordinates wgs84 &lt;- st_crs(&quot;EPSG:4326&quot;) ## Croatia - projected coordinates htrs96 &lt;- st_crs(&quot;EPSG:3765&quot;) ## Source a world map from the rnaturalearth R package ## see details of function to change the type of map you get worldmap &lt;- rnaturalearth::ne_download(scale = &quot;large&quot;, type = &quot;countries&quot;, category = &quot;cultural&quot;, destdir = tempdir(), load = TRUE, returnclass = &quot;sf&quot;) 4.5 Load input example data and prepare for track2KBA R package protocol Loading the input example data ## Load the example data for Yelkouan Shearwaters load(&quot;data-testing/tracking-data/Tracking_YESH_raw_step2.Rdata&quot;) ## view the first two rows of data ## First view the data in tibble format head(df_sbtd_sf,2) ## Simple feature collection with 2 features and 26 fields ## Geometry type: POINT ## Dimension: XY ## Bounding box: xmin: 16.89058 ymin: 42.81508 xmax: 16.8975 ymax: 42.8375 ## Geodetic CRS: WGS 84 ## # A tibble: 2 × 27 ## # Groups: bird_id_num [1] ## datas…¹ scien…² commo…³ site_…⁴ colon…⁵ lat_c…⁶ lon_c…⁷ device bird_id track…⁸ ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; ## 1 tbc Puffin… Yelkou… Lastov… Z tbc tbc GPS 19_Tag… 19_Tag… ## 2 tbc Puffin… Yelkou… Lastov… Z tbc tbc GPS 19_Tag… 19_Tag… ## # … with 17 more variables: original_track_id &lt;chr&gt;, age &lt;chr&gt;, sex &lt;chr&gt;, ## # breed_stage &lt;chr&gt;, breed_status &lt;chr&gt;, date_gmt &lt;date&gt;, time_gmt &lt;chr&gt;, ## # argos_quality &lt;lgl&gt;, equinox &lt;lgl&gt;, dttm &lt;dttm&gt;, bird_id_num &lt;dbl&gt;, ## # lon_device &lt;dbl&gt;, lat_device &lt;dbl&gt;, geometry &lt;POINT [°]&gt;, nlocs &lt;int&gt;, ## # track_segment &lt;chr&gt;, track_colour &lt;chr&gt;, and abbreviated variable names ## # ¹​dataset_id, ²​scientific_name, ³​common_name, ⁴​site_name, ⁵​colony_name, ## # ⁶​lat_colony, ⁷​lon_colony, ⁸​track_id ## Then view the data in data frame format head(data.frame(df_sbtd_sf),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device bird_id track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt argos_quality equinox dttm bird_id_num lon_device ## 1 21:40:41 NA NA 2019-05-01 21:40:41 1 16.89058 ## 2 22:00:41 NA NA 2019-05-01 22:00:41 1 16.89750 ## lat_device geometry nlocs track_segment track_colour ## 1 42.81508 POINT (16.89058 42.81508) 1 track.start #66c2a5 ## 2 42.83751 POINT (16.8975 42.83751) 2 track.start #66c2a5 ## convert back to dataframe df_sbtd &lt;- df_sbtd_sf %&gt;% st_drop_geometry() %&gt;% data.frame() 4.6 track2KBA::formatFields() This function will help format your data to align with that required of track2KBA. In other words: for the track2KBA functions to work, your data needs to have certain columns named in the appropriate way. This function will help with that. ## Format the key data fields to the standard used in track2KBA dataGroup &lt;- formatFields( ## your input data.frame or tibble dataGroup = df_sbtd, ## ID of the animal you tracked fieldID = &quot;bird_id&quot;, ## date in GMT fieldDate = &quot;date_gmt&quot;, ## time in GMT fieldTime = &quot;time_gmt&quot;, ## longitude of device fieldLon = &quot;lon_device&quot;, ## latitude of device fieldLat = &quot;lat_device&quot; ) ## Check output. Output is a data.frame head(dataGroup) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 3 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 4 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 5 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 6 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 1 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 2 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 3 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 4 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 5 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## 6 tbc tbc GPS 19_Tag17652_Z-2 19_Tag17652_Z-2 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 2 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 3 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 4 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 5 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## 6 19_Tag17652_Z-2 adult unknown chick-rearing breeding 2019-05-01 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 1 21:40:41 NA NA 2019-05-01 21:40:41 1 16.89058 ## 2 22:00:41 NA NA 2019-05-01 22:00:41 1 16.89750 ## 3 22:20:41 NA NA 2019-05-01 22:20:41 1 16.89461 ## 4 22:40:41 NA NA 2019-05-01 22:40:41 1 16.89171 ## 5 23:00:41 NA NA 2019-05-01 23:00:41 1 16.88925 ## 6 23:20:41 NA NA 2019-05-01 23:20:41 1 16.88675 ## Latitude nlocs track_segment track_colour DateTime ## 1 42.81508 1 track.start #66c2a5 2019-05-01 21:40:41 ## 2 42.83751 2 track.start #66c2a5 2019-05-01 22:00:41 ## 3 42.83845 3 track.start #66c2a5 2019-05-01 22:20:41 ## 4 42.83960 4 track.start #66c2a5 2019-05-01 22:40:41 ## 5 42.84073 5 track.start #66c2a5 2019-05-01 23:00:41 ## 6 42.84221 6 track.start #66c2a5 2019-05-01 23:20:41 str(dataGroup) ## &#39;data.frame&#39;: 16692 obs. of 27 variables: ## $ dataset_id : chr &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; ... ## $ scientific_name : chr &quot;Puffinus yelkouan&quot; &quot;Puffinus yelkouan&quot; &quot;Puffinus yelkouan&quot; &quot;Puffinus yelkouan&quot; ... ## $ common_name : chr &quot;Yelkouan Shearwater&quot; &quot;Yelkouan Shearwater&quot; &quot;Yelkouan Shearwater&quot; &quot;Yelkouan Shearwater&quot; ... ## $ site_name : chr &quot;Lastovo SPA&quot; &quot;Lastovo SPA&quot; &quot;Lastovo SPA&quot; &quot;Lastovo SPA&quot; ... ## $ colony_name : chr &quot;Z&quot; &quot;Z&quot; &quot;Z&quot; &quot;Z&quot; ... ## $ lat_colony : chr &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; ... ## $ lon_colony : chr &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; ... ## $ device : chr &quot;GPS&quot; &quot;GPS&quot; &quot;GPS&quot; &quot;GPS&quot; ... ## $ ID : chr &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; ... ## $ track_id : chr &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; ... ## $ original_track_id: chr &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; &quot;19_Tag17652_Z-2&quot; ... ## $ age : chr &quot;adult&quot; &quot;adult&quot; &quot;adult&quot; &quot;adult&quot; ... ## $ sex : chr &quot;unknown&quot; &quot;unknown&quot; &quot;unknown&quot; &quot;unknown&quot; ... ## $ breed_stage : chr &quot;chick-rearing&quot; &quot;chick-rearing&quot; &quot;chick-rearing&quot; &quot;chick-rearing&quot; ... ## $ breed_status : chr &quot;breeding&quot; &quot;breeding&quot; &quot;breeding&quot; &quot;breeding&quot; ... ## $ date_gmt : Date, format: &quot;2019-05-01&quot; &quot;2019-05-01&quot; ... ## $ time_gmt : chr &quot;21:40:41&quot; &quot;22:00:41&quot; &quot;22:20:41&quot; &quot;22:40:41&quot; ... ## $ argos_quality : logi NA NA NA NA NA NA ... ## $ equinox : logi NA NA NA NA NA NA ... ## $ dttm : POSIXct, format: &quot;2019-05-01 21:40:41&quot; &quot;2019-05-01 22:00:41&quot; ... ## $ bird_id_num : num 1 1 1 1 1 1 1 1 2 1 ... ## $ Longitude : num 16.9 16.9 16.9 16.9 16.9 ... ## $ Latitude : num 42.8 42.8 42.8 42.8 42.8 ... ## $ nlocs : int 1 2 3 4 5 6 7 8 1 9 ... ## $ track_segment : chr &quot;track.start&quot; &quot;track.start&quot; &quot;track.start&quot; &quot;track.start&quot; ... ## $ track_colour : chr &quot;#66c2a5&quot; &quot;#66c2a5&quot; &quot;#66c2a5&quot; &quot;#66c2a5&quot; ... ## $ DateTime : POSIXct, format: &quot;2019-05-01 21:40:41&quot; &quot;2019-05-01 22:00:41&quot; ... 4.7 Quick visual inspection of your data Check your data is still correct spatially ## quick plot of all data for a quick overview dataGroup.plot &lt;- st_as_sf(dataGroup, coords = c(&quot;Longitude&quot;, &quot;Latitude&quot;), crs=4326) # 4326 = geographic WGS84 plot(st_geometry(dataGroup.plot), cex = 0.5, pch = 1) ## number of datapoints nrow(dataGroup) ## [1] 16692 ## interactive plot leaflet() %&gt;% ## start leaflet plot addProviderTiles(providers$Esri.WorldImagery, group = &quot;World Imagery&quot;) %&gt;% ## plot the points. Note: leaflet automatically finds lon / lat colonies ## Colour accordingly. addCircleMarkers(data = dataGroup, radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) 4.8 Define colony / origin of trips —- This supports application of the tripSplit function You must consider how you define your colony of origin for each of the tracked animals &quot;OPTION 1: Same unique colony for all birds&quot; ## [1] &quot;OPTION 1: Same unique colony for all birds&quot; ## example relates to a seabird during the breeding season, when the species ## is known to be a central place forager. Therefore, define the colony position ## based on the first longitude and latitude coordinates which SHOULD originate ## from the breeding colony if all birds tracke appropriately from the same colony colony &lt;- dataGroup %&gt;% summarise( Longitude = first(Longitude), Latitude = first(Latitude) ) ## head(colony) ## Longitude Latitude ## 1 16.89058 42.81508 ## Or, manually specify a unique Lon / Lat # colony &lt;- dataGroup %&gt;% # summarise( # Longitude = 16.875879, # Latitude = 42.774843 # ) &quot;OPTION 2: Specify unique colony or unique nest per bird&quot; ## [1] &quot;OPTION 2: Specify unique colony or unique nest per bird&quot; ## IF colony / nest locations vary more widely, then create unique dataframe ## for each bird / animal tracked. Specify a unique nesting location for each ## animal based on the first coordinate of the track. colony_nest &lt;- dataGroup %&gt;% group_by(ID) %&gt;% summarise( ID = first(ID), Longitude = first(Longitude), Latitude = first(Latitude) ) %&gt;% data.frame() ## head(colony_nest) ## ID Longitude Latitude ## 1 19_Tag17600_Z-9 16.88553 42.81153 ## 2 19_Tag17604_Z-7 16.87326 42.77418 ## 3 19_Tag17617_Z-4 (2nd Parent) 16.87622 42.77548 ## 4 19_Tag17644_Z-13 16.83204 42.82184 ## 5 19_Tag17652_Z-2 16.89058 42.81508 ## 6 19_Tag17704_Z-11 16.87335 42.77418 4.8.1 Are your colony locations where you expect them to be? For tripSplit to work best, you want the colony locations to reflect where the colony actually is. If you did not clean or prepare your data appropriately, it may be the case that the colony locations are specified incorrectly. If your colony locations are incorrectly placed, consider appropriate action. ## interactive plot - review where the individual colony location records ## were deemed to be. map &lt;- leaflet() %&gt;% ## start leaflet plot addProviderTiles(providers$Esri.WorldImagery, group = &quot;World Imagery&quot;) %&gt;% ## plot the points. Note: leaflet automatically finds lon / lat colonies ## Colour accordingly. addCircleMarkers(data = data.frame(dataGroup), radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot the colony locations from birds addCircleMarkers(data = data.frame(colony_nest), radius = 5, fillColor = &quot;red&quot;, fillOpacity = 0.5, stroke = F) map CONSIDER: Based on your review of the data and knowledge of the study sytem, are the colony locations where you expect them to be? If not, consider appropriate action. For example, create a new dataframe with the relevant colony locations for each tracked individual. [What other options exist to correct colony location data where required?] 4.9 Apply tripSplit() What does tripSplit do: [update text from track2KBA manuscript] When not to apply tripSplit(): “If your data does not relate to a central place forager (CPF), OR a time when an animal may be exhibiting central place foraging behaviours, then skip this section and those relating to CPF data.” How tripSplit() helps:”This step is often very useful to help automate the removal of location points on land, or near the vicinty of a colony. We don’t want these extra points to bias our interpretation of the data.” General considerations when applying tripSplit(): “The user must define ecologically sensible parameters to help automate the tripSplitting process.” ## Input is a &#39;data.frame&#39; of tracking data and the central-place location(s). ## Output is a &#39;SpatialPointsDataFrame&#39;. trips &lt;- tripSplit( dataGroup = dataGroup, colony = colony_nest, # define source location. innerBuff = 3, # km - defines distance an animal must travel to count as trip started returnBuff = 10, # km - defines distance an animal must be from the colony to have returned and thus completed a trip duration = 1, # hours - defines time an animal must have traveled away from the colony to count as a trip. helps remove glitches in data or very short trips that were likely not foraging trips. nests = T, # specify nests = T if using unique colony locations per animal, gapLimit = NULL, # The period of time between points (in days) to be considered too large to be a contiguous tracking event rmNonTrip = F # If true, points not associated with a trip will be removed / if false, points not associated with a trip will be kept ) &quot;NOTE: the messages that may relate to &#39;track .... does not return to the colony&#39;, is actually referring to the individual trips from each animal tracked. The code for track2KBA package needs to be revised to display an &#39;_&#39; between the track ID and the individual trip ID. So instead of reading something like 693041, it should read 69304_1, to better refer to trip 1 of track 69304.&quot; ## [1] &quot;NOTE: the messages that may relate to &#39;track .... does not return to the colony&#39;,\\nis actually referring to the individual trips from each animal tracked. The code\\nfor track2KBA package needs to be revised to display an &#39;_&#39; between the track ID \\nand the individual trip ID. So instead of reading something like 693041, it should\\nread 69304_1, to better refer to trip 1 of track 69304.&quot; ## Review data after tripSplit() head(trips,2) ## coordinates dataset_id scientific_name common_name ## 1 (16.8855, 42.8115) tbc Puffinus yelkouan Yelkouan Shearwater ## 2 (16.8869, 42.812) tbc Puffinus yelkouan Yelkouan Shearwater ## site_name colony_name lat_colony lon_colony device ID ## 1 Lastovo SPA Z tbc tbc GPS 19_Tag17600_Z-9 ## 2 Lastovo SPA Z tbc tbc GPS 19_Tag17600_Z-9 ## track_id original_track_id age sex breed_stage breed_status ## 1 19_Tag17600_Z-9 19_Tag17600_Z-9 adult unknown chick-rearing breeding ## 2 19_Tag17600_Z-9 19_Tag17600_Z-9 adult unknown chick-rearing breeding ## date_gmt time_gmt argos_quality equinox dttm bird_id_num ## 1 2019-05-24 00:49:09 NA NA 2019-05-24 00:49:09 15 ## 2 2019-05-24 01:09:03 NA NA 2019-05-24 01:09:03 15 ## Longitude Latitude nlocs track_segment track_colour DateTime ## 1 16.88553 42.81153 1 track.start #66c2a5 2019-05-24 00:49:09 ## 2 16.88691 42.81203 2 track.start #66c2a5 2019-05-24 01:09:03 ## tripID X Y Returns StartsOut ColDist ## 1 -1 16.88553 42.81153 0.000 ## 2 -1 16.88691 42.81203 125.552 ## Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84 ## +no_defs str(trips) ## Formal class &#39;SpatialPointsDataFrame&#39; [package &quot;sp&quot;] with 5 slots ## ..@ data :&#39;data.frame&#39;: 16692 obs. of 33 variables: ## .. ..$ dataset_id : chr [1:16692] &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; ... ## .. ..$ scientific_name : chr [1:16692] &quot;Puffinus yelkouan&quot; &quot;Puffinus yelkouan&quot; &quot;Puffinus yelkouan&quot; &quot;Puffinus yelkouan&quot; ... ## .. ..$ common_name : chr [1:16692] &quot;Yelkouan Shearwater&quot; &quot;Yelkouan Shearwater&quot; &quot;Yelkouan Shearwater&quot; &quot;Yelkouan Shearwater&quot; ... ## .. ..$ site_name : chr [1:16692] &quot;Lastovo SPA&quot; &quot;Lastovo SPA&quot; &quot;Lastovo SPA&quot; &quot;Lastovo SPA&quot; ... ## .. ..$ colony_name : chr [1:16692] &quot;Z&quot; &quot;Z&quot; &quot;Z&quot; &quot;Z&quot; ... ## .. ..$ lat_colony : chr [1:16692] &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; ... ## .. ..$ lon_colony : chr [1:16692] &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; &quot;tbc&quot; ... ## .. ..$ device : chr [1:16692] &quot;GPS&quot; &quot;GPS&quot; &quot;GPS&quot; &quot;GPS&quot; ... ## .. ..$ ID : chr [1:16692] &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; ... ## .. ..$ track_id : chr [1:16692] &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; ... ## .. ..$ original_track_id: chr [1:16692] &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; &quot;19_Tag17600_Z-9&quot; ... ## .. ..$ age : chr [1:16692] &quot;adult&quot; &quot;adult&quot; &quot;adult&quot; &quot;adult&quot; ... ## .. ..$ sex : chr [1:16692] &quot;unknown&quot; &quot;unknown&quot; &quot;unknown&quot; &quot;unknown&quot; ... ## .. ..$ breed_stage : chr [1:16692] &quot;chick-rearing&quot; &quot;chick-rearing&quot; &quot;chick-rearing&quot; &quot;chick-rearing&quot; ... ## .. ..$ breed_status : chr [1:16692] &quot;breeding&quot; &quot;breeding&quot; &quot;breeding&quot; &quot;breeding&quot; ... ## .. ..$ date_gmt : Date[1:16692], format: &quot;2019-05-24&quot; &quot;2019-05-24&quot; ... ## .. ..$ time_gmt : chr [1:16692] &quot;00:49:09&quot; &quot;01:09:03&quot; &quot;01:29:03&quot; &quot;01:49:09&quot; ... ## .. ..$ argos_quality : logi [1:16692] NA NA NA NA NA NA ... ## .. ..$ equinox : logi [1:16692] NA NA NA NA NA NA ... ## .. ..$ dttm : POSIXct[1:16692], format: &quot;2019-05-24 00:49:09&quot; &quot;2019-05-24 01:09:03&quot; ... ## .. ..$ bird_id_num : num [1:16692] 15 15 15 15 15 15 15 15 15 15 ... ## .. ..$ Longitude : num [1:16692] 16.9 16.9 16.9 16.9 16.9 ... ## .. ..$ Latitude : num [1:16692] 42.8 42.8 42.8 42.8 42.8 ... ## .. ..$ nlocs : int [1:16692] 1 2 3 4 5 6 7 8 9 10 ... ## .. ..$ track_segment : chr [1:16692] &quot;track.start&quot; &quot;track.start&quot; &quot;track.start&quot; &quot;track.start&quot; ... ## .. ..$ track_colour : chr [1:16692] &quot;#66c2a5&quot; &quot;#66c2a5&quot; &quot;#66c2a5&quot; &quot;#66c2a5&quot; ... ## .. ..$ DateTime : POSIXct[1:16692], format: &quot;2019-05-24 00:49:09&quot; &quot;2019-05-24 01:09:03&quot; ... ## .. ..$ tripID : chr [1:16692] &quot;-1&quot; &quot;-1&quot; &quot;-1&quot; &quot;-1&quot; ... ## .. ..$ X : num [1:16692] 16.9 16.9 16.9 16.9 16.9 ... ## .. ..$ Y : num [1:16692] 42.8 42.8 42.8 42.8 42.8 ... ## .. ..$ Returns : chr [1:16692] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## .. ..$ StartsOut : chr [1:16692] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## .. ..$ ColDist : num [1:16692] 0 126 226 379 767 ... ## ..@ coords.nrs : num(0) ## ..@ coords : num [1:16692, 1:2] 16.9 16.9 16.9 16.9 16.9 ... ## .. ..- attr(*, &quot;dimnames&quot;)=List of 2 ## .. .. ..$ : NULL ## .. .. ..$ : chr [1:2] &quot;dataGroup.Longitude&quot; &quot;dataGroup.Latitude&quot; ## ..@ bbox : num [1:2, 1:2] 12.4 41.6 19.1 45.8 ## .. ..- attr(*, &quot;dimnames&quot;)=List of 2 ## .. .. ..$ : chr [1:2] &quot;dataGroup.Longitude&quot; &quot;dataGroup.Latitude&quot; ## .. .. ..$ : chr [1:2] &quot;min&quot; &quot;max&quot; ## ..@ proj4string:Formal class &#39;CRS&#39; [package &quot;sp&quot;] with 1 slot ## .. .. ..@ projargs: chr &quot;+proj=longlat +datum=WGS84 +no_defs&quot; ## .. .. ..$ comment: chr &quot;GEOGCRS[\\&quot;unknown\\&quot;,\\n DATUM[\\&quot;World Geodetic System 1984\\&quot;,\\n ELLIPSOID[\\&quot;WGS 84\\&quot;,6378137,298.25722&quot;| __truncated__ table(trips$Returns) ## ## No Yes ## 652 3258 12782 4.9.1 Review of tripSplit() output In the example above, we specified rmNonTrip = F so as not remove any points not deems as associated with a trip. I.e. the points typically lying within the innerBuff distance and for those where the animal travelled for less than duration specified, Let’s review the general points we are not considering as part of trips. ## Simple plot of data after tripSplit &quot;NOTE: Will take time depending on size of dataset! Considering general plotting etiquetter when working with data in R.&quot; ## [1] &quot;NOTE: Will take time depending on size of dataset! Considering general plotting\\netiquetter when working with data in R.&quot; plot(st_geometry(st_as_sf(trips)), cex = 0.5, pch = 1) ## Split the locations into points to keep and those that will be removed (i.e. ## the points not associated with a trip) for visual plot of the tracks using leaflet package in R. points_to_keep &lt;- data.frame(trips) %&gt;% dplyr::filter(Returns %in% c(&quot;Yes&quot;, &quot;No&quot;)) ## points_to_remove &lt;- data.frame(trips) %&gt;% dplyr::filter(!Returns %in% c(&quot;Yes&quot;, &quot;No&quot;)) map &lt;- leaflet() %&gt;% ## start leaflet plot addProviderTiles(providers$Esri.WorldImagery, group = &quot;World Imagery&quot;) %&gt;% ## plot the points. Note: leaflet automatically finds lon / lat colonies ## Colour accordingly. addCircleMarkers(data = points_to_keep, radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## addCircleMarkers(data = points_to_remove, radius = 3, fillColor = &quot;red&quot;, fillOpacity = 0.5, stroke = F) map 4.9.2 Understanding what is happening in tripSplit() further Essentially, we are using a function that helps us bulk clean tracking data. The goal is to assign individual trips to multiple animals that have been tracked, and doing this in an automated way. Go back and change innerBuff and duration parameters in particular, and recreate the plot above showing the points not associated with a trip. See how changing the arguments impacts the likely data that will be removed for the analysis. You only want to remove (i.e. “clean up”) the points that are most likely not associated with a trip. 4.9.3 Review the individual trips for each tracked animal after applying tripSplit() A simple way to do this is with the mapTrips function. The plots show an overview of individual trips per bird. Only data for the first 25 birds is shown. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## track2KBA::mapTrips() ---- ## view data after splitting into trips ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## plot quick overview of trips recorded for individual birds (i.e. the plots show ## an overview of individual trips per bird). Only data for the first 25 birds is ## shown mapTrips(trips = trips, colony = colony_nest) ## If you want to map the trips from the next 25 animals tracked, use the IDs argument mapTrips(trips = trips, IDs = 26:50, colony = colony_nest) 4.9.4 Plot the individual trips for each tracked animal after applying tripSplit() If, after reviewing the simplified plots of individual trips for each tracked animal using the mapTrip() function you are not satisfied, then you should explore the relative data further. [One way of exploring the trips outputted for individually tracked animals would be to rapidly review summary plots for each trip, showing start, journey, and end points, where the point locations are also joined together with a line. Should consider inlcuding this plotting option. Perhaps also with option of specifying a vector of relative individuals.] 4.10 Keep points associated with complete trips only Keeping points associated with complete tracks only is the approach considred in the track2KBA online tutorial. But you may want to explore which tracks you are keeping or not. Here, the user should consider if too many individual trips have been removed. i.e. if you tracked 30 birds and you estimated to have approximately 3 trips recoreded per bird, then you would have a total of 90 trips. But it’s likely that on some trips, that not the entire trip was recorded (for multiple reasons). Therefore, you might expect to rather have about 83 trips recorded across all birds because for 7 trips data might not have indicated birds returned to the colony. If you had a very high proportion of trips that did not return to the colony, then it’s likely that you have defined the parameters incorrectly for tripSplit and you should reconsider better ecologically based estimates for these parameters. There is of course the chance that there are other issues with your data which would warrant more detailed exploration. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Keep points associated with individual trips ---- ## Filter the data to only keep the points associated with individual trips that ## were recognised as complete trips. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Let&#39;s first check how many trips we record as Yes vs. No before filtering head(trips,2) ## coordinates dataset_id scientific_name common_name ## 1 (16.8855, 42.8115) tbc Puffinus yelkouan Yelkouan Shearwater ## 2 (16.8869, 42.812) tbc Puffinus yelkouan Yelkouan Shearwater ## site_name colony_name lat_colony lon_colony device ID ## 1 Lastovo SPA Z tbc tbc GPS 19_Tag17600_Z-9 ## 2 Lastovo SPA Z tbc tbc GPS 19_Tag17600_Z-9 ## track_id original_track_id age sex breed_stage breed_status ## 1 19_Tag17600_Z-9 19_Tag17600_Z-9 adult unknown chick-rearing breeding ## 2 19_Tag17600_Z-9 19_Tag17600_Z-9 adult unknown chick-rearing breeding ## date_gmt time_gmt argos_quality equinox dttm bird_id_num ## 1 2019-05-24 00:49:09 NA NA 2019-05-24 00:49:09 15 ## 2 2019-05-24 01:09:03 NA NA 2019-05-24 01:09:03 15 ## Longitude Latitude nlocs track_segment track_colour DateTime ## 1 16.88553 42.81153 1 track.start #66c2a5 2019-05-24 00:49:09 ## 2 16.88691 42.81203 2 track.start #66c2a5 2019-05-24 01:09:03 ## tripID X Y Returns StartsOut ColDist ## 1 -1 16.88553 42.81153 0.000 ## 2 -1 16.88691 42.81203 125.552 ## Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84 ## +no_defs ## all locations associated with Return or not table(trips$Returns) ## ## No Yes ## 652 3258 12782 ## summary of trips associated with Return or not totalTripsAll &lt;- data.frame(trips) %&gt;% group_by(tripID, Returns) %&gt;% summarise(count = n()) %&gt;% data.frame(.) ## view summary result table(totalTripsAll$Returns) ## ## No Yes ## 1 23 339 ## NOW, Filter to only include trips that return trips.return.yes &lt;- subset(trips, trips$Returns == &quot;Yes&quot; ) totalTripsYes &lt;- data.frame(trips.return.yes) %&gt;% group_by(tripID, Returns) %&gt;% summarise(count = n()) %&gt;% data.frame(.) ## view summary result table(totalTripsYes$Returns) ## ## Yes ## 339 ## Filter for trips that do not reutrn trips.return.no &lt;- subset(trips, trips$Returns == &quot;No&quot; ) totalTripsNo &lt;- data.frame(trips.return.no) %&gt;% group_by(tripID, Returns) %&gt;% summarise(count = n()) %&gt;% data.frame(.) ## view summary result table(totalTripsNo$Returns) ## ## No ## 23 ## CONSIDER and compare: total trips that returned vs. did not: table(totalTripsYes$Returns) ## ## Yes ## 339 table(totalTripsNo$Returns) ## ## No ## 23 &quot;Here, the user should consider if too many individual trips have been removed. i.e. if you tracked 30 birds and you estimated to have approximately 3 trips recoreded per bird, then you would have a total of 90 trips. But it&#39;s likely that on some trips, that not the entire trip was recorded (for multiple reasons). Therefore, you might expect to rather have about 83 trips recorded across all birds because for 7 trips data might not have indicated birds returned to the colony. If you had a very high proportion of trips that did not return to the colony, then it&#39;s likely that you have defined the parameters incorrectly for tripSplit and you should reconsider better ecologically based estimates for these parameters. There is of course the chance that there are other issues with your data.&quot; ## [1] &quot;Here, the user should consider if too many individual trips have been removed.\\ni.e. if you tracked 30 birds and you estimated to have approximately 3 trips \\nrecoreded per bird, then you would have a total of 90 trips. But it&#39;s likely that\\non some trips, that not the entire trip was recorded (for multiple reasons).\\nTherefore, you might expect to rather have about 83 trips recorded across all\\nbirds because for 7 trips data might not have indicated birds returned to the colony.\\nIf you had a very high proportion of trips that did not return to the colony, then\\nit&#39;s likely that you have defined the parameters incorrectly for tripSplit and you\\nshould reconsider better ecologically based estimates for these parameters. There\\nis of course the chance that there are other issues with your data.&quot; 4.10.1 Review points associated with complete trips only If you want to explore further the trips that were not considered to have returned, then use the object above, trips.return.no, to investigate the individual trips further. E.g. through individual plotting. For our example, we have 339 complete trips and 23 incomplete trips. We continue to use only the complete trips. ## rename the object to align better with further components of the script trips &lt;- trips.return.yes 4.11 Sampling interval assessment To implement track2KBA fully, you need data approximating an even sampling interval i.e. location points must be regularly spaced in time. Determine how “gappy” the tracking data is (time intervals between location data) This is an important step for almost all tracking data analyses. If your data is not filtered / cleaned correctly, results may be spurious. #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Check sampling interval ---- #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## data for summarising head(data.frame(trips),2) ## dataset_id scientific_name common_name site_name colony_name ## 8 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 9 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 8 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## 9 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## original_track_id age sex breed_stage breed_status date_gmt ## 8 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## 9 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 8 03:09:05 NA NA 2019-05-24 03:09:05 15 16.87569 ## 9 03:29:05 NA NA 2019-05-24 03:29:05 15 16.84299 ## Latitude nlocs track_segment track_colour DateTime ## 8 42.86363 8 track.start #66c2a5 2019-05-24 03:09:05 ## 9 42.88915 9 track.start #66c2a5 2019-05-24 03:29:05 ## tripID X Y Returns StartsOut ColDist ## 8 19_Tag17600_Z-9_01 16.87569 42.86363 Yes 5843.850 ## 9 19_Tag17600_Z-9_01 16.84299 42.88915 Yes 9297.407 ## dataGroup.Longitude dataGroup.Latitude optional ## 8 16.87569 42.86363 TRUE ## 9 16.84299 42.88915 TRUE table(trips$Returns) ## ## Yes ## 12782 ## Determine difference between consecutive timestamps ## (NB: consecutive order of timestamps is critical here!) ## Doing this by tripID, not individual ID - change the group_by argument if needed timeDiff &lt;- trips %&gt;% data.frame() %&gt;% group_by(tripID) %&gt;% arrange(DateTime) %&gt;% mutate(delta_secs = as.numeric(difftime(DateTime, lag(DateTime, default = first(DateTime)), units = &quot;secs&quot;))) %&gt;% slice(2:n()) head(data.frame(timeDiff),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 1 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## 2 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## 2 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 1 03:29:05 NA NA 2019-05-24 03:29:05 15 16.84299 ## 2 06:47:38 NA NA 2019-05-24 06:47:38 15 16.86741 ## Latitude nlocs track_segment track_colour DateTime ## 1 42.88915 9 track.start #66c2a5 2019-05-24 03:29:05 ## 2 42.88774 10 track.start #66c2a5 2019-05-24 06:47:38 ## tripID X Y Returns StartsOut ColDist ## 1 19_Tag17600_Z-9_01 16.84299 42.88915 Yes 9297.407 ## 2 19_Tag17600_Z-9_01 16.86741 42.88774 Yes 8595.309 ## dataGroup.Longitude dataGroup.Latitude optional delta_secs ## 1 16.84299 42.88915 TRUE 1200 ## 2 16.86741 42.88774 TRUE 11913 hist(timeDiff$delta_secs) ## plot histogram of timediff between all points &quot;This plot will take time depending on size of dataset!&quot; ## [1] &quot;This plot will take time depending on size of dataset!&quot; p4 &lt;- ggplot(timeDiff , aes(delta_secs)) + geom_histogram(colour = &quot;darkgrey&quot;, fill = &quot;cyan&quot;, binwidth = 200)+ theme( axis.text=element_text(size=14, color=&quot;black&quot;), axis.title=element_text(size=16), panel.background=element_rect(fill=&quot;white&quot;, colour=&quot;black&quot;)) + ylab(&quot;n locations&quot;) + xlab(&quot;Time diff between locations (secs)&quot;) p4 ## Summarise results by tripID SummaryTimeDiff &lt;- timeDiff %&gt;% group_by(tripID) %&gt;% summarise(mean_timegap_secs = mean(delta_secs), median_timegap_secs = median(delta_secs), min_timegap_secs = min(delta_secs), max_timegap_secs = max(delta_secs)) %&gt;% ## time in days mutate(max_timegap_days = max_timegap_secs / 86400) %&gt;% mutate(max_timegap_days = round(max_timegap_days,2)) %&gt;% data.frame() ## View results SummaryTimeDiff ## tripID mean_timegap_secs median_timegap_secs ## 1 19_Tag17600_Z-9_01 17176.400 5238.0 ## 2 19_Tag17600_Z-9_02 10515.245 1205.0 ## 3 19_Tag17600_Z-9_03 6244.654 1210.0 ## 4 19_Tag17600_Z-9_04 6181.354 1206.0 ## 5 19_Tag17600_Z-9_05 5550.120 1205.0 ## 6 19_Tag17604_Z-7_01 3736.241 1800.0 ## 7 19_Tag17604_Z-7_02 4989.647 1374.0 ## 8 19_Tag17604_Z-7_03 13253.737 1837.0 ## 9 19_Tag17604_Z-7_04 20578.500 5942.0 ## 10 19_Tag17604_Z-7_05 12556.550 9027.5 ## 11 19_Tag17604_Z-7_06 13171.800 8575.0 ## 12 19_Tag17604_Z-7_07 7773.111 6834.0 ## 13 19_Tag17617_Z-4 (2nd Parent)_01 2414.543 2400.0 ## 14 19_Tag17617_Z-4 (2nd Parent)_02 3036.353 2403.0 ## 15 19_Tag17617_Z-4 (2nd Parent)_03 4267.900 2411.5 ## 16 19_Tag17617_Z-4 (2nd Parent)_04 4381.053 2509.0 ## 17 19_Tag17617_Z-4 (2nd Parent)_05 3476.778 2468.0 ## 18 19_Tag17644_Z-13_01 7790.036 1204.0 ## 19 19_Tag17644_Z-13_02 21398.000 12793.0 ## 20 19_Tag17644_Z-13_03 5847.250 1200.5 ## 21 19_Tag17644_Z-13_04 6273.687 1295.5 ## 22 19_Tag17652_Z-2_01 1801.019 1205.0 ## 23 19_Tag17652_Z-2_02 1904.231 1425.0 ## 24 19_Tag17652_Z-2_03 1220.615 1202.0 ## 25 19_Tag17652_Z-2_04 1505.389 1203.5 ## 26 19_Tag17652_Z-2_05 9402.333 3009.0 ## 27 19_Tag17652_Z-2_06 4773.706 2435.0 ## 28 19_Tag17652_Z-2_07 4167.000 4167.0 ## 29 19_Tag17652_Z-2_08 3749.750 2406.5 ## 30 19_Tag17652_Z-2_09 2848.852 2401.0 ## 31 19_Tag17652_Z-2_10 4051.300 2473.5 ## 32 19_Tag17652_Z-2_11 6042.769 4795.0 ## 33 19_Tag17652_Z-2_12 4115.794 3601.0 ## 34 19_Tag17652_Z-2_13 4643.583 3772.5 ## 35 19_Tag17652_Z-2_14 4264.878 3605.0 ## 36 19_Tag17652_Z-2_15 3990.467 3605.0 ## 37 19_Tag17704_Z-11_01 2408.000 1203.0 ## 38 19_Tag17704_Z-11_02 5080.917 1241.0 ## 39 19_Tag17704_Z-11_03 5524.938 1917.5 ## 40 19_Tag17704_Z-11_04 16891.667 4217.0 ## 41 19_Tag17704_Z-11_05 11879.857 3642.0 ## 42 19_Tag17704_Z-11_06 4662.700 2611.0 ## 43 19_Tag17704_Z-11_07 10056.240 2404.0 ## 44 19_Tag17704_Z-11_08 15637.510 6667.0 ## 45 19_Tag40066_Z-14_01 1525.173 1205.0 ## 46 19_Tag40066_Z-14_02 1716.656 1214.0 ## 47 19_Tag40066_Z-14_03 11498.143 6846.0 ## 48 19_Tag40066_Z-14_04 8553.556 3148.0 ## 49 19_Tag40066_Z-14_05 13925.667 7319.5 ## 50 19_Tag40066_Z-14_06 10006.929 2458.5 ## 51 19_Tag40066_Z-14_07 4893.909 4651.0 ## 52 19_Tag40066_Z-14_08 7276.625 5427.0 ## 53 19_Tag40066_Z-14_09 24621.200 16541.0 ## 54 19_Tag40066_Z-14_10 17857.750 15783.0 ## 55 19_Tag40066_Z-14_11 26857.000 26857.0 ## 56 19_Tag40066_Z-14_12 10009.533 7710.0 ## 57 19_Tag40069_Z-6_01 3044.882 2498.0 ## 58 19_Tag40069_Z-6_02 7884.909 2651.0 ## 59 19_Tag40069_Z-6_03 4903.750 2702.5 ## 60 19_Tag40069_Z-6_04 3735.733 2929.0 ## 61 19_Tag40069_Z-6_05 5886.867 3821.0 ## 62 19_Tag40069_Z-6_06 4808.955 3609.5 ## 63 19_Tag40069_Z-6_07 3666.000 3666.0 ## 64 19_Tag40069_Z-6_08 5206.375 3601.0 ## 65 19_Tag40069_Z-6_09 4646.615 3622.0 ## 66 19_Tag40069_Z-6_10 5341.417 4489.0 ## 67 19_Tag40069_Z-6_11 12077.000 12077.0 ## 68 19_Tag40069_Z-6_12 5459.533 4056.0 ## 69 19_Tag40069_Z-6_13 5144.727 4430.0 ## 70 19_Tag40069_Z-6_14 6853.917 4187.0 ## 71 19_Tag40069_Z-6_15 5479.633 3619.0 ## 72 19_Tag40069_Z-6_16 5311.917 3870.5 ## 73 19_Tag40069_Z-6_17 8575.000 8575.0 ## 74 19_Tag40069_Z-6_18 8981.143 5370.0 ## 75 19_Tag40073_Z-1_01 1494.159 1201.0 ## 76 19_Tag40073_Z-1_02 1520.316 1205.0 ## 77 19_Tag40073_Z-1_03 1498.300 1207.0 ## 78 19_Tag40073_Z-1_04 3490.312 2566.5 ## 79 19_Tag40073_Z-1_05 2872.857 2446.0 ## 80 19_Tag40073_Z-1_06 3482.125 2402.0 ## 81 19_Tag40073_Z-1_07 4040.200 2642.0 ## 82 19_Tag40073_Z-1_08 2606.423 2400.5 ## 83 19_Tag40073_Z-1_09 3380.526 2411.0 ## 84 19_Tag40073_Z-1_10 3303.432 2404.5 ## 85 19_Tag40073_Z-1_11 2912.920 2402.0 ## 86 19_Tag40073_Z-1_12 2896.700 2401.0 ## 87 19_Tag40073_Z-1_13 3366.444 2580.0 ## 88 19_Tag40073_Z-1_14 3538.562 2420.0 ## 89 19_Tag40073_Z-1_15 4249.500 2890.5 ## 90 19_Tag40073_Z-1_16 3621.456 2412.0 ## 91 19_Tag40078_Z-3 (2nd Parent)_01 2027.315 1203.5 ## 92 19_Tag40086_Z-11 (2nd Parent)_01 3722.130 1845.0 ## 93 19_Tag40086_Z-11 (2nd Parent)_02 4614.615 1401.0 ## 94 19_Tag40086_Z-11 (2nd Parent)_03 10806.928 2414.5 ## 95 19_Tag40094_Z-16_01 27518.833 5329.0 ## 96 19_Tag40118_Z-2 (2nd Parent)_01 1200.429 1200.0 ## 97 19_Tag40118_Z-2 (2nd Parent)_02 2690.682 1395.5 ## 98 19_Tag40118_Z-2 (2nd Parent)_03 2958.060 1253.5 ## 99 19_Tag40118_Z-2 (2nd Parent)_04 3131.810 1980.0 ## 100 19_Tag40118_Z-2 (2nd Parent)_05 4280.714 1715.5 ## 101 19_Tag40118_Z-2 (2nd Parent)_06 3102.400 1205.5 ## 102 19_Tag40118_Z-2 (2nd Parent)_07 2537.022 1205.0 ## 103 19_Tag40118_Z-2 (2nd Parent)_08 3289.526 1200.0 ## 104 19_Tag40118_Z-2 (2nd Parent)_09 3922.474 1206.0 ## 105 19_Tag40118_Z-2 (2nd Parent)_10 3948.250 1205.5 ## 106 19_Tag40118_Z-2 (2nd Parent)_11 40074.500 40074.5 ## 107 19_Tag40118_Z-2 (2nd Parent)_12 28924.000 28924.0 ## 108 19_Tag40118_Z-2 (2nd Parent)_13 8011.875 4376.0 ## 109 19_Tag40118_Z-2 (2nd Parent)_14 6705.600 3642.0 ## 110 19_Tag40133_Z-15_01 1219.333 1199.0 ## 111 19_Tag40133_Z-15_02 6702.286 4861.0 ## 112 19_Tag40133_Z-15_03 10415.531 2401.5 ## 113 19_Tag40133_Z-15_04 15623.500 15623.5 ## 114 19_Tag40133_Z-15_05 49691.000 49691.0 ## 115 19_Tag40133_Z-15_06 10209.000 9865.5 ## 116 19_Tag40133_Z-15_07 28881.000 28881.0 ## 117 19_Tag40133_Z-15_08 3803.417 2735.5 ## 118 19_Tag40133_Z-15_09 3838.000 2400.0 ## 119 19_Tag40133_Z-15_10 9845.857 5396.0 ## 120 19_Tag40133_Z-15_11 12310.333 6662.5 ## 121 19_Tag40133_Z-15_12 75399.000 75399.0 ## 122 19_Tag40138_Z-17_01 8166.700 1496.0 ## 123 19_Tag40138_Z-17_02 75736.000 75736.0 ## 124 19_Tag40138_Z-17_03 5900.810 1203.0 ## 125 19_Tag40138_Z-17_04 9391.528 2612.0 ## 126 19_Tag40138_Z-17_05 10576.267 6170.0 ## 127 19_Tag40138_Z-17_06 7073.082 3707.0 ## 128 19_Tag40170_Z-12_01 1287.101 1200.0 ## 129 19_Tag40170_Z-12_02 1200.152 1200.0 ## 130 19_Tag40170_Z-12_03 9131.667 1200.0 ## 131 19_Tag40170_Z-12_04 2500.083 2400.0 ## 132 19_Tag40170_Z-12_05 2799.542 2400.0 ## 133 19_Tag40170_Z-12_06 2400.038 2400.0 ## 134 19_Tag40170_Z-12_07 2584.654 2400.0 ## 135 19_Tag40170_Z-12_08 3400.167 2400.0 ## 136 19_Tag40170_Z-12_09 2817.652 2400.0 ## 137 19_Tag40170_Z-12_10 2492.077 2399.0 ## 138 19_Tag40170_Z-12_11 3599.810 3600.0 ## 139 19_Tag40170_Z-12_12 3599.714 3600.0 ## 140 19_Tag40177_Z-17 (2nd Parent)_01 4942.647 1802.0 ## 141 19_Tag40177_Z-17 (2nd Parent)_02 2959.158 2518.0 ## 142 19_Tag40177_Z-17 (2nd Parent)_03 6001.667 1224.0 ## 143 19_Tag40177_Z-17 (2nd Parent)_04 4441.278 1618.5 ## 144 19_Tag40177_Z-17 (2nd Parent)_05 2616.299 1204.0 ## 145 19_Tag40177_Z-17 (2nd Parent)_06 4764.471 2532.0 ## 146 19_Tag40177_Z-17 (2nd Parent)_07 3056.421 1978.0 ## 147 19_Tag40177_Z-17 (2nd Parent)_08 3085.045 1707.5 ## 148 19_Tag40177_Z-17 (2nd Parent)_09 3947.333 1958.0 ## 149 19_Tag40177_Z-17 (2nd Parent)_10 2872.167 1203.0 ## 150 19_Tag40182_Z-4_01 2400.304 2400.0 ## 151 19_Tag40182_Z-4_02 2401.857 2401.0 ## 152 19_Tag40182_Z-4_03 2428.333 2410.0 ## 153 19_Tag40182_Z-4_04 3447.333 2407.0 ## 154 19_Tag40182_Z-4_05 5329.778 3695.0 ## 155 19_Tag40182_Z-4_06 5353.962 3605.0 ## 156 19_Tag40182_Z-4_07 4838.156 3602.5 ## 157 19_Tag40182_Z-4_08 4521.000 4521.0 ## 158 19_Tag40182_Z-4_09 5304.286 3914.5 ## 159 19_Tag40182_Z-4_10 4991.417 4472.5 ## 160 19_Tag40182_Z-4_11 4165.682 3603.0 ## 161 19_Tag40182_Z-4_12 4737.417 3716.0 ## 162 19_Tag40182_Z-4_13 5813.400 4780.0 ## 163 19_Tag40182_Z-4_14 6823.083 3839.0 ## 164 19_Tag40182_Z-4_15 9214.333 7624.0 ## 165 19_Tag40182_Z-4_16 12042.600 7651.0 ## 166 20_Tag17600_Z-170_01 1205.800 1199.0 ## 167 20_Tag17600_Z-170_02 3164.154 1391.5 ## 168 20_Tag17600_Z-170_03 4224.171 2039.0 ## 169 20_Tag17600_Z-170_04 4349.417 1205.5 ## 170 20_Tag17600_Z-170_05 3074.974 1736.5 ## 171 20_Tag17600_Z-170_06 3897.357 1564.0 ## 172 20_Tag17600_Z-170_07 2908.000 1655.5 ## 173 20_Tag17600_Z-170_08 4475.000 1350.0 ## 174 20_Tag17600_Z-170_09 5511.344 2898.5 ## 175 20_Tag17604_Z-95_01 1787.593 1203.0 ## 176 20_Tag17604_Z-95_02 3089.667 3128.0 ## 177 20_Tag17604_Z-95_03 3316.889 2393.0 ## 178 20_Tag17604_Z-95_04 3858.625 1669.5 ## 179 20_Tag17604_Z-95_05 5392.000 1225.0 ## 180 20_Tag17604_Z-95_06 14325.833 9909.5 ## 181 20_Tag17604_Z-95_07 14322.917 1202.0 ## 182 20_Tag17604_Z-95_08 17106.700 3928.0 ## 183 20_Tag17604_Z-95_09 39764.125 27286.5 ## 184 20_Tag17604_Z-95_10 10922.375 5613.0 ## 185 20_Tag17604_Z-95_11 7002.000 3518.0 ## 186 20_Tag17604_Z-95_12 7439.091 2574.0 ## 187 20_Tag17604_Z-95_13 13777.500 1321.5 ## 188 20_Tag17604_Z-95_14 5065.812 2677.0 ## 189 20_Tag17604_Z-95_15 6847.417 1850.5 ## 190 20_Tag17604_Z-95_16 6279.462 1889.0 ## 191 20_Tag17604_Z-95_17 3894.650 1202.5 ## 192 20_Tag17644_Z-106_01 4796.806 1202.0 ## 193 20_Tag17677_Z-170 (2nd Parent)_01 25912.167 5324.0 ## 194 20_Tag17677_Z-170 (2nd Parent)_02 4448.920 1201.0 ## 195 20_Tag17677_Z-170 (2nd Parent)_03 8044.381 1202.0 ## 196 20_Tag17700_VM-13_01 25912.167 5324.0 ## 197 20_Tag17700_VM-13_02 2747.148 1201.0 ## 198 20_Tag17717_VM-8_01 1200.894 1200.0 ## 199 20_Tag17717_VM-8_02 1198.750 1199.0 ## 200 20_Tag17717_VM-8_03 1952.734 2397.0 ## 201 20_Tag17717_VM-8_04 15581.000 15581.0 ## 202 20_Tag17717_VM-8_05 3755.067 1224.0 ## 203 20_Tag40024_Z-178 (2nd Parent)_01 1441.245 1206.0 ## 204 20_Tag40024_Z-178 (2nd Parent)_02 1864.870 1202.0 ## 205 20_Tag40024_Z-178 (2nd Parent)_03 6828.833 1481.5 ## 206 20_Tag40024_Z-178 (2nd Parent)_04 2555.654 1340.5 ## 207 20_Tag40024_Z-178 (2nd Parent)_05 3116.833 1230.5 ## 208 20_Tag40024_Z-178 (2nd Parent)_06 5493.867 1200.0 ## 209 20_Tag40024_Z-178 (2nd Parent)_07 38541.000 38541.0 ## 210 20_Tag40024_Z-178 (2nd Parent)_08 3589.983 1202.0 ## 211 20_Tag40024_Z-178 (2nd Parent)_09 5002.462 1204.0 ## 212 20_Tag40024_Z-178 (2nd Parent)_10 9788.000 5207.0 ## 213 20_Tag40024_Z-178 (2nd Parent)_11 6812.750 1201.5 ## 214 20_Tag40024_Z-178 (2nd Parent)_12 8949.263 1205.0 ## 215 20_Tag40024_Z-178 (2nd Parent)_13 8480.750 3830.5 ## 216 20_Tag40024_Z-178 (2nd Parent)_14 13700.667 11294.0 ## 217 20_Tag40039_Z-15 (2nd Parent)_01 1574.341 1203.0 ## 218 20_Tag40039_Z-15 (2nd Parent)_02 1350.583 1205.0 ## 219 20_Tag40039_Z-15 (2nd Parent)_03 2142.097 1242.0 ## 220 20_Tag40039_Z-15 (2nd Parent)_04 1844.829 1203.0 ## 221 20_Tag40039_Z-15 (2nd Parent)_05 2311.250 1205.0 ## 222 20_Tag40039_Z-15 (2nd Parent)_06 2856.207 2399.0 ## 223 20_Tag40039_Z-15 (2nd Parent)_07 3879.864 2406.0 ## 224 20_Tag40039_Z-15 (2nd Parent)_08 3736.045 2585.5 ## 225 20_Tag40039_Z-15 (2nd Parent)_09 3809.077 2554.0 ## 226 20_Tag40039_Z-15 (2nd Parent)_10 3522.044 2814.0 ## 227 20_Tag40039_Z-15 (2nd Parent)_11 3163.830 1205.0 ## 228 20_Tag40039_Z-15 (2nd Parent)_12 2663.769 1540.5 ## 229 20_Tag40039_Z-15 (2nd Parent)_13 4247.176 1205.0 ## 230 20_Tag40073_Z-131 (2nd Parent)_01 1606.889 1208.0 ## 231 20_Tag40073_Z-131 (2nd Parent)_02 2872.000 1200.0 ## 232 20_Tag40073_Z-131 (2nd Parent)_03 2108.111 1621.0 ## 233 20_Tag40073_Z-131 (2nd Parent)_04 9641.500 9641.5 ## 234 20_Tag40073_Z-131 (2nd Parent)_05 1698.697 1393.0 ## 235 20_Tag40073_Z-131 (2nd Parent)_06 6557.250 1202.5 ## 236 20_Tag40073_Z-131 (2nd Parent)_07 2876.368 2318.0 ## 237 20_Tag40073_Z-131 (2nd Parent)_08 3945.086 2539.0 ## 238 20_Tag40078_Z-178_01 1923.118 1238.5 ## 239 20_Tag40078_Z-178_02 2184.100 1203.5 ## 240 20_Tag40078_Z-178_03 1951.657 1213.0 ## 241 20_Tag40078_Z-178_04 2739.000 1474.5 ## 242 20_Tag40086_VM-3_01 4819.417 3947.0 ## 243 20_Tag40086_VM-3_02 19216.000 19216.0 ## 244 20_Tag40086_VM-3_03 13201.833 7608.0 ## 245 20_Tag40086_VM-3_04 12680.000 6973.0 ## 246 20_Tag40086_VM-3_05 14397.000 14397.0 ## 247 20_Tag40086_VM-3_06 16091.400 14005.0 ## 248 20_Tag40086_VM-3_07 25770.000 25770.0 ## 249 20_Tag40086_VM-3_08 7810.125 4333.0 ## 250 20_Tag40086_VM-3_09 39924.500 39924.5 ## 251 20_Tag40086_VM-3_10 25419.000 26165.0 ## 252 20_Tag40086_VM-3_11 23519.000 16791.0 ## 253 20_Tag40086_VM-3_12 11851.286 7135.5 ## 254 20_Tag40086_VM-3_13 7085.400 6319.0 ## 255 20_Tag40086_VM-3_14 4201.000 4201.0 ## 256 20_Tag40086_VM-3_15 11854.800 2645.0 ## 257 20_Tag40094_Z-131_01 2015.617 1204.0 ## 258 20_Tag40094_Z-131_02 3167.808 1535.5 ## 259 20_Tag40094_Z-131_03 5717.041 1205.0 ## 260 20_Tag40094_Z-131_04 5678.400 1202.0 ## 261 20_Tag40094_Z-131_05 2924.414 1204.0 ## 262 20_Tag40094_Z-131_06 5115.867 1766.5 ## 263 20_Tag40094_Z-131_07 3957.115 1206.0 ## 264 20_Tag40118_Z-175_01 4240.474 1508.0 ## 265 20_Tag40118_Z-175_02 3808.000 2258.0 ## 266 20_Tag40118_Z-175_03 4741.235 2154.0 ## 267 20_Tag40118_Z-175_04 4200.750 1614.0 ## 268 20_Tag40118_Z-175_05 7294.452 2921.0 ## 269 20_Tag40118_Z-175_06 6934.875 4584.5 ## 270 20_Tag40118_Z-175_07 2307.333 2020.0 ## 271 20_Tag40118_Z-175_08 4400.000 1799.5 ## 272 20_Tag40118_Z-175_09 4897.795 2766.0 ## 273 20_Tag40118_Z-175_10 3861.209 2399.0 ## 274 20_Tag40118_Z-175_11 2834.000 2420.0 ## 275 20_Tag40118_Z-175_12 2237.107 1257.0 ## 276 20_Tag40118_Z-175_13 3481.348 1200.0 ## 277 20_Tag40133_Z-1 (2nd Parent)_01 1986.713 1205.5 ## 278 20_Tag40133_Z-1 (2nd Parent)_02 3058.604 2401.0 ## 279 20_Tag40133_Z-1 (2nd Parent)_03 3777.054 2437.0 ## 280 20_Tag40133_Z-1 (2nd Parent)_04 2811.222 2403.0 ## 281 20_Tag40133_Z-1 (2nd Parent)_05 7196.500 7194.5 ## 282 20_Tag40133_Z-1 (2nd Parent)_06 3542.143 2671.5 ## 283 20_Tag40133_Z-1 (2nd Parent)_07 3176.528 2401.0 ## 284 20_Tag40133_Z-1 (2nd Parent)_08 3257.736 2401.0 ## 285 20_Tag40138_VM-18_01 9965.000 9965.0 ## 286 20_Tag40138_VM-18_02 56957.000 56957.0 ## 287 20_Tag40138_VM-18_03 62612.000 62612.0 ## 288 20_Tag40138_VM-18_04 36780.500 40576.0 ## 289 20_Tag40138_VM-18_05 6402.417 1200.0 ## 290 20_Tag40138_VM-18_06 3884.941 1432.0 ## 291 20_Tag40138_VM-18_07 4376.500 1204.5 ## 292 20_Tag40138_VM-18_08 3136.694 1201.0 ## 293 20_Tag40138_VM-18_09 4590.459 1201.0 ## 294 20_Tag40138_VM-18_10 6505.462 2409.0 ## 295 20_Tag40138_VM-18_11 5102.136 1282.0 ## 296 20_Tag40138_VM-18_12 3492.320 1205.0 ## 297 20_Tag40138_VM-18_13 7319.870 1578.0 ## 298 20_Tag40193_Z-13 (2nd Parent)_01 14524.074 3764.5 ## 299 20_Tag40536_VM-8 (2nd Parent)_01 3238.480 2401.0 ## 300 20_Tag40536_VM-8 (2nd Parent)_02 6899.515 2599.5 ## 301 20_Tag40817_VM-12_01 3504.353 1200.0 ## 302 20_Tag40817_VM-12_02 9497.033 1788.0 ## 303 20_Tag40817_VM-12_03 3118.061 1204.0 ## 304 20_Tag40859_Z-179_01 27265.692 9569.0 ## 305 20_Tag41108_Z-95 (2nd Parent)_01 1655.193 1204.0 ## 306 20_Tag41108_Z-95 (2nd Parent)_02 2387.656 1699.5 ## 307 20_Tag41108_Z-95 (2nd Parent)_03 2118.100 1353.0 ## 308 20_Tag41108_Z-95 (2nd Parent)_04 2433.727 1213.0 ## 309 20_Tag41108_Z-95 (2nd Parent)_05 2899.682 1989.5 ## 310 20_Tag41108_Z-95 (2nd Parent)_06 3301.208 1864.0 ## 311 20_Tag41108_Z-95 (2nd Parent)_07 5223.438 3618.0 ## 312 20_Tag41108_Z-95 (2nd Parent)_08 3060.900 2405.5 ## 313 20_Tag41108_Z-95 (2nd Parent)_09 3462.789 2989.0 ## 314 20_Tag41108_Z-95 (2nd Parent)_10 3470.837 2418.0 ## 315 20_Tag41108_Z-95 (2nd Parent)_11 3280.333 2567.0 ## 316 20_Tag41108_Z-95 (2nd Parent)_12 4370.357 3225.0 ## 317 20_Tag41108_Z-95 (2nd Parent)_13 8521.100 3701.5 ## 318 20_Tag41108_Z-95 (2nd Parent)_14 8307.733 4064.0 ## 319 20_Tag41108_Z-95 (2nd Parent)_15 5898.636 2621.0 ## 320 20_Tag41108_Z-95 (2nd Parent)_16 9935.800 5822.0 ## 321 21_Tag41220_VR-1_01 1314.837 1199.0 ## 322 21_Tag41220_VR-1_02 2536.229 2399.0 ## 323 21_Tag41220_VR-1_03 2894.517 2399.0 ## 324 21_Tag41220_VR-1_04 2632.097 2400.0 ## 325 21_Tag41220_VR-1_05 2469.779 2399.0 ## 326 21_Tag41220_VR-1_06 2590.313 2400.0 ## 327 21_Tag41220_VR-1_07 2398.242 2399.0 ## 328 21_Tag41220_VR-1_08 2436.315 2400.0 ## 329 21_Tag41220_VR-1_09 2399.078 2399.0 ## 330 21_Tag41220_VR-1_10 2436.803 2399.0 ## 331 21_Tag41220_VR-1_11 2480.033 2399.0 ## 332 21_Tag41220_VR-1_12 2470.358 2399.0 ## 333 21_Tag41220_VR-1_13 2833.995 2401.0 ## 334 21_Tag41220_VR-1_14 3998.611 3600.0 ## 335 21_Tag41220_VR-1_15 3847.253 3599.0 ## 336 21_Tag41220_VR-1_16 3762.636 3599.0 ## 337 21_Tag41220_VR-1_17 4060.385 3599.0 ## 338 21_Tag41220_VR-1_18 3682.767 3599.0 ## 339 21_Tag41220_VR-1_19 3689.075 3599.0 ## min_timegap_secs max_timegap_secs max_timegap_days ## 1 1200 62764 0.73 ## 2 1194 87842 1.02 ## 3 1196 36975 0.43 ## 4 1194 82303 0.95 ## 5 1193 80386 0.93 ## 6 1199 25328 0.29 ## 7 1200 38230 0.44 ## 8 1195 79438 0.92 ## 9 2894 73544 0.85 ## 10 2397 31853 0.37 ## 11 3135 35060 0.41 ## 12 2398 14803 0.17 ## 13 1199 6296 0.07 ## 14 2393 19170 0.22 ## 15 2393 30424 0.35 ## 16 2397 23989 0.28 ## 17 2395 14346 0.17 ## 18 1194 65797 0.76 ## 19 1199 58807 0.68 ## 20 1193 57075 0.66 ## 21 1193 62651 0.73 ## 22 1190 12024 0.14 ## 23 1201 4320 0.05 ## 24 1197 1374 0.02 ## 25 1193 4584 0.05 ## 26 1198 24000 0.28 ## 27 2395 23999 0.28 ## 28 4167 4167 0.05 ## 29 2390 23993 0.28 ## 30 2393 16796 0.19 ## 31 2395 26384 0.31 ## 32 2396 19195 0.22 ## 33 2395 25201 0.29 ## 34 3600 7739 0.09 ## 35 3592 25168 0.29 ## 36 3596 7767 0.09 ## 37 1193 13949 0.16 ## 38 1197 37505 0.43 ## 39 1197 22589 0.26 ## 40 1419 45039 0.52 ## 41 2393 56912 0.66 ## 42 2395 13942 0.16 ## 43 2393 59759 0.69 ## 44 3593 162754 1.88 ## 45 1191 3805 0.04 ## 46 1194 7593 0.09 ## 47 2473 37478 0.43 ## 48 2407 40114 0.46 ## 49 2398 36048 0.42 ## 50 2393 77485 0.90 ## 51 2395 9761 0.11 ## 52 2424 18115 0.21 ## 53 3596 67044 0.78 ## 54 4362 46261 0.54 ## 55 26857 26857 0.31 ## 56 3594 36814 0.43 ## 57 2395 6049 0.07 ## 58 2398 112755 1.31 ## 59 2394 26392 0.31 ## 60 2396 9564 0.11 ## 61 3595 25184 0.29 ## 62 3597 25196 0.29 ## 63 3666 3666 0.04 ## 64 3595 25478 0.29 ## 65 3594 8728 0.10 ## 66 3597 11352 0.13 ## 67 12077 12077 0.14 ## 68 3598 17024 0.20 ## 69 3620 13722 0.16 ## 70 3595 27055 0.31 ## 71 3596 22571 0.26 ## 72 3598 11304 0.13 ## 73 4621 12529 0.15 ## 74 4798 19939 0.23 ## 75 1193 4155 0.05 ## 76 1193 4349 0.05 ## 77 1193 4087 0.05 ## 78 2394 6339 0.07 ## 79 2393 5211 0.06 ## 80 2397 21592 0.25 ## 81 2394 21598 0.25 ## 82 2396 4895 0.06 ## 83 2393 10957 0.13 ## 84 2392 10227 0.12 ## 85 2393 11972 0.14 ## 86 2394 4988 0.06 ## 87 2394 7729 0.09 ## 88 2393 19194 0.22 ## 89 2398 21674 0.25 ## 90 2391 19152 0.22 ## 91 1194 24890 0.29 ## 92 1199 13272 0.15 ## 93 1199 38827 0.45 ## 94 1193 254116 2.94 ## 95 1298 79780 0.92 ## 96 1199 1202 0.01 ## 97 1193 9920 0.11 ## 98 1193 21739 0.25 ## 99 1193 10909 0.13 ## 100 1198 32856 0.38 ## 101 1196 18122 0.21 ## 102 1194 23220 0.27 ## 103 1194 20039 0.23 ## 104 1193 15215 0.18 ## 105 1195 25392 0.29 ## 106 16099 64050 0.74 ## 107 18295 39553 0.46 ## 108 1197 23431 0.27 ## 109 1200 22212 0.26 ## 110 1196 1383 0.02 ## 111 1201 20233 0.23 ## 112 2395 105548 1.22 ## 113 3798 27449 0.32 ## 114 49691 49691 0.58 ## 115 2527 20578 0.24 ## 116 14602 43160 0.50 ## 117 2397 10119 0.12 ## 118 2398 6716 0.08 ## 119 2402 23473 0.27 ## 120 2397 28484 0.33 ## 121 61643 89155 1.03 ## 122 1195 79645 0.92 ## 123 75736 75736 0.88 ## 124 1194 78907 0.91 ## 125 2395 98046 1.13 ## 126 2400 32094 0.37 ## 127 3594 60399 0.70 ## 128 1193 6007 0.07 ## 129 1192 1208 0.01 ## 130 1200 24995 0.29 ## 131 2395 4800 0.06 ## 132 2394 9590 0.11 ## 133 2394 2406 0.03 ## 134 2394 7206 0.08 ## 135 2393 24006 0.28 ## 136 2394 7206 0.08 ## 137 2394 4806 0.06 ## 138 3594 3606 0.04 ## 139 3596 3606 0.04 ## 140 1193 29520 0.34 ## 141 1197 8320 0.10 ## 142 1201 15580 0.18 ## 143 1194 27696 0.32 ## 144 1190 16720 0.19 ## 145 1195 17843 0.21 ## 146 1196 7861 0.09 ## 147 1194 14754 0.17 ## 148 1190 13989 0.16 ## 149 1191 30191 0.35 ## 150 2394 2406 0.03 ## 151 2397 2414 0.03 ## 152 2395 2504 0.03 ## 153 2386 21606 0.25 ## 154 3595 21370 0.25 ## 155 3594 25189 0.29 ## 156 3593 14393 0.17 ## 157 4521 4521 0.05 ## 158 3599 14401 0.17 ## 159 3593 8512 0.10 ## 160 3594 7185 0.08 ## 161 3601 8678 0.10 ## 162 3601 9842 0.11 ## 163 3601 32084 0.37 ## 164 3826 22307 0.26 ## 165 3599 29484 0.34 ## 166 1198 1259 0.01 ## 167 1193 16760 0.19 ## 168 1194 32070 0.37 ## 169 1194 30361 0.35 ## 170 1194 16088 0.19 ## 171 1195 17638 0.20 ## 172 1194 18045 0.21 ## 173 1194 28031 0.32 ## 174 1193 32887 0.38 ## 175 1194 6048 0.07 ## 176 1461 4680 0.05 ## 177 1193 10908 0.13 ## 178 1198 15200 0.18 ## 179 1197 49038 0.57 ## 180 1199 41164 0.48 ## 181 1197 46503 0.54 ## 182 1195 68526 0.79 ## 183 2524 89374 1.03 ## 184 2399 39623 0.46 ## 185 1199 27215 0.31 ## 186 1198 51903 0.60 ## 187 1196 56009 0.65 ## 188 1197 21335 0.25 ## 189 1193 33992 0.39 ## 190 1196 32957 0.38 ## 191 1193 37006 0.43 ## 192 1196 33569 0.39 ## 193 1203 78426 0.91 ## 194 1193 41269 0.48 ## 195 1193 86879 1.01 ## 196 1203 78426 0.91 ## 197 73 25444 0.29 ## 198 1193 1265 0.01 ## 199 1196 1201 0.01 ## 200 1193 3794 0.04 ## 201 15581 15581 0.18 ## 202 1193 35423 0.41 ## 203 1194 4452 0.05 ## 204 1193 21587 0.25 ## 205 1199 35581 0.41 ## 206 1193 10651 0.12 ## 207 1194 13284 0.15 ## 208 1193 24522 0.28 ## 209 1205 75877 0.88 ## 210 1193 35128 0.41 ## 211 1194 17387 0.20 ## 212 1193 27407 0.32 ## 213 1198 28963 0.34 ## 214 1193 54504 0.63 ## 215 1195 24038 0.28 ## 216 1199 36344 0.42 ## 217 1192 4656 0.05 ## 218 1194 3260 0.04 ## 219 1195 10297 0.12 ## 220 1194 12515 0.14 ## 221 1195 21566 0.25 ## 222 1198 21594 0.25 ## 223 2392 24151 0.28 ## 224 2395 21870 0.25 ## 225 2394 26374 0.31 ## 226 2394 14379 0.17 ## 227 1192 23387 0.27 ## 228 1199 10282 0.12 ## 229 1194 47305 0.55 ## 230 1195 3987 0.05 ## 231 1167 9593 0.11 ## 232 1199 5077 0.06 ## 233 1191 18092 0.21 ## 234 1192 3435 0.04 ## 235 1193 22631 0.26 ## 236 1199 8084 0.09 ## 237 1193 26699 0.31 ## 238 1195 6367 0.07 ## 239 1194 15238 0.18 ## 240 1193 5623 0.07 ## 241 1196 17700 0.20 ## 242 1193 15577 0.18 ## 243 19216 19216 0.22 ## 244 2394 39878 0.46 ## 245 2400 34374 0.40 ## 246 14397 14397 0.17 ## 247 5094 30252 0.35 ## 248 4362 47178 0.55 ## 249 2391 26604 0.31 ## 250 12512 67337 0.78 ## 251 17023 33069 0.38 ## 252 2408 57745 0.67 ## 253 2397 30408 0.35 ## 254 2394 20168 0.23 ## 255 4201 4201 0.05 ## 256 1194 38673 0.45 ## 257 1193 16365 0.19 ## 258 1195 14438 0.17 ## 259 1193 81078 0.94 ## 260 1194 19855 0.23 ## 261 1195 19938 0.23 ## 262 1194 42092 0.49 ## 263 1193 33496 0.39 ## 264 1194 21592 0.25 ## 265 1195 11891 0.14 ## 266 1197 38617 0.45 ## 267 1193 33185 0.38 ## 268 1193 31345 0.36 ## 269 1194 22764 0.26 ## 270 1197 4563 0.05 ## 271 1200 13196 0.15 ## 272 2393 24802 0.29 ## 273 1193 88172 1.02 ## 274 1194 6132 0.07 ## 275 1191 10499 0.12 ## 276 1194 36457 0.42 ## 277 1193 23981 0.28 ## 278 2393 21586 0.25 ## 279 2394 33247 0.38 ## 280 2393 6607 0.08 ## 281 2395 12002 0.14 ## 282 2396 10132 0.12 ## 283 2394 19622 0.23 ## 284 2390 28579 0.33 ## 285 9965 9965 0.12 ## 286 56957 56957 0.66 ## 287 62612 62612 0.72 ## 288 1194 64776 0.75 ## 289 1194 57516 0.67 ## 290 1196 19902 0.23 ## 291 1193 40243 0.47 ## 292 1192 17736 0.21 ## 293 1194 28975 0.34 ## 294 1197 25336 0.29 ## 295 1192 44531 0.52 ## 296 1194 26552 0.31 ## 297 1193 60368 0.70 ## 298 3595 287921 3.33 ## 299 1197 24034 0.28 ## 300 2386 57425 0.66 ## 301 1193 16539 0.19 ## 302 1193 82420 0.95 ## 303 1191 79795 0.92 ## 304 1194 233698 2.70 ## 305 1194 25145 0.29 ## 306 1198 10174 0.12 ## 307 1194 22785 0.26 ## 308 1194 18015 0.21 ## 309 1198 9840 0.11 ## 310 1198 23960 0.28 ## 311 2395 23992 0.28 ## 312 2394 5883 0.07 ## 313 2398 5697 0.07 ## 314 2394 21752 0.25 ## 315 2393 8756 0.10 ## 316 2398 12709 0.15 ## 317 2394 34433 0.40 ## 318 2395 31484 0.36 ## 319 2395 29146 0.34 ## 320 2397 41680 0.48 ## 321 1191 15521 0.18 ## 322 1198 7191 0.08 ## 323 2394 16762 0.19 ## 324 2394 9581 0.11 ## 325 2394 4796 0.06 ## 326 2392 16797 0.19 ## 327 2367 2405 0.03 ## 328 2393 4805 0.06 ## 329 2393 2407 0.03 ## 330 2365 4800 0.06 ## 331 2394 4783 0.06 ## 332 2393 4798 0.06 ## 333 2381 7201 0.08 ## 334 3593 10782 0.12 ## 335 3591 10793 0.12 ## 336 3589 7203 0.08 ## 337 3594 14386 0.17 ## 338 3594 7195 0.08 ## 339 3594 7195 0.08 head(SummaryTimeDiff) ## tripID mean_timegap_secs median_timegap_secs min_timegap_secs ## 1 19_Tag17600_Z-9_01 17176.400 5238 1200 ## 2 19_Tag17600_Z-9_02 10515.245 1205 1194 ## 3 19_Tag17600_Z-9_03 6244.654 1210 1196 ## 4 19_Tag17600_Z-9_04 6181.354 1206 1194 ## 5 19_Tag17600_Z-9_05 5550.120 1205 1193 ## 6 19_Tag17604_Z-7_01 3736.241 1800 1199 ## max_timegap_secs max_timegap_days ## 1 62764 0.73 ## 2 87842 1.02 ## 3 36975 0.43 ## 4 82303 0.95 ## 5 80386 0.93 ## 6 25328 0.29 4.11.1 Sampling interval review Consider whether the sampling interval of your tracking data is appropriate for formally running the track2KBA functions. Remember, the time differences between each of your location points should be equal (or close enough to equal) across all location points and individuals tracked. If the time difference between location points is not equal, the outputs you generate from track2KBA will not be valid because the underlying kernel density analysis implemented within the track2KBA functions will be invalid (because you need points evenly spaced in time for this analysis to be valid). Therefore, review the summary of your recorded sampling interval data: #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Review sampling interval ---- #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Average sampling interval of all data ## median of median time gaps in minutes median(SummaryTimeDiff$median_timegap_secs)/60 ## [1] 40.03333 ## Sort data by maximum time gap first - then view. ## Consider if you have any outlier trips with massively different time gaps. SummaryTimeDiff %&gt;% arrange(-max_timegap_secs) %&gt;% head(10) ## tripID mean_timegap_secs median_timegap_secs ## 1 20_Tag40193_Z-13 (2nd Parent)_01 14524.074 3764.5 ## 2 19_Tag40086_Z-11 (2nd Parent)_03 10806.928 2414.5 ## 3 20_Tag40859_Z-179_01 27265.692 9569.0 ## 4 19_Tag17704_Z-11_08 15637.510 6667.0 ## 5 19_Tag40069_Z-6_02 7884.909 2651.0 ## 6 19_Tag40133_Z-15_03 10415.531 2401.5 ## 7 19_Tag40138_Z-17_04 9391.528 2612.0 ## 8 20_Tag17604_Z-95_09 39764.125 27286.5 ## 9 19_Tag40133_Z-15_12 75399.000 75399.0 ## 10 20_Tag40118_Z-175_10 3861.209 2399.0 ## min_timegap_secs max_timegap_secs max_timegap_days ## 1 3595 287921 3.33 ## 2 1193 254116 2.94 ## 3 1194 233698 2.70 ## 4 3593 162754 1.88 ## 5 2398 112755 1.31 ## 6 2395 105548 1.22 ## 7 2395 98046 1.13 ## 8 2524 89374 1.03 ## 9 61643 89155 1.03 ## 10 1193 88172 1.02 ## simple histogram hist(SummaryTimeDiff$max_timegap_days) If you have trips where the maximum time gap in seconds (max_timegap_secs) is extremely different to the median of median time gaps in minutes, then it’s likely you need to consider why this is the case for those trips. - Did you specify tripSplit parameters incorrectly? - Does the data require further cleaning in some other way? - What else to consider NOTE: you should be aware of what the original pre-programmed sampling interval was. How do you results compare to this interval? [“CONSIDER: What is the best way to provide advice on appropriate time gap selection for interpolation based on results above vs. comparison with intended sampling interval.”] 4.12 Interpolation If you have gaps in your tracking data, you need to fill these gaps for the purpose of the track2KBA protocol. It’s likely you will need to do this for many other tracking data analyses. Broadly speaking, there are two key ways to fill the gaps in your tracking data, a process known as interpolation. These two ways include: - Simpler linear interpolation - More advanced interpolation options that try account for where the animal could have moved (e.g. CRAWL) Typically, for flying seabirds, where gaps in tracking data are less likely because birds do not typically dive underwater for durations as long as diving seabirds, linear interpolation should serve as a suitable starting point. More advanced interpolation methods may be required for diving seabirds, or other diving marine predators. 4.12.1 Interpolation pre-processing data Key considerations related to identifying IBAs / KBAs: when identifying an IBA or KBA for seabirds using the track2KBA protocol, you effectively need information about the source population (typically the colony) and distribution data (tracking data). This means that not only can you identify a pelagic site from tracking data, but you can also consider an IBA/KBA for the colony itself and a possible at-sea buffer around the colony. Because you should typically consider identifying the at-sea buffer around the colony in addition to any potential pelagic / offshore sites supported by the tracking data, you can remove location points from the data within a suitable buffer distance. Removing trip start and end points near colony for the interpolation, especially if using more advanced methods like CRAWL, ALSO supports that the speed filters can focus on points at sea when you estimate birds should be moving, as opposed to trying to deal with sections of trips when the bird is actually stationary on land. CONSIDER: Appropriate choice of buffer distance in relation to identifying at-sea buffer IBAs for seabirds. [consider better name for at-sea buffer IBAs] [Should we apply relative at-sea buffer at the tripSplit step or later on. Later seems to make sense to me. But this also means we might remove what are considered invidual trips if we increase the buffer size.] ## length(unique(trips$tripID)) ## [1] 339 warning(&quot;Must update GitHub tutorial which specifies distance incorrectly&quot;) ## remove trip start and end points near colony - distance is in m (unlike innerBuff where distance was in km) tracks &lt;- trips[trips$ColDist &gt; 3*1000, ] ## length(unique(tracks$tripID)) ## [1] 339 4.13 When to remove or salvage data for a tracked individual [Examples / details to be added] In some cases, an entire track may be worth disregarding or trying to salvage. However, it often might be the case that only certain trips from the entire period an animal was tracked may be worth removing. Having split data from individual animal into unique trips let’s review all the options for cleaning, removing, salvaging data from individual trips relating to tracked animals. ## save updated file for next steps save(tracks, file = &quot;data-testing/tracking-data/Tracking_YESH_raw_step3.Rdata&quot;) 4.14 Next steps: in next chapter FROM HERE: include speed filter and lintear interpolation options. Consider CRAWL options. Allow for comparison between two options. Build in steps that will loop interpolation over all individual trips. See the previous supporting R code: tracking_CleanAndPrepareData2_AllTracks and go to the animotum sections which comes first before linear. Actually want linear interpolation first. "],["tracking-data-interpolate-speed-filter.html", "5 Tracking data: Interpolate / speed filter 5.1 Description of data 5.2 Goal of chapter: 5.3 Interpolation 5.4 Load packages 5.5 Input parameters for chapter tutorial 5.6 Load input example data and prepare for track2KBA R package protocol 5.7 Interpolation methods differences 5.8 Speed filter &amp; linear interpolation 5.9 Plot: speed filtered and linear interpolation data 5.10 Advanced interpolation 5.11 Compare different interplation methods 5.12 Review comparison 5.13 Interpolation: all data", " 5 Tracking data: Interpolate / speed filter This chapter is a continuation from the previous chapter viewing and cleaning tracking data relating to individual trips from tracked animals exhibiting central place foraging behaviour. It requires the outputted data file from the previous chapter 5.1 Description of data The example data for this chapter relates to the previous. A key step was the splitting of tracking data into individual trips using the tripSplit() function. Remember, you also removed all points that were a specified buffer distance away from the colony. This supports application of interpolation methods to individual trips. NOTE: if your animal visits land at several other locations beyond the colony, you may need to consider appropriate action for more advanced interpolation methods. 5.2 Goal of chapter: Support further cleaning of tracking data by applying speed filters and interpolation methods. 5.3 Interpolation If you have gaps in your tracking data, you need to fill these gaps for the purpose of the track2KBA protocol. It’s likely you will need to do this for many other tracking data analyses. Broadly speaking, there are two key ways to fill the gaps in your tracking data, a process known as interpolation. These two ways include: - Simpler linear interpolation - More advanced interpolation options that try account for where the animal could have moved (e.g. CRAWL) Typically, for flying seabirds, where gaps in tracking data are less likely because birds do not typically dive underwater for durations as long as diving seabirds, linear interpolation should serve as a suitable starting point. More advanced interpolation methods may be required for diving seabirds, or other diving marine predators. 5.4 Load packages Load required R packages: If the package(s) fails to load, you will need to install the relevant package(s). ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Load libraries -------------------------------------------------------------- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &quot;Had to install R version: R version 4.2.2 (2022-10-31 ucrt) for aniMotum&quot; ## [1] &quot;Had to install R version: R version 4.2.2 (2022-10-31 ucrt) for aniMotum&quot; ## Options to install aniMotum package for animal track interpolation ## aniMotum: https://besjournals.onlinelibrary.wiley.com/doi/10.1111/2041-210X.14060 #install.packages(&#39;aniMotum&#39;, repos = c(&#39;https://ianjonsen.r-universe.dev&#39;, &#39;https://cloud.r-project.org&#39;)) # may need to install aniMotum after downloading using: devtools::install_local(package.zip) #install.packages(&#39;TMB&#39;, type = &#39;source&#39;) library(&quot;aniMotum&quot;) ## sf package for spatial data analyses (i.e. vector files such as points, lines, polygons) library(sf) ## Tidyverse for data manipulation library(tidyverse) ## ggplot2 for plotting opionts library(ggplot2) ## rnaturalearth package for basemaps in R library(rnaturalearth) ## leaflet package for interactive maps in R #install.packages(&quot;leaflet&quot;) library(leaflet) ## library(purrr) library(furrr) #install.packages(&quot;track2KBA&quot;) library(track2KBA) ## for date time library(lubridate) ## for stats library(stats) ## speed filter library(trip) ## linear interpolation library(adehabitatLT) 5.5 Input parameters for chapter tutorial Here we define input parameters needed for sections of the code later in this tutorial. Depending on how your data is set up, you should not need to define any further input parameters. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Specify projections / store needed CRS definitions as variables ---- ## SEE: https://epsg.io/ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## world - unprojected coordinates wgs84 &lt;- st_crs(&quot;EPSG:4326&quot;) ## Croatia - projected coordinates htrs96 &lt;- st_crs(&quot;EPSG:3765&quot;) ## Source a world map from the rnaturalearth R package ## see details of function to change the type of map you get worldmap &lt;- rnaturalearth::ne_download(scale = &quot;large&quot;, type = &quot;countries&quot;, category = &quot;cultural&quot;, destdir = tempdir(), load = TRUE, returnclass = &quot;sf&quot;) 5.6 Load input example data and prepare for track2KBA R package protocol Loading the input example data ## Load the example data for Yelkouan Shearwaters load(&quot;data-testing/tracking-data/Tracking_YESH_raw_step3.Rdata&quot;) ## view the first two rows of data ## First view the data in tibble format head(tracks,2) ## coordinates dataset_id scientific_name common_name ## 8 (16.8757, 42.8636) tbc Puffinus yelkouan Yelkouan Shearwater ## 9 (16.843, 42.8891) tbc Puffinus yelkouan Yelkouan Shearwater ## site_name colony_name lat_colony lon_colony device ID ## 8 Lastovo SPA Z tbc tbc GPS 19_Tag17600_Z-9 ## 9 Lastovo SPA Z tbc tbc GPS 19_Tag17600_Z-9 ## track_id original_track_id age sex breed_stage breed_status ## 8 19_Tag17600_Z-9 19_Tag17600_Z-9 adult unknown chick-rearing breeding ## 9 19_Tag17600_Z-9 19_Tag17600_Z-9 adult unknown chick-rearing breeding ## date_gmt time_gmt argos_quality equinox dttm bird_id_num ## 8 2019-05-24 03:09:05 NA NA 2019-05-24 03:09:05 15 ## 9 2019-05-24 03:29:05 NA NA 2019-05-24 03:29:05 15 ## Longitude Latitude nlocs track_segment track_colour DateTime ## 8 16.87569 42.86363 8 track.start #66c2a5 2019-05-24 03:09:05 ## 9 16.84299 42.88915 9 track.start #66c2a5 2019-05-24 03:29:05 ## tripID X Y Returns StartsOut ColDist ## 8 19_Tag17600_Z-9_01 16.87569 42.86363 Yes 5843.850 ## 9 19_Tag17600_Z-9_01 16.84299 42.88915 Yes 9297.407 ## Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84 ## +no_defs ## Then view the data in data frame format head(data.frame(tracks),2) ## dataset_id scientific_name common_name site_name colony_name ## 8 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 9 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 8 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## 9 tbc tbc GPS 19_Tag17600_Z-9 19_Tag17600_Z-9 ## original_track_id age sex breed_stage breed_status date_gmt ## 8 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## 9 19_Tag17600_Z-9 adult unknown chick-rearing breeding 2019-05-24 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 8 03:09:05 NA NA 2019-05-24 03:09:05 15 16.87569 ## 9 03:29:05 NA NA 2019-05-24 03:29:05 15 16.84299 ## Latitude nlocs track_segment track_colour DateTime ## 8 42.86363 8 track.start #66c2a5 2019-05-24 03:09:05 ## 9 42.88915 9 track.start #66c2a5 2019-05-24 03:29:05 ## tripID X Y Returns StartsOut ColDist ## 8 19_Tag17600_Z-9_01 16.87569 42.86363 Yes 5843.850 ## 9 19_Tag17600_Z-9_01 16.84299 42.88915 Yes 9297.407 ## dataGroup.Longitude dataGroup.Latitude optional ## 8 16.87569 42.86363 TRUE ## 9 16.84299 42.88915 TRUE 5.7 Interpolation methods differences We will consider some of the different interpolation methods: - Linear interpolation - CRAWL interpolation 5.7.1 Get example data for testing Based on some previous exploration of the data, here are some individual trips that provide a basis of example data to understand impact of different inteprolation methods. NOTE to JONO: Consider impact of previous buffer choice on selection of final number of trips. [Should we apply relative at-sea buffer at the tripSplit step or later on. Later seems to make sense to me. But this also means we might remove what are considered invidual trips if we increase the buffer size.] ## Checking number of trips in data length(unique(tracks$tripID)) ## [1] 339 Example trips to try: 278: a good track. Athough technically colony location might be wrong given buffer appied above. 305: a good track. Seems feasible. 339: a track that goes over land supposedly. 252: dodgey track with too few points most likely. 210: reasonable track, but some big gaps in data likely when birds commuting. 273: obvious location error with single point extremely far away.” Change the input parameter below to select a new unique trip ## Input parameter for selecting unique trips i= 273 ## subset the data from a unique trip bird_track &lt;- data.frame(tracks) %&gt;% dplyr::filter(tripID == unique(tracks$tripID)[i]) ## add a column indicating start and end of tracks bird_track &lt;- bird_track %&gt;% mutate(nlocs = 1:nrow(bird_track)) %&gt;% mutate(track_segment = if_else(nlocs &lt;= 10, &quot;track.start&quot;,&quot;track.journey&quot;)) %&gt;% ## note: if you have a track with less than 20 points, then you will overwrite ## some of the previous data. mutate(track_segment = if_else(nlocs %in% (nrow(bird_track)-9):(nrow(bird_track)),&quot;track.end&quot;,track_segment)) %&gt;% ## add a column indicating colour for start and end of tracks ## colours from: https://colorbrewer2.org/#type=qualitative&amp;scheme=Set2&amp;n=3 mutate(track_colour = if_else(nlocs &lt;= 10, &quot;#66c2a5&quot;,&quot;#8da0cb&quot;)) %&gt;% mutate(track_colour = if_else(nlocs %in% (nrow(bird_track)-9):(nrow(bird_track)),&quot;#fc8d62&quot;,track_colour)) head(data.frame(bird_track),12) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 3 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 4 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 5 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 6 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 7 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 8 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 9 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 10 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 11 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 12 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 1 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 2 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 3 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 4 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 5 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 6 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 7 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 8 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 9 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 10 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 11 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 12 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 2 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 3 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 4 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 5 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 6 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 7 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 8 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 9 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 10 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 11 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 12 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 1 00:41:02 NA NA 2020-05-23 00:41:02 27 16.87377 ## 2 02:00:55 NA NA 2020-05-23 02:00:55 27 16.97655 ## 3 02:40:55 NA NA 2020-05-23 02:40:55 27 16.97733 ## 4 03:21:00 NA NA 2020-05-23 03:21:00 27 17.06556 ## 5 04:01:09 NA NA 2020-05-23 04:01:09 27 17.39980 ## 6 04:56:05 NA NA 2020-05-23 04:56:05 27 17.77228 ## 7 05:40:22 NA NA 2020-05-23 05:40:22 27 17.78711 ## 8 06:25:59 NA NA 2020-05-23 06:25:59 27 17.79210 ## 9 07:41:36 NA NA 2020-05-23 07:41:36 27 17.79165 ## 10 09:27:30 NA NA 2020-05-23 09:27:30 27 17.79293 ## 11 10:57:03 NA NA 2020-05-23 10:57:03 27 17.78218 ## 12 11:43:08 NA NA 2020-05-23 11:43:08 27 17.77968 ## Latitude nlocs track_segment track_colour DateTime ## 1 42.77560 1 track.start #66c2a5 2020-05-23 00:41:02 ## 2 42.83770 2 track.start #66c2a5 2020-05-23 02:00:55 ## 3 42.83766 3 track.start #66c2a5 2020-05-23 02:40:55 ## 4 42.85745 4 track.start #66c2a5 2020-05-23 03:21:00 ## 5 42.84436 5 track.start #66c2a5 2020-05-23 04:01:09 ## 6 42.73614 6 track.start #66c2a5 2020-05-23 04:56:05 ## 7 42.73598 7 track.start #66c2a5 2020-05-23 05:40:22 ## 8 42.73718 8 track.start #66c2a5 2020-05-23 06:25:59 ## 9 42.73705 9 track.start #66c2a5 2020-05-23 07:41:36 ## 10 42.72910 10 track.start #66c2a5 2020-05-23 09:27:30 ## 11 42.73636 11 track.journey #8da0cb 2020-05-23 10:57:03 ## 12 42.73534 12 track.journey #8da0cb 2020-05-23 11:43:08 ## tripID X Y Returns StartsOut ColDist ## 1 20_Tag40118_Z-175_10 16.87377 42.77560 Yes 4236.435 ## 2 20_Tag40118_Z-175_10 16.97655 42.83770 Yes 10399.611 ## 3 20_Tag40118_Z-175_10 16.97733 42.83766 Yes 10459.515 ## 4 20_Tag40118_Z-175_10 17.06556 42.85745 Yes 17999.321 ## 5 20_Tag40118_Z-175_10 17.39980 42.84436 Yes 44730.445 ## 6 20_Tag40118_Z-175_10 17.77228 42.73614 Yes 75558.639 ## 7 20_Tag40118_Z-175_10 17.78711 42.73598 Yes 76766.776 ## 8 20_Tag40118_Z-175_10 17.79210 42.73718 Yes 77158.002 ## 9 20_Tag40118_Z-175_10 17.79165 42.73705 Yes 77123.133 ## 10 20_Tag40118_Z-175_10 17.79293 42.72910 Yes 77331.291 ## 11 20_Tag40118_Z-175_10 17.78218 42.73636 Yes 76361.428 ## 12 20_Tag40118_Z-175_10 17.77968 42.73534 Yes 76170.902 ## dataGroup.Longitude dataGroup.Latitude optional ## 1 16.87377 42.77560 TRUE ## 2 16.97655 42.83770 TRUE ## 3 16.97733 42.83766 TRUE ## 4 17.06556 42.85745 TRUE ## 5 17.39980 42.84436 TRUE ## 6 17.77228 42.73614 TRUE ## 7 17.78711 42.73598 TRUE ## 8 17.79210 42.73718 TRUE ## 9 17.79165 42.73705 TRUE ## 10 17.79293 42.72910 TRUE ## 11 17.78218 42.73636 TRUE ## 12 17.77968 42.73534 TRUE tail(data.frame(bird_track),12) ## dataset_id scientific_name common_name site_name colony_name ## 281 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 282 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 283 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 284 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 285 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 286 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 287 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 288 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 289 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 290 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 291 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 292 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 281 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 282 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 283 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 284 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 285 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 286 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 287 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 288 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 289 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 290 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 291 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 292 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## original_track_id age sex breed_stage breed_status date_gmt ## 281 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 282 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 283 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 284 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 285 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 286 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 287 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 288 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 289 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 290 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 291 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## 292 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-06-04 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 281 09:14:25 NA NA 2020-06-04 09:14:25 27 16.88986 ## 282 10:01:50 NA NA 2020-06-04 10:01:50 27 16.88227 ## 283 10:23:26 NA NA 2020-06-04 10:23:26 27 16.88668 ## 284 10:46:20 NA NA 2020-06-04 10:46:20 27 16.93666 ## 285 11:16:16 NA NA 2020-06-04 11:16:16 27 16.93476 ## 286 12:02:24 NA NA 2020-06-04 12:02:24 27 16.91133 ## 287 12:26:12 NA NA 2020-06-04 12:26:12 27 16.88071 ## 288 12:46:32 NA NA 2020-06-04 12:46:32 27 16.88152 ## 289 13:09:53 NA NA 2020-06-04 13:09:53 27 16.89008 ## 290 14:23:01 NA NA 2020-06-04 14:23:01 27 16.88320 ## 291 16:02:15 NA NA 2020-06-04 16:02:15 27 16.62842 ## 292 20:17:21 NA NA 2020-06-04 20:17:21 27 16.70007 ## Latitude nlocs track_segment track_colour DateTime ## 281 43.24756 281 track.journey #8da0cb 2020-06-04 09:14:25 ## 282 43.24653 282 track.journey #8da0cb 2020-06-04 10:01:50 ## 283 43.18422 283 track.end #fc8d62 2020-06-04 10:23:26 ## 284 43.21985 284 track.end #fc8d62 2020-06-04 10:46:20 ## 285 43.22753 285 track.end #fc8d62 2020-06-04 11:16:16 ## 286 43.25326 286 track.end #fc8d62 2020-06-04 12:02:24 ## 287 43.19457 287 track.end #fc8d62 2020-06-04 12:26:12 ## 288 43.17967 288 track.end #fc8d62 2020-06-04 12:46:32 ## 289 43.17550 289 track.end #fc8d62 2020-06-04 13:09:53 ## 290 43.18189 290 track.end #fc8d62 2020-06-04 14:23:01 ## 291 43.23960 291 track.end #fc8d62 2020-06-04 16:02:15 ## 292 42.86638 292 track.end #fc8d62 2020-06-04 20:17:21 ## tripID X Y Returns StartsOut ColDist ## 281 20_Tag40118_Z-175_10 16.88986 43.24756 Yes 48579.35 ## 282 20_Tag40118_Z-175_10 16.88227 43.24653 Yes 48432.22 ## 283 20_Tag40118_Z-175_10 16.88668 43.18422 Yes 41539.88 ## 284 20_Tag40118_Z-175_10 16.93666 43.21985 Yes 45905.39 ## 285 20_Tag40118_Z-175_10 16.93476 43.22753 Yes 46728.46 ## 286 20_Tag40118_Z-175_10 16.91133 43.25326 Yes 49344.42 ## 287 20_Tag40118_Z-175_10 16.88071 43.19457 Yes 42660.85 ## 288 20_Tag40118_Z-175_10 16.88152 43.17967 Yes 41010.77 ## 289 20_Tag40118_Z-175_10 16.89008 43.17550 Yes 40592.21 ## 290 20_Tag40118_Z-175_10 16.88320 43.18189 Yes 41264.78 ## 291 20_Tag40118_Z-175_10 16.62842 43.23960 Yes 51055.50 ## 292 20_Tag40118_Z-175_10 16.70007 42.86638 Yes 14052.11 ## dataGroup.Longitude dataGroup.Latitude optional ## 281 16.88986 43.24756 TRUE ## 282 16.88227 43.24653 TRUE ## 283 16.88668 43.18422 TRUE ## 284 16.93666 43.21985 TRUE ## 285 16.93476 43.22753 TRUE ## 286 16.91133 43.25326 TRUE ## 287 16.88071 43.19457 TRUE ## 288 16.88152 43.17967 TRUE ## 289 16.89008 43.17550 TRUE ## 290 16.88320 43.18189 TRUE ## 291 16.62842 43.23960 TRUE ## 292 16.70007 42.86638 TRUE ## plot the tracks using leaflet package in R. map &lt;- leaflet() %&gt;% ## start leaflet plot addProviderTiles(providers$Esri.WorldImagery, group = &quot;World Imagery&quot;) %&gt;% ## plot the points. Note: leaflet automatically finds lon / lat colonies ## label by nloc (location) number. Colour accordingly. addCircleMarkers(data = bird_track, label = bird_track$nlocs, radius = 3, fillColor = bird_track$track_colour, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between points addPolylines(lng = bird_track$Longitude, lat = bird_track$Latitude, weight = 1, color = &quot;white&quot;) map ## plot with legend map %&gt;% addLegend(colors = unique(bird_track$track_colour), labels = unique(bird_track$track_segment)) 5.8 Speed filter &amp; linear interpolation First apply the simpler cleaning step to the data: McConnel Speed Filter (i.e. remove points based on unrealistic travel speeds) Linear interpolation (i.e. add missing points on a straight line between known points) ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Speed filter / linear interpolation ---- ## For flying seabirds: CRAWL may not be best bet - linear interpolation may be better.&quot; ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## review example data head(bird_track,2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 1 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 2 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 2 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 1 00:41:02 NA NA 2020-05-23 00:41:02 27 16.87377 ## 2 02:00:55 NA NA 2020-05-23 02:00:55 27 16.97655 ## Latitude nlocs track_segment track_colour DateTime ## 1 42.7756 1 track.start #66c2a5 2020-05-23 00:41:02 ## 2 42.8377 2 track.start #66c2a5 2020-05-23 02:00:55 ## tripID X Y Returns StartsOut ColDist ## 1 20_Tag40118_Z-175_10 16.87377 42.7756 Yes 4236.435 ## 2 20_Tag40118_Z-175_10 16.97655 42.8377 Yes 10399.611 ## dataGroup.Longitude dataGroup.Latitude optional ## 1 16.87377 42.7756 TRUE ## 2 16.97655 42.8377 TRUE ## remove any erroneous locations due to speed use the McConnel Speed Filter ##from the trip package trip_obj &lt;- bird_track %&gt;% #group_by(tripID) %&gt;% dplyr::select(x = X, y = Y, DateTime, everything()) %&gt;% trip() ## McConnel Speedilter ----- ## apply speedfilter and creat data frame trip_obj$Filter &lt;- speedfilter(trip_obj, max.speed = 100) # speed in km/h trip_obj &lt;- data.frame(trip_obj) head(trip_obj,2) ## x y DateTime dataset_id scientific_name ## 1 16.87377 42.7756 2020-05-23 00:41:02 tbc Puffinus yelkouan ## 2 16.97655 42.8377 2020-05-23 02:00:55 tbc Puffinus yelkouan ## common_name site_name colony_name lat_colony lon_colony device ## 1 Yelkouan Shearwater Lastovo SPA Z tbc tbc GPS ## 2 Yelkouan Shearwater Lastovo SPA Z tbc tbc GPS ## ID track_id original_track_id age sex ## 1 20_Tag40118_Z-175 20_Tag40118_Z-175 20_Tag40118_Z-175 adult unknown ## 2 20_Tag40118_Z-175 20_Tag40118_Z-175 20_Tag40118_Z-175 adult unknown ## breed_stage breed_status date_gmt time_gmt argos_quality equinox ## 1 chick-rearing breeding 2020-05-23 00:41:02 NA NA ## 2 chick-rearing breeding 2020-05-23 02:00:55 NA NA ## dttm bird_id_num Longitude Latitude nlocs track_segment ## 1 2020-05-23 00:41:02 27 16.87377 42.7756 1 track.start ## 2 2020-05-23 02:00:55 27 16.97655 42.8377 2 track.start ## track_colour tripID Returns StartsOut ColDist ## 1 #66c2a5 20_Tag40118_Z-175_10 Yes 4236.435 ## 2 #66c2a5 20_Tag40118_Z-175_10 Yes 10399.611 ## dataGroup.Longitude dataGroup.Latitude optional Filter optional.1 ## 1 16.87377 42.7756 TRUE TRUE TRUE ## 2 16.97655 42.8377 TRUE TRUE TRUE ## How many locations were removed with speed filter? nrow(subset(trip_obj, trip_obj$Filter == F)) ## [1] 1 ## plot the original data AND McConnel speed filtered removed values map %&gt;% addCircleMarkers(data = subset(trip_obj, trip_obj$Filter == F), #label = bird_track_gaps$nlocs, radius = 5, fillColor = &quot;black&quot;, fillOpacity = 0.5, stroke = F) %&gt;% addLegend(colors = &quot;black&quot;, labels = &quot;McConnel removed values&quot;) ## Keep only filtered coordinates - after checking dimensions of other outputs again dim(trip_obj) ## [1] 292 38 dim(bird_track) ## [1] 292 36 trip_obj &lt;- subset(trip_obj,trip_obj$Filter==TRUE) dim(trip_obj) ## [1] 291 38 ## Linear interpolation ----- ## Apply linear interpolation step to speed filtered only data ## create ltraj object trip_lt &lt;- as.ltraj(xy = bind_cols(x = trip_obj$x, y = trip_obj$y), date = trip_obj$DateTime, id = trip_obj$tripID) ## Linearly interpolate/re-sample tracks every 30 minutes (specified in seconds) trip_interp &lt;- redisltraj(trip_lt, 1800, type=&quot;time&quot;) head(trip_interp) ## ## *********** List of class ltraj *********** ## ## Type of the traject: Type II (time recorded) ## * Time zone: UTC * ## Regular traject. Time lag between two locs: 1800 seconds ## ## Characteristics of the bursts: ## id burst nb.reloc NAs date.begin ## 1 20_Tag40118_Z-175_10 20_Tag40118_Z-175_10 616 0 2020-05-23 00:41:02 ## date.end ## 1 2020-06-04 20:11:02 ## ## ## infolocs provided. The following variables are available: ## [1] &quot;pkey&quot; ## convert back into format for track2KBA - dataframe for now trip_interp &lt;- ld(trip_interp) %&gt;% dplyr::mutate(Longitude = x, Latitude = y) head(trip_interp,2) ## x y date dx dy dist dt ## 1 16.87377 42.77560 2020-05-23 00:41:02 0.03860029 0.02331963 0.04509754 1800 ## 2 16.91237 42.79892 2020-05-23 01:11:02 0.03860029 0.02331963 0.04509754 1800 ## R2n abs.angle rel.angle id burst ## 1 0.000000000 0.5434515 NA 20_Tag40118_Z-175_10 20_Tag40118_Z-175_10 ## 2 0.002033788 0.5434515 0 20_Tag40118_Z-175_10 20_Tag40118_Z-175_10 ## pkey Longitude Latitude ## 1 20_Tag40118_Z-175_10.2020-05-23 00:41:02 16.87377 42.77560 ## 2 20_Tag40118_Z-175_10.2020-05-23 01:11:02 16.91237 42.79892 [CONSIDER BEST WAY TO ADD RELATED METADATA BACK. Holding script below for now] ## Select key data for track2KBA &quot;update&quot; ## [1] &quot;update&quot; #head(tracks_yelk) #yelk_interp &lt;- yelk_interp %&gt;% dplyr::select(X = x,Y =y, DateTime = date, ID = id) ## update metadata that was lost during interpolation steps &quot;update&quot; ## [1] &quot;update&quot; #yelk_meta &lt;- tracks_yelk %&gt;% # data.frame() %&gt;% # dplyr::select(ID, colony_code) %&gt;% # distinct(ID, colony_code) ## update for track2KBA &quot;update&quot; ## [1] &quot;update&quot; #yelk_interp &lt;- left_join(yelk_interp, yelk_meta, by = &quot;ID&quot;) %&gt;% # st_as_sf(coords = c(&quot;X&quot;, &quot;Y&quot;), crs = wgs84) 5.9 Plot: speed filtered and linear interpolation data ## plot speedfilter &amp; linear interpolation map %&gt;% ## Speed Filtered and Linear interpolated addCircleMarkers(data = trip_interp, #label = bird_track$nlocs, radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between Speed Filtered and Linear interpolated points addPolylines(lng = trip_interp$Longitude, lat = trip_interp$Latitude, weight = 1, color = &quot;cyan&quot;) [Review advice on whether linear interpolation is suitable] 5.10 Advanced interpolation [Possibly need to move this to appendix instead. COnsider feedback] Advanced interpolation methods such as CRAWL have been simplified with the aniMotum R package. We will apply the steps in the aniMotum R package to apply CRAWL interpolation to the data. ## CRAWL interpolation with aniMotum R package: &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 1: Format the data&quot; ## [1] &quot;STEP 1: Format the data&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; head(bird_track,2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 1 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 2 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 2 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 1 00:41:02 NA NA 2020-05-23 00:41:02 27 16.87377 ## 2 02:00:55 NA NA 2020-05-23 02:00:55 27 16.97655 ## Latitude nlocs track_segment track_colour DateTime ## 1 42.7756 1 track.start #66c2a5 2020-05-23 00:41:02 ## 2 42.8377 2 track.start #66c2a5 2020-05-23 02:00:55 ## tripID X Y Returns StartsOut ColDist ## 1 20_Tag40118_Z-175_10 16.87377 42.7756 Yes 4236.435 ## 2 20_Tag40118_Z-175_10 16.97655 42.8377 Yes 10399.611 ## dataGroup.Longitude dataGroup.Latitude optional ## 1 16.87377 42.7756 TRUE ## 2 16.97655 42.8377 TRUE ## format the data into format required for aniMotum ## NOTE: The format varies for Argos, GPS and GLS data - format accordingly bird_track_am &lt;- bird_track %&gt;% mutate(lc = &quot;G&quot;) %&gt;% dplyr::select(id = &quot;tripID&quot;, date = &quot;dttm&quot;, lc, lon = &quot;Longitude&quot;, lat = &quot;Latitude&quot;) ## review the newly formatted data head(bird_track_am,20) ## id date lc lon lat ## 1 20_Tag40118_Z-175_10 2020-05-23 00:41:02 G 16.87377 42.77560 ## 2 20_Tag40118_Z-175_10 2020-05-23 02:00:55 G 16.97655 42.83770 ## 3 20_Tag40118_Z-175_10 2020-05-23 02:40:55 G 16.97733 42.83766 ## 4 20_Tag40118_Z-175_10 2020-05-23 03:21:00 G 17.06556 42.85745 ## 5 20_Tag40118_Z-175_10 2020-05-23 04:01:09 G 17.39980 42.84436 ## 6 20_Tag40118_Z-175_10 2020-05-23 04:56:05 G 17.77228 42.73614 ## 7 20_Tag40118_Z-175_10 2020-05-23 05:40:22 G 17.78711 42.73598 ## 8 20_Tag40118_Z-175_10 2020-05-23 06:25:59 G 17.79210 42.73718 ## 9 20_Tag40118_Z-175_10 2020-05-23 07:41:36 G 17.79165 42.73705 ## 10 20_Tag40118_Z-175_10 2020-05-23 09:27:30 G 17.79293 42.72910 ## 11 20_Tag40118_Z-175_10 2020-05-23 10:57:03 G 17.78218 42.73636 ## 12 20_Tag40118_Z-175_10 2020-05-23 11:43:08 G 17.77968 42.73534 ## 13 20_Tag40118_Z-175_10 2020-05-23 12:23:14 G 17.77948 42.73415 ## 14 20_Tag40118_Z-175_10 2020-05-23 13:03:13 G 17.77294 42.74046 ## 15 20_Tag40118_Z-175_10 2020-05-23 13:43:13 G 17.76828 42.74493 ## 16 20_Tag40118_Z-175_10 2020-05-23 15:52:24 G 17.80728 42.72589 ## 17 20_Tag40118_Z-175_10 2020-05-23 16:44:49 G 17.79807 42.73123 ## 18 20_Tag40118_Z-175_10 2020-05-23 17:24:49 G 17.56936 42.76489 ## 19 20_Tag40118_Z-175_10 2020-05-23 20:28:07 G 16.89679 42.80489 ## 20 20_Tag40118_Z-175_10 2020-05-24 01:49:27 G 16.88879 42.78824 &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 2: Fit the model&quot; ## [1] &quot;STEP 2: Fit the model&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;When fitting the model, there are some useful parameters to consider&quot; ## [1] &quot;When fitting the model, there are some useful parameters to consider&quot; ## fit the state-space model ## SEE the help file: ?fit_ssm, to understand some of the arguments within the function ## NOTE: the function can do 3 things simultaneously: data formatting step, a pre-filtering step, and the actual model fitting ## INPUT: data.frame, tibble or sf-tibble of observations, depending on the tracking data type fit &lt;- fit_ssm(bird_track_am, ## specify what kind of model you want to fit. See details about different model types in paper. model = &quot;crw&quot;, ## specify the speed at which data points could be considered outlier points (in m/s) vmax = 27, ## time.step in hours - specify time.step of new values to be predicted (interpolation) time.step = 0.5, ## turning angle/s in degrees. remove locations with turning angles set between intervals ## default values are not 0,0 (which will not do anything), but rather 15,25 ang = c(0, 0), ## step lengths in km - check implications for GPS vs. Argos data filtering ## defaults 2500,5000 distlim = c(2500, 5000)) ## fitting crw SSM to 1 tracks... ## pars: 0 0 0 0 pars: 0.93008 0.30696 0.20177 -0.00299 pars: 1.88497 0.03116 0.0922 -0.01351 pars: 3.44545 -1.23135 -0.56662 -0.02755 pars: 4.20599 -2.35909 -2.17381 0.14558 pars: 4.71635 -1.66561 -4.10041 0.24591 pars: 5.2144 -1.41556 -5.48667 0.34885 pars: 5.54323 -1.66357 -5.96781 0.40455 pars: 5.71782 -2.18086 -5.84244 0.42465 pars: 5.77391 -2.71252 -5.44297 0.4225 pars: 5.77391 -2.71252 -5.44297 0.4225 &quot;NOTE: Depending on how you prefilter your data before running fit_ssm, you may want to consider changing some of the function parameters. E.g. you might indicate fit.to.subset = F, if you have filtered your data already and are sure all your locations are true locations.&quot; ## [1] &quot;NOTE: Depending on how you prefilter your data before running fit_ssm, you may\\nwant to consider changing some of the function parameters. E.g. you might indicate\\nfit.to.subset = F, if you have filtered your data already and are sure all your \\nlocations are true locations.&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 3: Review the model fit&quot; ## [1] &quot;STEP 3: Review the model fit&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## review the model summary ## See: https://ianjonsen.github.io/aniMotum/articles/Overview.html &quot;Check that converged and phHess were True. NOTE: I&#39;m not sure what it means if they are false&quot; ## [1] &quot;Check that converged and phHess were True. NOTE: I&#39;m not sure what it means if they are false&quot; fit ## # A tibble: 1 × 5 ## id ssm converged pdHess pmodel ## &lt;chr&gt; &lt;named list&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; ## 1 20_Tag40118_Z-175_10 &lt;ssm [15]&gt; TRUE TRUE crw &quot;Review overall summaries and SSM details for each individual. Again, not entirely sure what all the important bits are&quot; ## [1] &quot;Review overall summaries and SSM details for each individual. Again, not entirely sure what all the important bits are&quot; summary(fit) ## Animal id Model Time n.obs n.filt n.fit n.pred n.rr converged ## 20_Tag40118_Z-175_10 crw 0.5 292 1 291 617 . TRUE ## AICc ## 4582.9 ## ## -------------- ## 20_Tag40118_Z-175_10 ## -------------- ## Parameter Estimate Std.Err ## D 321.7924 18.9153 ## . . . ## tau_x 0.0664 0.1212 ## tau_y 0.0043 0.0224 &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 4: Review the different tabular ouputs after fitting the model&quot; ## [1] &quot;STEP 4: Review the different tabular ouputs after fitting the model&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## data.frame of SSM fitted values (location estimates corresponding to the observation times) floc.fitted &lt;- grab(fit, what = &quot;fitted&quot;) ## data.frame of predicted values (corresponding to locations predicted at regular time.step intervals) floc.predicted &lt;- grab(fit, what = &quot;predicted&quot;) ## data.frame of original data with a column indicating which locations to keep or not floc.data &lt;- grab(fit, what = &quot;data&quot;) ## review the new data frames you get and your original data head(data.frame(floc.fitted),2) ## id date lon lat x y ## 1 20_Tag40118_Z-175_10 2020-05-23 00:41:02 16.87377 42.7756 1878.379 5248.852 ## 2 20_Tag40118_Z-175_10 2020-05-23 02:00:55 16.97655 42.8377 1889.821 5258.239 ## x.se y.se u v u.se v.se s ## 1 0.002867360 0.0004212185 0.009405468 0.00748322 0.5970948 0.5944935 0.0000 ## 2 0.006636952 0.0004326471 6.551973003 5.62523718 9.5691434 9.5691359 11.1164 ## s.se ## 1 NA ## 2 NA head(data.frame(floc.predicted),2) ## id date lon lat x y ## 1 20_Tag40118_Z-175_10 2020-05-23 00:41:00 16.87376 42.7756 1878.379 5248.852 ## 2 20_Tag40118_Z-175_10 2020-05-23 01:11:00 16.91179 42.7981 1882.612 5252.251 ## x.se y.se u v u.se v.se ## 1 9.999991e-06 9.999951e-06 2.630553e-12 2.092932e-12 0.000010 0.000010 ## 2 4.504251e+00 4.504241e+00 8.475094e+00 6.806618e+00 9.018513 9.018501 ## s s.se ## 1 1.281909e-311 NA ## 2 1.085795e+01 NA head(data.frame(floc.data),2) ## id date lc lon lat smaj smin eor ## 1 20_Tag40118_Z-175_10 2020-05-23 00:41:02 G 16.87377 42.7756 NA NA NA ## 2 20_Tag40118_Z-175_10 2020-05-23 02:00:55 G 16.97655 42.8377 NA NA NA ## obs.type keep x y emf.x emf.y ## 1 GPS TRUE 1878.379 5248.852 0.1 0.1 ## 2 GPS TRUE 1889.821 5258.239 0.1 0.1 head(data.frame(bird_track),2) ## dataset_id scientific_name common_name site_name colony_name ## 1 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## 2 tbc Puffinus yelkouan Yelkouan Shearwater Lastovo SPA Z ## lat_colony lon_colony device ID track_id ## 1 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## 2 tbc tbc GPS 20_Tag40118_Z-175 20_Tag40118_Z-175 ## original_track_id age sex breed_stage breed_status date_gmt ## 1 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## 2 20_Tag40118_Z-175 adult unknown chick-rearing breeding 2020-05-23 ## time_gmt argos_quality equinox dttm bird_id_num Longitude ## 1 00:41:02 NA NA 2020-05-23 00:41:02 27 16.87377 ## 2 02:00:55 NA NA 2020-05-23 02:00:55 27 16.97655 ## Latitude nlocs track_segment track_colour DateTime ## 1 42.7756 1 track.start #66c2a5 2020-05-23 00:41:02 ## 2 42.8377 2 track.start #66c2a5 2020-05-23 02:00:55 ## tripID X Y Returns StartsOut ColDist ## 1 20_Tag40118_Z-175_10 16.87377 42.7756 Yes 4236.435 ## 2 20_Tag40118_Z-175_10 16.97655 42.8377 Yes 10399.611 ## dataGroup.Longitude dataGroup.Latitude optional ## 1 16.87377 42.7756 TRUE ## 2 16.97655 42.8377 TRUE &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 5: Plot the different tabular ouputs after fitting the model&quot; ## [1] &quot;STEP 5: Plot the different tabular ouputs after fitting the model&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## plot the FITTED values over original data (i.e. locations used for fitting the model) map %&gt;% addCircleMarkers(data = floc.fitted, #label = bird_track_gaps$nlocs, radius = 3, fillColor = &quot;lightgreen&quot;, fillOpacity = 0.5, stroke = F) %&gt;% addLegend(colors = &quot;lightgreen&quot;, labels = &quot;fitted values&quot;) ## plot the PREDICTED values over original data (i.e. locations predcited from the model) map %&gt;% addCircleMarkers(data = floc.predicted, #label = bird_track_gaps$nlocs, radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) %&gt;% addLegend(colors = &quot;cyan&quot;, labels = &quot;predicted values&quot;) ## plot the REMOVED values over original data (i.e. locations that were removed from the prefiltering step) map %&gt;% addCircleMarkers(data = subset(floc.data, floc.data$keep == F), #label = bird_track_gaps$nlocs, radius = 3, fillColor = &quot;red&quot;, fillOpacity = 0.5, stroke = F) %&gt;% addLegend(colors = &quot;red&quot;, labels = &quot;removed values&quot;) ## plot the PREDICTED AND REMOVED values over original data (i.e. locations that were removed from the prefiltering step) map %&gt;% addCircleMarkers(data = floc.predicted, #label = bird_track_gaps$nlocs, radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) %&gt;% addCircleMarkers(data = subset(floc.data, floc.data$keep == F), #label = bird_track_gaps$nlocs, radius = 5, fillColor = &quot;red&quot;, fillOpacity = 0.5, stroke = F) &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 6: Visualising a model fit&quot; ## [1] &quot;STEP 6: Visualising a model fit&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; # plot time-series of the fitted values plot(fit, what = &quot;fitted&quot;, type = 1, pages = 1) # plot time-series of the predcited values plot(fit, what = &quot;predicted&quot;, type = 1, pages = 1) # plot fitted values as a 2-d track plot(fit, what = &quot;predicted&quot;, type = 2, pages = 1, ## 95 % confidence ellipses (orange-filled ellipses) around the predicted ## values are also displayed, but can be faded away by choosing a low alpha value alpha = 0.05, ## Observations that failed the prefilter stage are displayed (black x’s) ## by default but can be turned off with the argument outlier = FALSE) outlier = T) # plot fitted values as a 2-d track plot(fit, what = &quot;predicted&quot;, type = 2, pages = 1, ## 95 % confidence ellipses (orange-filled ellipses) around the predicted ## values are also displayed, but can be faded away by choosing a low alpha value alpha = 0.00, ## Observations that failed the prefilter stage are displayed (black x’s) ## by default but can be turned off with the argument outlier = FALSE) outlier = T) &quot;CONSIDER: How can we help user to decide whether their data is of high enough quality or not for a track2KBA styled analysis? Perhaps the outputs from grab(fit, what = predicted) can be of help? Here, see an indication of standard errors around predicted locations via (x.se, y.se in km)&quot; ## [1] &quot;CONSIDER: How can we help user to decide whether their data is of high enough\\nquality or not for a track2KBA styled analysis? Perhaps the outputs from \\ngrab(fit, what = predicted) can be of help? Here, see an indication of standard \\nerrors around predicted locations via (x.se, y.se in km)&quot; plot(floc.predicted$x.se) plot(floc.predicted$y.se) &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 7: Further assessment of model fit&quot; ## [1] &quot;STEP 7: Further assessment of model fit&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## SEE: https://ianjonsen.github.io/aniMotum/articles/SSM_validation.html &quot;Does this assessment take into account all tracks simultanesouly? Or does it only assess each track individually? What are the implications for this assessment in the context of track2KBA? Not sure...&quot; ## [1] &quot;Does this assessment take into account all tracks simultanesouly? Or does it only\\nassess each track individually? What are the implications for this assessment in\\nthe context of track2KBA? Not sure...&quot; # use patchwork package to arrange plot.osar options #library(patchwork) # calculate &amp; plot residuals &quot;NOTE: Computationally intensive! Takes time!!&quot; ## [1] &quot;NOTE: Computationally intensive! Takes time!!&quot; #res.rw &lt;- osar(fit) #(plot(res.rw, type = &quot;ts&quot;) | plot(res.rw, type = &quot;qq&quot;)) / # (plot(res.rw, type = &quot;acf&quot;) | plot_spacer()) &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 8: Assess potential behaviours along track: Move_persistence_models&quot; ## [1] &quot;STEP 8: Assess potential behaviours along track: Move_persistence_models&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## SEE: https://ianjonsen.github.io/aniMotum/articles/Move_persistence_models.html ## NOTE: You can fit this model in two ways ## SEE: Alternate script: tracking_CleanAndPrepareData2_AllTracks_aniMotumAllSteps &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 9: Reroute tracks that went overland back via the sea&quot; ## [1] &quot;STEP 9: Reroute tracks that went overland back via the sea&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## NOTE: This will reroute the point locations only! So if you have a very detailed ## coastline, then it may appear the animals still move over land when plotting lines ## between points. The success of the analysis is also dependent on the underlying ## basemap used. The natural earth map (used by default) is good, but not very finely ## detailed. i.e. resolution could be higher ## install packages #install.packages(&quot;pathroutr&quot;, repos = &quot;https://jmlondon.r-universe.dev&quot;) library(pathroutr) # for rerouting tracks #install.packages(&quot;devtools&quot;) #devtools::install_github(&quot;ropensci/rnaturalearthhires&quot;) library(rnaturalearthhires) # for higher resolution natural earth map ## reroute the track using the predicted values of the previously fitted model fit.reroute &lt;- route_path(fit, what = &quot;predicted&quot;, map_scale = 10, dist = 10000, append = T) ## data.frame of rerouted values ## NOTE: Some of these locations may not be ecologically realistic anymore ## i.e. if you were to recalculate travel speeds, they may be unrealistic ## must consider trade-off of approach accordingly floc.predicted.reroute &lt;- grab(fit.reroute, what = &quot;rerouted&quot;) ## review data head(data.frame(floc.predicted),2) ## id date lon lat x y ## 1 20_Tag40118_Z-175_10 2020-05-23 00:41:00 16.87376 42.7756 1878.379 5248.852 ## 2 20_Tag40118_Z-175_10 2020-05-23 01:11:00 16.91179 42.7981 1882.612 5252.251 ## x.se y.se u v u.se v.se ## 1 9.999991e-06 9.999951e-06 2.630553e-12 2.092932e-12 0.000010 0.000010 ## 2 4.504251e+00 4.504241e+00 8.475094e+00 6.806618e+00 9.018513 9.018501 ## s s.se ## 1 1.281909e-311 NA ## 2 1.085795e+01 NA head(data.frame(floc.predicted.reroute),2) ## id date lon lat x y ## 1 20_Tag40118_Z-175_10 2020-05-23 01:11:00 16.91179 42.79810 1882.612 5252.251 ## 2 20_Tag40118_Z-175_10 2020-05-23 01:41:00 16.95701 42.82535 1887.646 5256.372 ## x.se y.se ## 1 4.504251 4.504241 ## 2 3.176432 3.176422 ## plot original vs predicted vs re-routed map %&gt;% ## Predicted addCircleMarkers(data = floc.predicted, #label = bird_track$nlocs, radius = 5, fillColor = &quot;green&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between predicted points addPolylines(lng = floc.predicted$lon, lat = floc.predicted$lat, weight = 1, color = &quot;green&quot;) %&gt;% ## RE-ROUTED addCircleMarkers(data = floc.predicted.reroute, #label = bird_track$nlocs, radius = 3, fillColor = &quot;red&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between re-routed points addPolylines(lng = floc.predicted.reroute$lon, lat = floc.predicted.reroute$lat, weight = 1, color = &quot;red&quot;) &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 10: Reroute tracks that went overland back via the sea using pathroutr package&quot; ## [1] &quot;STEP 10: Reroute tracks that went overland back via the sea using pathroutr package&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## SEE: https://rdrr.io/github/jmlondon/pathroutr/f/vignettes/reroute_demo.Rmd ## Consider the tutorial for pathroutr ## NOTE: This is very computationally expensive when you have many data points ## and high resolution coastline data. Therefore, it may be worth subsetting ## parts of the track that go over land and trying to reroute these parts only. ## Then you could merge these parts of the track back onto the remainder of the track &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 11: Simulate animal tracks&quot; ## [1] &quot;STEP 11: Simulate animal tracks&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## NOTE: This step is used more for habitat modelling / SDMs. ## Step not required for track2KBA st &lt;- sim_fit(fit, what=&quot;predicted&quot;, reps=5, ## cpf: is the animal exhibiting central place foraging behaviour? cpf=T) plot(st, zoom=TRUE) &quot;NOTE: Can also reroute these simulated tracks again as above. Will need to consider application of this step.&quot; ## [1] &quot;NOTE: Can also reroute these simulated tracks again as above.\\nWill need to consider application of this step.&quot; 5.11 Compare different interplation methods Now that you have applied the different inteprolation methods, you can compare the outputs. Compare the outputs via visual inspection. [Consider discussions about ways to support comparisons] ## plot original vs predicted from aniMotum vs re-routed from aniMotum vs speedfilter &amp; linear interpolation map %&gt;% ## Predicted addCircleMarkers(data = floc.predicted, #label = bird_track$nlocs, radius = 5, fillColor = &quot;green&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between predicted points addPolylines(lng = floc.predicted$lon, lat = floc.predicted$lat, weight = 1, color = &quot;green&quot;) %&gt;% ## RE-ROUTED addCircleMarkers(data = floc.predicted.reroute, #label = bird_track$nlocs, radius = 3, fillColor = &quot;red&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between re-routed points addPolylines(lng = floc.predicted.reroute$lon, lat = floc.predicted.reroute$lat, weight = 1, color = &quot;red&quot;) %&gt;% ## Speed Filtered and Linear interpolated addCircleMarkers(data = trip_interp, #label = bird_track$nlocs, radius = 3, fillColor = &quot;cyan&quot;, fillOpacity = 0.5, stroke = F) %&gt;% ## plot lines between Speed Filtered and Linear interpolated points addPolylines(lng = trip_interp$Longitude, lat = trip_interp$Latitude, weight = 1, color = &quot;cyan&quot;) 5.12 Review comparison You can see from plot above that the “advanced” interpolation method of CRAWL via aniMotum creates some additional loops on the tracking data. I.e it appears that the animal sort of shoots past some points and then returns back. Either this tutorial is applying the aniMotum protocol incorrectly to the data, OR: It’s likely that the algorithm underpinning something like CRAWL is more suited to animal tracking data for diving marine predators that move much more slowly. Future examples should consider comparisons with tracking data for diving marine predators. 5.13 Interpolation: all data [Will also need to find appropriate way to bind metadata back to individual trips] Now that you have compared interpolation methods, you will want to apply the interpolation to all trips from the tracked animals. 5.13.1 Linear interpolation: all animals ## total number of trips length(unique(tracks$tripID)) ## [1] 339 ## create data frame and remove trips with &lt;5 locations; as required for track2KBA analysis trips_to_keep &lt;- data.frame(tracks) %&gt;% group_by(tripID) %&gt;% summarise(triplocs = n()) %&gt;% dplyr::filter(triplocs &gt; 5) ## tracks_df &lt;- data.frame(tracks) %&gt;% dplyr::filter(tripID %in% trips_to_keep$tripID) ## length(unique(tracks_df$tripID)) ## [1] 296 ## start blank df tracks_interp_df &lt;- data.frame() for(i in 1:length(unique(tracks_df$tripID))){ temp &lt;- tracks_df %&gt;% dplyr::filter(tripID == unique(tracks_df$tripID)[i]) ## remove any erroneous locations due to speed use the McConnel Speed Filter ##from the trip package trip_obj &lt;- temp %&gt;% #group_by(tripID) %&gt;% dplyr::select(x = X, y = Y, DateTime, everything()) %&gt;% trip() ## McConnel Speedilter ----- ## apply speedfilter and creat data frame trip_obj$Filter &lt;- speedfilter(trip_obj, max.speed = 100) # speed in km/h trip_obj &lt;- data.frame(trip_obj) head(trip_obj,2) ## How many locations were removed with speed filter? nrow(subset(trip_obj, trip_obj$Filter == F)) ## Keep only filtered coordinates - after checking dimensions of other outputs again trip_obj &lt;- subset(trip_obj,trip_obj$Filter==TRUE) ## Linear interpolation ----- ## Apply linear interpolation step to speed filtered only data ## create ltraj object trip_lt &lt;- as.ltraj(xy = bind_cols(x = trip_obj$x, y = trip_obj$y), date = trip_obj$DateTime, id = trip_obj$tripID) ## Linearly interpolate/re-sample tracks every 30 minutes (specified in seconds) trip_interp &lt;- redisltraj(trip_lt, 1800, type=&quot;time&quot;) head(trip_interp) ## convert back into format for track2KBA - dataframe for now trip_interp &lt;- ld(trip_interp) %&gt;% dplyr::mutate(Longitude = x, Latitude = y) ## bind back onto dataframe tracks_interp_df &lt;- rbind(tracks_interp_df, trip_interp) ## remove temporary items before next loop iteration rm(temp,trip_lt,trip_obj) ## print(i) } ## [1] 1 ## [1] 2 ## [1] 3 ## [1] 4 ## [1] 5 ## [1] 6 ## [1] 7 ## [1] 8 ## [1] 9 ## [1] 10 ## [1] 11 ## [1] 12 ## [1] 13 ## [1] 14 ## [1] 15 ## [1] 16 ## [1] 17 ## [1] 18 ## [1] 19 ## [1] 20 ## [1] 21 ## [1] 22 ## [1] 23 ## [1] 24 ## [1] 25 ## [1] 26 ## [1] 27 ## [1] 28 ## [1] 29 ## [1] 30 ## [1] 31 ## [1] 32 ## [1] 33 ## [1] 34 ## [1] 35 ## [1] 36 ## [1] 37 ## [1] 38 ## [1] 39 ## [1] 40 ## [1] 41 ## [1] 42 ## [1] 43 ## [1] 44 ## [1] 45 ## [1] 46 ## [1] 47 ## [1] 48 ## [1] 49 ## [1] 50 ## [1] 51 ## [1] 52 ## [1] 53 ## [1] 54 ## [1] 55 ## [1] 56 ## [1] 57 ## [1] 58 ## [1] 59 ## [1] 60 ## [1] 61 ## [1] 62 ## [1] 63 ## [1] 64 ## [1] 65 ## [1] 66 ## [1] 67 ## [1] 68 ## [1] 69 ## [1] 70 ## [1] 71 ## [1] 72 ## [1] 73 ## [1] 74 ## [1] 75 ## [1] 76 ## [1] 77 ## [1] 78 ## [1] 79 ## [1] 80 ## [1] 81 ## [1] 82 ## [1] 83 ## [1] 84 ## [1] 85 ## [1] 86 ## [1] 87 ## [1] 88 ## [1] 89 ## [1] 90 ## [1] 91 ## [1] 92 ## [1] 93 ## [1] 94 ## [1] 95 ## [1] 96 ## [1] 97 ## [1] 98 ## [1] 99 ## [1] 100 ## [1] 101 ## [1] 102 ## [1] 103 ## [1] 104 ## [1] 105 ## [1] 106 ## [1] 107 ## [1] 108 ## [1] 109 ## [1] 110 ## [1] 111 ## [1] 112 ## [1] 113 ## [1] 114 ## [1] 115 ## [1] 116 ## [1] 117 ## [1] 118 ## [1] 119 ## [1] 120 ## [1] 121 ## [1] 122 ## [1] 123 ## [1] 124 ## [1] 125 ## [1] 126 ## [1] 127 ## [1] 128 ## [1] 129 ## [1] 130 ## [1] 131 ## [1] 132 ## [1] 133 ## [1] 134 ## [1] 135 ## [1] 136 ## [1] 137 ## [1] 138 ## [1] 139 ## [1] 140 ## [1] 141 ## [1] 142 ## [1] 143 ## [1] 144 ## [1] 145 ## [1] 146 ## [1] 147 ## [1] 148 ## [1] 149 ## [1] 150 ## [1] 151 ## [1] 152 ## [1] 153 ## [1] 154 ## [1] 155 ## [1] 156 ## [1] 157 ## [1] 158 ## [1] 159 ## [1] 160 ## [1] 161 ## [1] 162 ## [1] 163 ## [1] 164 ## [1] 165 ## [1] 166 ## [1] 167 ## [1] 168 ## [1] 169 ## [1] 170 ## [1] 171 ## [1] 172 ## [1] 173 ## [1] 174 ## [1] 175 ## [1] 176 ## [1] 177 ## [1] 178 ## [1] 179 ## [1] 180 ## [1] 181 ## [1] 182 ## [1] 183 ## [1] 184 ## [1] 185 ## [1] 186 ## [1] 187 ## [1] 188 ## [1] 189 ## [1] 190 ## [1] 191 ## [1] 192 ## [1] 193 ## [1] 194 ## [1] 195 ## [1] 196 ## [1] 197 ## [1] 198 ## [1] 199 ## [1] 200 ## [1] 201 ## [1] 202 ## [1] 203 ## [1] 204 ## [1] 205 ## [1] 206 ## [1] 207 ## [1] 208 ## [1] 209 ## [1] 210 ## [1] 211 ## [1] 212 ## [1] 213 ## [1] 214 ## [1] 215 ## [1] 216 ## [1] 217 ## [1] 218 ## [1] 219 ## [1] 220 ## [1] 221 ## [1] 222 ## [1] 223 ## [1] 224 ## [1] 225 ## [1] 226 ## [1] 227 ## [1] 228 ## [1] 229 ## [1] 230 ## [1] 231 ## [1] 232 ## [1] 233 ## [1] 234 ## [1] 235 ## [1] 236 ## [1] 237 ## [1] 238 ## [1] 239 ## [1] 240 ## [1] 241 ## [1] 242 ## [1] 243 ## [1] 244 ## [1] 245 ## [1] 246 ## [1] 247 ## [1] 248 ## [1] 249 ## [1] 250 ## [1] 251 ## [1] 252 ## [1] 253 ## [1] 254 ## [1] 255 ## [1] 256 ## [1] 257 ## [1] 258 ## [1] 259 ## [1] 260 ## [1] 261 ## [1] 262 ## [1] 263 ## [1] 264 ## [1] 265 ## [1] 266 ## [1] 267 ## [1] 268 ## [1] 269 ## [1] 270 ## [1] 271 ## [1] 272 ## [1] 273 ## [1] 274 ## [1] 275 ## [1] 276 ## [1] 277 ## [1] 278 ## [1] 279 ## [1] 280 ## [1] 281 ## [1] 282 ## [1] 283 ## [1] 284 ## [1] 285 ## [1] 286 ## [1] 287 ## [1] 288 ## [1] 289 ## [1] 290 ## [1] 291 ## [1] 292 ## [1] 293 ## [1] 294 ## [1] 295 ## [1] 296 ## review it worked by checking total number of unique trips and comparing to original length(unique(tracks_df$tripID)) ## [1] 296 length(unique(tracks_interp_df$id)) ## [1] 296 5.13.2 Advanced interpolation: all animals ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## aniMotum filter: All trips ---- ## Bulk filter individual trips from all birds ---- &quot;May need to consider a way of bulk checking quality of data.&quot; ## [1] &quot;May need to consider a way of bulk checking quality of data.&quot; ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 1: Format the data&quot; ## [1] &quot;STEP 1: Format the data&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; all_track_am &lt;- data.frame(tracks) %&gt;% mutate(lc = &quot;G&quot;) %&gt;% dplyr::select(id = &quot;tripID&quot;, date = &quot;dttm&quot;, lc, lon = &quot;Longitude&quot;, lat = &quot;Latitude&quot;) ## remove trips with &lt;5 locations; as required for track2KBA analysis trips_to_keep &lt;- all_track_am %&gt;% group_by(id) %&gt;% summarise(triplocs = n()) %&gt;% dplyr::filter(triplocs &gt; 5) ## filter out the tracks all_track_am &lt;- all_track_am %&gt;% dplyr::filter(id %in% trips_to_keep$id) ## head(all_track_am,2) ## id date lc lon lat ## 1 19_Tag17600_Z-9_02 2019-05-26 02:53:02 G 13.71368 44.38107 ## 2 19_Tag17600_Z-9_02 2019-05-26 03:15:28 G 13.68968 44.38649 length(unique(all_track_am$id)) ## [1] 296 &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 2: Fit the model&quot; ## [1] &quot;STEP 2: Fit the model&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## fit the model to all data fit_alltrack &lt;- fit_ssm(all_track_am, ## specify what kind of model you want to fit. See details about different model types in paper. model = &quot;crw&quot;, ## specify the speed at which data points could be considered outlier points (in m/s) vmax = 27, ## time.step in hours - specify time.step of new values to be predicted (interpolation) time.step = 0.5) ## fitting crw SSM to 296 tracks... ## pars: 0 0 0 0 pars: 0.9263 0.28485 0.24565 0.02189 pars: 1.89385 0.12501 0.05358 -0.01581 pars: 3.4163 -0.83213 -0.9312 -0.11099 pars: 4.08538 -2.70098 -1.44381 -0.01207 pars: 4.64006 -4.61112 -1.90952 0.18708 pars: 5.17443 -5.81018 -3.25561 0.40791 pars: 5.56827 -6.53669 -4.48991 0.57769 pars: 5.79135 -7.01369 -5.08282 0.6688 pars: 5.88034 -7.20126 -5.32379 0.70534 pars: 5.88034 -7.20126 -5.32379 0.70534 ## pars: 0 0 0 0 pars: 0.58176 0.81248 0.00294 -0.03768 pars: 0.51474 1.80891 -0.02001 -0.08364 pars: -0.25033 2.28375 -0.16816 -0.49259 pars: -0.30069 2.48736 0.57763 -1.12489 pars: -0.15794 2.55616 0.17854 -1.95464 pars: 0.14062 2.57837 -0.01761 -2.67904 pars: 0.34616 2.57478 -0.12629 -3.65162 pars: 0.41289 2.58802 -0.08278 -4.64836 pars: 0.36858 2.60737 0.2547 -7 pars: 0.33682 2.57996 0.17747 -7 pars: 0.33682 2.57996 0.17747 -7 ## pars: 0 0 0 0 pars: 0.91027 0.35922 0.17787 -0.10363 pars: 1.86072 0.27116 -0.08822 0.03084 pars: 3.51131 -0.84638 -0.81729 0.37103 pars: 4.17406 -2.83524 -0.38519 0.5688 pars: 4.64104 -4.12827 -0.59006 0.77318 pars: 4.99393 -4.85524 -1.65021 0.85834 pars: 5.17709 -5.1008 -2.69963 0.84691 pars: 5.22009 -5.13779 -3.02682 0.83298 pars: 5.22009 -5.13779 -3.02682 0.83298 ## pars: 0 0 0 0 pars: 0.86815 0.27119 0.41515 -0.02053 pars: 1.84822 0.10277 0.31078 -0.0067 pars: 3.79039 -0.70074 -0.65196 0.03955 pars: 4.56312 -1.12423 -2.78595 0.16713 pars: 4.69465 -1.71726 -2.8657 0.17673 pars: 4.76875 -2.27128 -2.79052 0.17312 pars: 4.76875 -2.27128 -2.79052 0.17312 ## pars: 0 0 0 0 pars: 0.68005 0.71454 0.16321 0.01795 pars: 0.66186 1.61042 0.60287 -0.04349 pars: 1.21702 2.10275 1.27186 -0.0865 pars: 1.28927 2.62666 2.11884 -0.14048 pars: 1.30546 3.48671 2.32689 -0.60607 pars: 1.74758 3.8915 3.12693 -0.58136 pars: 2.1959 3.83817 3.14165 -1.47353 pars: 2.28342 4.33034 3.17602 -1.24904 pars: 2.28673 3.96274 3.34544 -1.41727 pars: 2.3057 4.01911 3.43411 -1.51427 pars: 2.3057 4.01911 3.43411 -1.51427 ## pars: 0 0 0 0 pars: 0.77763 0.60809 0.15927 -0.01205 pars: 0.95678 1.58368 0.28627 -0.01465 pars: 1.49526 2.00042 1.01444 -0.09299 pars: 1.6993 2.62642 1.76629 -0.12761 pars: 2.11686 2.79169 2.65972 -0.13844 pars: 2.74933 3.51755 2.92843 -0.16852 pars: 3.71652 3.27381 2.90382 -0.23573 pars: 4.1031 3.56426 2.64099 -0.79517 pars: 4.34433 3.4827 2.5501 -0.717 pars: 4.55359 3.40169 2.34622 -0.75694 pars: 4.55359 3.40169 2.34622 -0.75694 ## pars: 0 0 0 0 pars: 0.89865 0.42927 0.07675 -0.04753 pars: 1.81246 0.28038 -0.27215 0.0976 pars: 3.73195 -1.09953 -0.71572 0.28826 pars: 4.42169 -3.38866 -0.56936 0.57873 pars: 4.96458 -5.08374 -1.36833 0.85886 pars: 5.44791 -6.56591 -2.34055 1.10697 pars: 5.75761 -7.53377 -2.78011 1.26876 pars: 5.92283 -8.05036 -3.01195 1.35512 pars: 5.96921 -8.19404 -3.09025 1.37916 pars: 5.96921 -8.19404 -3.09025 1.37916 ## pars: 0 0 0 0 pars: 0.99968 -0.00093 0.02508 0.00241 pars: 1.47703 -0.50828 -0.69204 -0.01923 pars: 2.0189 -1.84943 -2.48526 -0.06822 pars: 2.43108 -3.5284 -4.0082 -0.11436 pars: 2.48068 -3.72916 -4.17 -0.11942 pars: 2.48068 -3.72916 -4.17 -0.11942 ## pars: 0 0 0 0 pars: 0.99966 0.01471 0.01973 -0.00853 pars: 1.54156 -0.52117 -0.60771 0.15111 pars: 2.11333 -1.81221 -2.09648 0.49344 pars: 2.48511 -3.21094 -3.55528 0.81676 pars: 2.84447 -4.56407 -4.69359 1.0881 pars: 3.01018 -5.05963 -5.15643 1.20933 pars: 3.09527 -5.3146 -5.39553 1.27141 pars: 3.09527 -5.3146 -5.39553 1.27141 ## pars: 0 0 0 0 pars: 0.99995 0.00969 0.00134 -0.00348 pars: 1.55682 -0.68533 -0.44088 0.10281 pars: 2.19107 -2.3153 -1.58924 0.33105 pars: 2.64565 -3.86222 -2.92367 0.55377 pars: 3.20252 -5.33137 -5.01989 0.80592 pars: 3.4981 -6.00491 -5.80697 0.92861 pars: 3.74875 -6.5689 -6.45577 1.03277 pars: 3.8355 -6.76461 -6.68053 1.06881 pars: 3.8355 -6.76461 -6.68053 1.06881 ## pars: 0 0 0 0 pars: 0.97539 0.10311 0.18579 0.05891 pars: 1.84315 -0.17205 -0.20284 -0.08336 pars: 2.60633 -0.43047 -0.77616 -0.23195 pars: 3.18548 -0.8042 -1.48012 -0.40328 pars: 3.70212 -1.39282 -2.08822 -0.533 pars: 4.07476 -2.13698 -2.63849 -0.60055 pars: 4.2842 -2.98477 -3.12538 -0.6186 pars: 4.4365 -3.83794 -3.62323 -0.58629 pars: 4.48313 -4.16973 -3.92379 -0.54088 pars: 4.48313 -4.16973 -3.92379 -0.54088 ## pars: 0 0 0 0 pars: 0.94944 0.15921 0.27029 0.01265 pars: 1.88526 -0.09347 0.02484 5e-05 pars: 2.74438 -0.31551 -0.43583 -0.01947 pars: 3.32142 -0.58816 -1.20509 -0.04999 pars: 3.815 -1.09743 -1.9096 -0.07619 pars: 4.15333 -1.83978 -2.48776 -0.0894 pars: 4.35286 -2.6917 -2.97191 -0.09268 pars: 4.56501 -4.10715 -3.66349 -0.08442 pars: 4.56307 -4.24152 -3.85143 -0.07461 pars: 4.56307 -4.24152 -3.85143 -0.07461 ## pars: 0 0 0 0 pars: 0.98839 0.12688 0.07733 -0.03183 pars: 1.78378 -0.34703 -0.27967 0.09191 pars: 2.50525 -0.95991 -0.57197 0.22766 pars: 3.11043 -1.64129 -0.95411 0.38078 pars: 3.66389 -2.19891 -1.56104 0.50065 pars: 4.09788 -2.59022 -2.36947 0.57116 pars: 4.40443 -2.90322 -2.9313 0.60317 pars: 4.54387 -3.0838 -3.18324 0.61206 pars: 4.58204 -3.16967 -3.28433 0.60921 pars: 4.58204 -3.16967 -3.28433 0.60921 ## pars: 0 0 0 0 pars: 0.97773 0.16841 0.10683 -0.06538 pars: 1.84607 -0.20709 -0.17323 0.09754 pars: 2.61415 -0.75086 -0.46358 0.27092 pars: 3.24156 -1.38359 -0.86733 0.47827 pars: 3.84448 -1.85937 -1.49389 0.61075 pars: 4.35821 -2.26102 -2.2517 0.6328 pars: 4.76944 -2.61796 -2.74825 0.65195 pars: 5.01454 -2.84047 -3.02969 0.66687 pars: 5.11331 -2.94426 -3.15194 0.66835 pars: 5.11331 -2.94426 -3.15194 0.66835 ## pars: 0 0 0 0 pars: 0.9869 0.03965 0.15579 -0.01359 pars: 1.78548 -0.14204 -0.41596 0.03492 pars: 2.50784 -0.2611 -1.0953 0.08512 pars: 3.12929 -0.6376 -1.77857 0.1572 pars: 3.71017 -1.24696 -2.31555 0.2111 pars: 4.18807 -1.9808 -2.79684 0.24908 pars: 4.51912 -2.81455 -3.23778 0.27826 pars: 4.72967 -3.69916 -3.65346 0.29689 pars: 4.89973 -4.45146 -4.14166 0.29793 pars: 4.93772 -4.68572 -4.36223 0.29203 pars: 4.93772 -4.68572 -4.36223 0.29203 ## pars: 0 0 0 0 pars: 0.81132 0.56003 0.16502 0.02996 pars: 1.10009 1.51153 0.05951 0.01931 pars: 1.95899 1.61312 0.56142 0.01209 pars: 2.41773 2.4915 0.68598 0.06206 pars: 3.38915 2.60871 0.89215 0.07253 pars: 3.86441 3.31837 0.37337 0.10978 pars: 4.82246 3.24109 0.09843 0.13368 pars: 4.69482 3.12476 -0.34192 0.4714 pars: 4.56392 3.18186 -1.21084 0.9453 pars: 4.45856 3.20505 -3.28165 1.89364 pars: 4.5252 3.22868 -3.9878 2.11904 pars: 4.5252 3.22868 -3.9878 2.11904 ## pars: 0 0 0 0 pars: 0.9665 0.23211 0.09476 -0.05492 pars: 1.84791 -0.15681 -0.13692 0.07994 pars: 3.08782 -1.70884 -0.66843 0.37985 pars: 3.59354 -3.40787 -1.65549 0.82919 pars: 4.23171 -5.71789 -2.98319 1.51266 pars: 4.65362 -7.28588 -3.70737 2.01925 pars: 4.95626 -8.41295 -4.21799 2.38385 pars: 5.09024 -8.91195 -4.44397 2.54529 pars: 5.12346 -9.0355 -4.50061 2.58528 pars: 5.12346 -9.0355 -4.50061 2.58528 ## pars: 0 0 0 0 pars: 0.91291 0.237 0.33231 0.00158 pars: 1.88652 0.14835 0.12243 -0.01156 pars: 3.54212 -0.49268 -1.05479 -0.04442 pars: 4.29104 -2.26824 -1.94507 0.13649 pars: 4.80171 -4.2481 -1.36566 0.28654 pars: 5.33064 -5.65063 -1.3492 0.45299 pars: 5.69772 -6.16897 -1.80038 0.56577 pars: 5.91516 -6.0876 -2.47759 0.63362 pars: 5.99864 -5.70674 -3.10757 0.66107 pars: 5.99864 -5.70674 -3.10757 0.66107 ## pars: 0 0 0 0 pars: 0.79798 0.48967 0.35092 -0.01736 pars: 1.02781 1.30375 0.88373 0.00662 pars: 0.90802 2.48994 2.84024 -0.21705 pars: 0.55855 4.56443 2.17658 -0.87532 pars: 0.95058 3.45553 2.68902 -0.48949 pars: 1.48136 3.71019 3.50622 -0.61937 pars: 2.25197 3.64238 3.04963 -1.09303 pars: 2.81581 3.06334 3.21022 -1.68654 pars: 3.5517 3.00296 3.08124 -1.00138 pars: 3.59746 3.0598 2.99692 -0.94036 pars: 3.59746 3.0598 2.99692 -0.94036 ## pars: 0 0 0 0 pars: 0.85855 0.4785 0.1825 0.02497 pars: 1.66188 0.79035 -0.30657 -0.11004 pars: 3.342 0.36741 -1.64095 -0.22899 pars: 4.68641 -1.33575 -1.35093 -0.29292 pars: 5.01743 -1.91598 -1.47668 -0.27521 pars: 5.35694 -2.46902 -2.08014 -0.25914 pars: 5.49291 -2.64951 -2.72386 -0.24486 pars: 5.52132 -2.67343 -3.1263 -0.23012 pars: 5.52132 -2.67343 -3.1263 -0.23012 ## pars: 0 0 0 0 pars: 0.75977 0.54974 0.32191 0.13005 pars: 1.18161 0.72552 1.20549 0.02783 pars: 1.90088 1.3784 1.4164 0.137 pars: 2.7566 1.01939 1.50305 0.49941 pars: 3.44296 1.05113 0.86382 0.84481 pars: 3.87595 0.92593 0.45056 1.52022 pars: 3.94162 1.02435 0.03479 2.42196 pars: 3.89 1.64707 -1.49953 6.06276 pars: 3.50771 2.01809 -1.49864 6.68783 pars: 3.59348 1.74024 -1.19899 6.11944 pars: 3.55542 1.75328 -1.17756 6.27822 pars: 3.55542 1.75328 -1.17756 6.27822 ## pars: 0 0 0 0 pars: 0.70347 0.31554 0.63168 -0.08091 pars: 0.67902 1.04088 1.3172 -0.02303 pars: -0.39154 2.45112 3.14988 0.52361 pars: 4e-05 0.63397 3.65318 1.09227 pars: -0.41112 2.30295 3.01578 0.52521 pars: -0.4389 2.00594 2.74722 0.51235 pars: -0.42645 2.11866 2.53349 0.19181 pars: -0.34589 1.99795 2.6987 0.43343 pars: -0.12745 1.94839 2.64989 0.30447 pars: 0.52785 1.79971 2.50347 -0.08243 pars: 1.47742 1.89888 2.06281 -0.1174 pars: 0.74054 2.04171 2.32049 0.07227 pars: 0.60949 1.91492 2.42468 -0.00655 pars: 0.76032 1.82379 2.40235 0.01212 pars: 0.89712 1.83382 2.39629 0.12637 pars: 0.98585 1.80117 2.37229 0.27599 pars: 1.06326 1.79773 2.33717 0.32089 pars: 1.06326 1.79773 2.33717 0.32089 ## pars: 0 0 0 0 pars: 0.98417 0.16573 0.0507 -0.0372 pars: 1.64932 -0.4729 -0.31692 0.08352 pars: 2.25403 -2.33798 -1.05502 0.36747 pars: 2.66989 -3.77077 -2.34819 0.56685 pars: 2.79537 -4.08284 -3.61682 0.58285 pars: 2.77237 -3.99719 -4.10117 0.51527 pars: 2.69703 -3.83333 -4.5999 0.36216 pars: 2.65739 -3.85929 -4.98488 0.21684 pars: 2.65739 -3.85929 -4.98488 0.21684 ## pars: 0 0 0 0 pars: 0.93786 0.33868 0.0602 -0.04561 pars: 1.86653 0.03412 -0.12915 0.04905 pars: 3.34604 -1.52663 -0.29135 0.20099 pars: 3.79672 -3.5626 -0.80165 0.45709 pars: 4.46358 -6.33475 -2.79853 0.95091 pars: 4.95169 -8.33941 -4.31569 1.31117 pars: 5.33397 -9.93944 -5.21835 1.59906 pars: 5.56929 -10.92538 -5.76434 1.77647 pars: 5.65677 -11.29189 -5.96731 1.84242 pars: 5.65677 -11.29189 -5.96731 1.84242 ## pars: 0 0 0 0 pars: 0.97901 0.13574 0.15203 0.00226 pars: 1.84953 -0.18979 -0.21689 -0.009 pars: 2.62123 -0.60612 -0.69765 -0.01127 pars: 3.23625 -1.16907 -1.24973 -0.00327 pars: 3.81207 -1.79259 -1.77846 0.00625 pars: 4.27744 -2.45537 -2.36503 0.01566 pars: 4.59422 -3.13124 -3.03044 0.02407 pars: 4.78946 -3.62078 -3.57566 0.02805 pars: 4.84411 -3.8203 -3.79392 0.02885 pars: 4.84411 -3.8203 -3.79392 0.02885 ## pars: 0 0 0 0 pars: 0.98437 0.07352 0.15999 -0.00397 pars: 1.8212 -0.17298 -0.32869 0.00813 pars: 2.57791 -0.3911 -0.94482 0.02177 pars: 3.22241 -0.82837 -1.57178 0.0402 pars: 3.85268 -1.47143 -2.00656 0.05425 pars: 4.4121 -2.22508 -2.35151 0.06329 pars: 4.88875 -2.87058 -2.69916 0.06845 pars: 5.20966 -3.21783 -2.94914 0.07125 pars: 5.37489 -3.39952 -3.09617 0.07239 pars: 5.42235 -3.46402 -3.15983 0.07239 pars: 5.42235 -3.46402 -3.15983 0.07239 ## pars: 0 0 0 0 pars: 0.97478 0.21998 0.02913 0.02379 pars: 1.7955 -0.32847 -0.11801 -0.03915 pars: 2.75217 -2.1563 -0.31979 -0.18817 pars: 3.31739 -3.68121 -1.42305 -0.36786 pars: 3.74462 -4.74285 -3.15054 -0.52673 pars: 4.07557 -5.49142 -4.93087 -0.64139 pars: 4.14777 -5.66268 -5.22954 -0.666 pars: 4.14777 -5.66268 -5.22954 -0.666 ## pars: 0 0 0 0 pars: 0.98819 0.11956 0.09437 0.01657 pars: 1.80303 -0.31548 -0.28575 -0.03115 pars: 2.54842 -0.8591 -0.6622 -0.11574 pars: 3.18192 -1.48288 -1.10416 -0.23512 pars: 3.78956 -2.01116 -1.68612 -0.34928 pars: 4.3111 -2.44294 -2.41575 -0.4451 pars: 4.71419 -2.77299 -2.86262 -0.5155 pars: 4.95513 -2.97671 -3.11574 -0.55693 pars: 5.04863 -3.07068 -3.22342 -0.57194 pars: 5.04863 -3.07068 -3.22342 -0.57194 ## pars: 0 0 0 0 pars: 0.99892 0.04314 0.0155 -0.00761 pars: 1.62374 -0.66565 -0.29289 0.10242 pars: 2.31135 -2.43147 -1.03304 0.35371 pars: 2.87185 -3.87875 -2.34894 0.60169 pars: 3.45127 -4.99006 -3.93318 0.82097 pars: 3.88358 -5.82472 -4.76688 0.99593 pars: 4.21048 -6.45554 -5.37957 1.129 pars: 4.36582 -6.75528 -5.67003 1.19227 pars: 4.40904 -6.83867 -5.75118 1.20986 pars: 4.40904 -6.83867 -5.75118 1.20986 ## pars: 0 0 0 0 pars: 0.99536 0.07173 0.06409 0.00177 pars: 1.72367 -0.43777 -0.39401 -0.00867 pars: 2.4174 -0.98276 -0.86463 -0.02429 pars: 3.03578 -1.54547 -1.41296 -0.04192 pars: 3.60313 -2.10912 -2.01314 -0.05574 pars: 4.06235 -2.71448 -2.66318 -0.06669 pars: 4.37062 -3.35988 -3.362 -0.07522 pars: 4.55067 -3.91622 -3.94414 -0.07856 pars: 4.59836 -4.15944 -4.18737 -0.07857 pars: 4.59836 -4.15944 -4.18737 -0.07857 ## pars: 0 0 0 0 pars: 0.99765 0.05986 0.0319 0.00936 pars: 1.55093 -0.59906 -0.47387 -0.05322 pars: 2.03749 -2.27897 -1.67563 -0.20184 pars: 2.53978 -4.2347 -3.60196 -0.36684 pars: 2.60576 -4.45251 -3.84689 -0.38632 pars: 2.60576 -4.45251 -3.84689 -0.38632 ## pars: 0 0 0 0 pars: 0.87035 0.39958 0.2878 -0.00072 pars: 1.84315 0.39865 0.05959 0.039 pars: 3.67922 -0.22945 -1.02462 0.10648 pars: 4.64304 -2.22021 -0.867 -0.06328 pars: 5.0739 -3.1606 -0.88148 -0.17403 pars: 5.44569 -3.76483 -1.32715 -0.28969 pars: 5.63417 -3.98028 -1.74693 -0.35585 pars: 5.69356 -4.00011 -1.98216 -0.38057 pars: 5.69356 -4.00011 -1.98216 -0.38057 ## pars: 0 0 0 0 pars: 0.59161 0.75276 0.22096 -0.18579 pars: 0.5849 1.37323 0.98457 -0.36433 pars: 0.45616 2.31804 1.14251 -0.1078 pars: 1.16451 2.68892 1.71675 -0.28371 pars: 2.06536 2.79849 1.35353 -0.49477 pars: 2.64911 2.87242 2.13892 -0.68695 pars: 2.68266 2.83518 2.06462 -1.68292 pars: 2.86285 2.59486 1.91715 -4.66583 pars: 3.06975 3.07213 1.86167 -7 pars: 2.91701 2.68663 1.8883 -5.73937 pars: 2.98101 2.69715 1.93225 -6.81572 pars: 3.03401 2.73123 2.0072 -7 pars: 2.97349 2.76866 2.06443 -7 pars: 2.97349 2.76866 2.06443 -7 ## pars: 0 0 0 0 pars: 0.97331 0.21604 0.07678 -0.00988 pars: 1.83821 -0.27775 -0.01252 -0.02206 pars: 3.01298 -1.90999 -0.41335 0.02097 pars: 3.60657 -3.1471 -1.88762 0.40897 pars: 3.71575 -4.57771 -3.59629 0.85823 pars: 4.25833 -5.89088 -7.59019 1.54576 pars: 4.82898 -7.38113 -11.50611 2.2953 pars: 5.39949 -8.86901 -15.42292 3.04504 pars: 5.84637 -10.03439 -18.49104 3.63232 pars: 6.14562 -10.81478 -20.54559 4.0256 pars: 6.28201 -11.17046 -21.48201 4.20484 pars: 6.31536 -11.25743 -21.71098 4.24867 pars: 6.31536 -11.25743 -21.71098 4.24867 ## pars: 0 0 0 0 pars: 0.99941 0.0197 0.02543 -0.01202 pars: 1.51235 -0.5291 -0.6074 0.17571 pars: 2.03041 -1.75013 -2.07295 0.66528 pars: 2.34508 -3.09346 -3.49918 1.12258 pars: 2.59316 -4.37737 -4.50145 1.44893 pars: 2.66176 -4.6911 -4.77517 1.5315 pars: 2.66176 -4.6911 -4.77517 1.5315 ## pars: 0 0 0 0 pars: 0.95475 -0.16665 -0.24298 -0.04049 pars: 0.4911 -0.29756 -0.3767 -0.04403 pars: 0.27021 -0.6054 -0.70263 -0.05838 pars: 0.36422 -0.94482 -1.05727 -0.07213 pars: 0.19452 -1.98881 -2.144 -0.1122 pars: 0.17992 -7.62352 -7.82038 -0.28095 pars: 0.34266 -7.59288 -7.83346 -0.28982 pars: 0.34266 -7.59288 -7.83346 -0.28982 ## pars: 0 0 0 0 pars: 0.99135 0.05495 0.11577 -0.02836 pars: 1.75431 -0.27001 -0.42305 0.11985 pars: 2.45743 -0.49992 -1.08391 0.24646 pars: 3.06799 -0.87889 -1.76687 0.37741 pars: 3.62487 -1.54799 -2.24903 0.47601 pars: 4.06747 -2.38418 -2.56683 0.53832 pars: 4.38165 -2.83208 -2.81724 0.57811 pars: 4.53534 -3.05066 -2.95901 0.59535 pars: 4.57831 -3.13112 -3.01932 0.5975 pars: 4.57831 -3.13112 -3.01932 0.5975 ## pars: 0 0 0 0 pars: 0.99999 0.00062 0.00393 -0.00085 pars: 1.57764 -0.20868 -0.77151 0.14482 pars: 2.29553 -0.74333 -2.60278 0.46307 pars: 2.93521 -1.75872 -4.24643 0.80106 pars: 3.56358 -3.46444 -5.18772 1.05735 pars: 4.13669 -4.83604 -5.97736 1.27547 pars: 4.6101 -5.72142 -6.62286 1.45503 pars: 4.94338 -6.33197 -7.07643 1.58146 pars: 5.11135 -6.63916 -7.30501 1.64517 pars: 5.15987 -6.72816 -7.37111 1.66358 pars: 5.15987 -6.72816 -7.37111 1.66358 ## pars: 0 0 0 0 pars: 0.80658 0.4822 0.33649 -0.06074 pars: 1.25339 0.80982 1.0975 0.27672 pars: 1.76214 1.54704 1.46777 0.03057 pars: 1.98392 1.91706 2.36992 0.02466 pars: 2.69976 2.58136 2.5423 -0.10407 pars: 3.46239 2.17719 2.39678 -0.58767 pars: 4.00009 2.92113 2.00143 -0.55411 pars: 3.91658 2.6001 2.35269 -0.68288 pars: 3.5853 2.31634 2.14309 -0.80858 pars: 3.80793 2.50703 2.28394 -0.72411 pars: 3.7775 2.52956 2.26659 -0.88273 pars: 3.74066 2.55203 2.3363 -1.02476 pars: 3.74066 2.55203 2.3363 -1.02476 ## pars: 0 0 0 0 pars: 0.76857 0.14009 0.62395 0.01924 pars: 0.90275 0.26082 1.60746 0.03017 pars: 1.06448 1.02178 2.23501 0.06127 pars: 1.4729 1.93371 2.2585 0.02916 pars: 1.92588 1.94942 3.14983 0.0382 pars: 2.77105 1.53925 2.80944 0.07793 pars: 2.63058 1.50791 2.74925 0.52654 pars: 2.5982 1.5159 2.73796 0.35815 pars: 2.5982 1.5159 2.73796 0.35815 ## pars: 0 0 0 0 pars: 0.9977 0.05534 -0.03616 -0.01504 pars: 1.26284 -0.67297 -0.66782 0.00123 pars: 2.0048 -3.71859 -3.15077 0.09425 pars: 2.12883 -4.53727 -4.43409 0.08177 pars: 2.01902 -4.35985 -4.58421 0.03981 pars: 1.68762 -4.08167 -5.21819 -0.10812 pars: 1.70472 -4.35319 -5.4336 -0.12264 pars: 1.68597 -4.8252 -5.92106 -0.17274 pars: 1.68396 -5.17136 -6.24923 -0.20339 pars: 1.68396 -5.17136 -6.24923 -0.20339 ## pars: 0 0 0 0 pars: 0.99837 0.01364 0.05529 -0.0036 pars: 1.62696 -0.28767 -0.66102 0.02801 pars: 2.29977 -0.93238 -2.5197 0.1327 pars: 2.81056 -2.22562 -4.06348 0.26453 pars: 3.33605 -3.74232 -5.31823 0.39637 pars: 3.69512 -4.46831 -6.18999 0.48455 pars: 3.95074 -4.97001 -6.81132 0.54726 pars: 4.04728 -5.15966 -7.04595 0.57094 pars: 4.04728 -5.15966 -7.04595 0.57094 ## pars: 0 0 0 0 pars: 0.99122 0.01695 0.12924 -0.0224 pars: 1.72185 -0.14059 -0.52516 0.09209 pars: 2.44913 -0.50115 -2.36839 0.31572 pars: 2.9616 -1.4922 -4.04166 0.56422 pars: 3.56571 -3.69816 -5.67856 0.87465 pars: 3.95286 -5.04437 -6.68277 1.06796 pars: 4.20362 -5.74418 -7.34357 1.19576 pars: 4.35554 -6.16098 -7.74429 1.27332 pars: 4.39236 -6.26409 -7.8413 1.29208 pars: 4.39236 -6.26409 -7.8413 1.29208 ## pars: 0 0 0 0 pars: 0.97368 0.22504 0.02996 -0.0204 pars: 1.74741 -0.36237 -0.19626 0.05108 pars: 2.61572 -2.29985 -0.47793 0.15821 pars: 2.9905 -3.21032 -1.5236 0.2087 pars: 3.23519 -3.70887 -3.05426 0.22995 pars: 3.24552 -3.72536 -3.27861 0.22382 pars: 3.24552 -3.72536 -3.27861 0.22382 ## pars: 0 0 0 0 pars: 0.99261 0.10474 0.0604 -0.00985 pars: 1.74641 -0.45206 -0.28349 0.04932 pars: 2.43745 -1.09397 -0.61297 0.09244 pars: 3.06176 -1.68698 -1.12058 0.12257 pars: 3.63067 -2.22748 -1.74016 0.14049 pars: 4.09309 -2.75394 -2.45353 0.15065 pars: 4.40316 -3.25964 -3.2586 0.15184 pars: 4.66295 -3.74932 -3.9007 0.14456 pars: 4.75219 -3.9661 -4.13629 0.1396 pars: 4.75219 -3.9661 -4.13629 0.1396 ## pars: 0 0 0 0 pars: 0.99981 0.00279 0.01849 0.00625 pars: 1.51818 -0.50779 -0.66371 -0.0659 pars: 2.05539 -1.82796 -2.34933 -0.23105 pars: 2.69127 -4.2348 -4.89047 -0.47728 pars: 2.79459 -4.5385 -5.20119 -0.51345 pars: 2.90983 -4.87673 -5.54707 -0.55387 pars: 2.92915 -4.94465 -5.60786 -0.56031 pars: 2.92915 -4.94465 -5.60786 -0.56031 ## pars: 0 0 0 0 pars: 0.99972 -0.00601 -0.02002 0.01089 pars: 1.21905 -0.70787 -0.69749 -0.00716 pars: 1.78854 -3.56981 -3.43137 -0.11137 pars: 1.77933 -3.82149 -3.75105 -0.09693 pars: 1.66693 -4.27035 -4.37677 -0.03165 pars: 1.57285 -4.61059 -4.82739 0.02118 pars: 1.57285 -4.61059 -4.82739 0.02118 ## pars: 0 0 0 0 pars: 0.99918 -0.02864 -0.02871 -1e-04 pars: 1.29293 -0.7047 -0.70446 0.00033 pars: 1.92591 -3.23479 -3.23349 0.0021 pars: 2.20306 -4.83847 -4.83798 0.00243 pars: 2.15032 -4.76518 -4.76482 0.00222 pars: 2.15032 -4.76518 -4.76482 0.00222 ## pars: 0 0 0 0 pars: 0.99967 0.0075 0.02388 0.00519 pars: 1.60177 -0.27314 -0.7092 -0.14076 pars: 2.30592 -0.91886 -2.50406 -0.45877 pars: 2.91492 -2.01265 -4.10353 -0.79013 pars: 3.49236 -3.71207 -5.0755 -1.05322 pars: 4.04191 -5.14346 -5.91108 -1.28193 pars: 4.46034 -6.01733 -6.54567 -1.45679 pars: 4.74073 -6.59157 -6.9702 -1.57409 pars: 4.85995 -6.83577 -7.15095 -1.62395 pars: 4.85995 -6.83577 -7.15095 -1.62395 ## pars: 0 0 0 0 pars: 0.97633 0.16823 0.12344 -0.05691 pars: 1.77966 -0.26758 -0.25864 0.08004 pars: 2.42127 -0.88593 -0.68098 0.24619 pars: 2.81692 -1.5772 -1.27612 0.35303 pars: 3.06926 -2.22991 -1.9896 0.38821 pars: 3.41611 -3.3798 -3.4835 0.34278 pars: 3.40448 -3.48999 -3.60921 0.28632 pars: 3.40448 -3.48999 -3.60921 0.28632 ## pars: 0 0 0 0 pars: 0.96722 0.16112 0.19247 -0.03856 pars: 1.83931 -0.19602 -0.1351 0.02939 pars: 2.55966 -0.60947 -0.68386 0.12429 pars: 3.02295 -1.09771 -1.41966 0.19903 pars: 3.33154 -1.72907 -2.13053 0.22779 pars: 3.67739 -2.92359 -3.13188 0.20816 pars: 3.72594 -3.30283 -3.34813 0.16879 pars: 3.72594 -3.30283 -3.34813 0.16879 ## pars: 0 0 0 0 pars: 0.93367 0.20618 0.26881 -0.11617 pars: 1.87414 -0.02542 0.05633 0.01318 pars: 3.19701 -0.91831 -1.1644 0.44312 pars: 3.69283 -1.73101 -2.17856 0.615 pars: 4.07008 -2.70626 -2.85001 0.63637 pars: 4.195 -3.06081 -3.08448 0.60535 pars: 4.23807 -3.21463 -3.18139 0.56118 pars: 4.23807 -3.21463 -3.18139 0.56118 ## pars: 0 0 0 0 pars: 0.99835 0.04122 0.03029 -0.02606 pars: 1.43801 -0.61197 -0.57564 0.0875 pars: 1.97836 -2.32286 -2.15481 0.41866 pars: 2.34118 -4.00093 -3.83261 0.66367 pars: 2.31177 -4.07325 -3.99026 0.60991 pars: 2.12801 -4.50326 -4.74432 0.28303 pars: 2.12696 -4.73834 -4.99628 0.24037 pars: 2.12696 -4.73834 -4.99628 0.24037 ## pars: 0 0 0 0 pars: 0.99993 0.0089 0.00667 -0.00323 pars: 1.2876 -0.67057 -0.66817 0.00957 pars: 1.81574 -2.89328 -2.86193 0.05888 pars: 2.08547 -4.72811 -4.70763 0.08359 pars: 1.98362 -4.4681 -4.45679 0.06985 pars: 1.81509 -4.27118 -4.28041 0.04325 pars: 1.79415 -4.47378 -4.48692 0.03614 pars: 1.79415 -4.47378 -4.48692 0.03614 ## pars: 0 0 0 0 pars: 0.9946 0.04698 0.09064 -0.01866 pars: 1.66629 -0.33308 -0.53405 0.10029 pars: 2.26966 -0.68162 -1.24157 0.21813 pars: 2.74401 -1.26911 -1.89094 0.30849 pars: 3.07165 -2.07952 -2.37359 0.36264 pars: 3.30933 -2.81624 -2.75886 0.38582 pars: 3.37938 -3.05896 -2.93437 0.38566 pars: 3.37938 -3.05896 -2.93437 0.38566 ## pars: 0 0 0 0 pars: 0.99209 0.12247 0.02729 -0.00274 pars: 1.73992 -0.51563 -0.15529 0.01256 pars: 2.4294 -1.23243 -0.2586 0.02466 pars: 3.03701 -1.93068 -0.63689 0.03708 pars: 3.58643 -2.3395 -1.36557 0.03226 pars: 4.01768 -2.58663 -2.23298 0.00875 pars: 4.318 -2.7918 -2.72038 -0.01075 pars: 4.45651 -2.91181 -2.95044 -0.02071 pars: 4.49287 -2.96769 -3.04122 -0.02542 pars: 4.49287 -2.96769 -3.04122 -0.02542 ## pars: 0 0 0 0 pars: 0.99701 0.06917 0.02573 -0.0229 pars: 1.62794 -0.60027 -0.32028 0.16162 pars: 2.24671 -2.31773 -1.17558 0.55908 pars: 2.69922 -3.79544 -2.47458 0.94153 pars: 3.10505 -4.77719 -3.99926 1.24414 pars: 3.30639 -5.27388 -4.54683 1.40385 pars: 3.4307 -5.58065 -4.87792 1.50302 pars: 3.45698 -5.64581 -4.95348 1.52353 pars: 3.45698 -5.64581 -4.95348 1.52353 ## pars: 0 0 0 0 pars: 0.99745 0.05474 0.0393 -0.02347 pars: 1.6682 -0.51018 -0.38409 0.2039 pars: 2.37488 -1.98099 -1.41879 0.7311 pars: 2.94713 -3.34068 -2.67396 1.24054 pars: 3.53401 -4.41551 -4.19533 1.68436 pars: 4.01385 -5.24056 -5.12733 2.06802 pars: 4.39273 -5.88203 -5.83936 2.37511 pars: 4.60283 -6.23708 -6.23288 2.54563 pars: 4.67618 -6.36118 -6.3704 2.60514 pars: 4.67618 -6.36118 -6.3704 2.60514 ## pars: 0 0 0 0 pars: 0.99906 0.04117 0.01044 0.00839 pars: 1.62333 -0.6913 -0.22215 -0.1319 pars: 2.32251 -2.51766 -0.73799 -0.43569 pars: 2.91712 -4.03774 -1.91976 -0.78509 pars: 3.49449 -5.12253 -3.52508 -1.09435 pars: 3.98603 -6.05803 -4.4061 -1.36085 pars: 4.36724 -6.78426 -5.05868 -1.56791 pars: 4.58123 -7.19197 -5.42337 -1.68417 pars: 4.65685 -7.33605 -5.55246 -1.72525 pars: 4.65685 -7.33605 -5.55246 -1.72525 ## pars: 0 0 0 0 pars: 0.99831 0.05599 0.01335 -0.00845 pars: 1.56658 -0.67454 -0.35756 0.06775 pars: 2.10468 -2.47481 -1.30158 0.23407 pars: 2.50753 -4.02105 -2.66964 0.39095 pars: 2.78665 -4.82269 -3.92343 0.4817 pars: 2.8958 -5.13844 -4.3031 0.51871 pars: 2.95361 -5.30682 -4.51674 0.53782 pars: 2.95361 -5.30682 -4.51674 0.53782 ## pars: 0 0 0 0 pars: 0.89806 -0.41945 -0.12563 0.04204 pars: 0.32769 -0.15305 -0.04584 0.01534 pars: 0.17147 -0.433 -0.21939 0.03108 pars: 0.33669 -0.8317 -0.42054 0.05982 pars: 0.30913 -3.31372 -2.28431 0.17609 pars: 0.68895 -10.78056 -7.83983 0.53311 pars: 0.33011 -10.69444 -7.59559 0.56298 pars: 0.23933 -10.67364 -7.53466 0.5706 pars: 0.23933 -10.67364 -7.53466 0.5706 ## pars: 0 0 0 0 pars: 0.99512 0.07886 0.05555 -0.02077 pars: 1.73453 -0.45038 -0.33609 0.11994 pars: 2.44636 -1.03505 -0.69895 0.26057 pars: 3.10334 -1.60547 -1.16936 0.40792 pars: 3.74207 -2.11266 -1.7377 0.51643 pars: 4.32384 -2.61754 -2.37093 0.59169 pars: 4.81547 -3.1192 -3.08161 0.63124 pars: 5.19189 -3.56207 -3.63565 0.63178 pars: 5.39562 -3.82337 -3.92558 0.62638 pars: 5.46821 -3.95151 -4.05701 0.6209 pars: 5.46821 -3.95151 -4.05701 0.6209 ## pars: 0 0 0 0 pars: 0.99972 0.01748 0.00447 0.01506 pars: 1.20515 -0.67698 -0.68504 0.00489 pars: 1.75919 -3.52231 -3.43925 -0.10217 pars: 1.72526 -3.71657 -3.70737 -0.05579 pars: 1.4433 -4.22014 -4.48636 0.21299 pars: 1.4639 -4.47097 -4.69549 0.22146 pars: 1.4639 -4.47097 -4.69549 0.22146 ## pars: 0 0 0 0 pars: 0.87732 -0.3698 -0.30581 0.00582 pars: 0.76005 -1.10025 -0.97861 0.0117 pars: 0.406 -3.99295 -3.7184 0.03333 pars: 0.33902 -4.84026 -4.64711 0.03928 pars: 0.36056 -5.06643 -4.89472 0.04034 pars: 0.36056 -5.06643 -4.89472 0.04034 ## pars: 0 0 0 0 pars: 0.8056 0.56435 0.17423 -0.04659 pars: 1.06118 1.38608 0.68351 -0.03825 pars: 0.69376 3.41622 1.49506 -0.27376 pars: 0.87632 3.56923 3.71175 -0.28368 pars: 1.56562 5.68744 3.62226 -0.25958 pars: 3.3236 5.16606 2.97043 -1.3474 pars: 5.33598 4.39369 2.42311 -1.50476 pars: 5.07089 4.26701 2.5132 -1.41332 pars: 4.62009 3.61835 2.71486 -1.32268 pars: 4.98888 3.81171 2.57688 -1.47732 pars: 4.93032 3.76879 2.60453 -1.47737 pars: 4.93032 3.76879 2.60453 -1.47737 ## pars: 0 0 0 0 pars: 0.8256 0.53437 0.181 -0.0082 pars: 1.08127 1.40166 0.60536 -0.05699 pars: 0.78361 3.24474 1.84009 0.19223 pars: 0.27074 4.02112 3.79837 -0.41732 pars: -0.20244 6.11707 3.12768 -0.49124 pars: 0.40707 5.04521 3.77548 -0.39308 pars: 1.33156 4.88506 4.20921 -0.39378 pars: 2.01719 4.92308 3.56398 -0.81878 pars: 2.55011 4.77764 3.54674 -2.71309 pars: 3.52341 4.81568 2.47302 1.14184 pars: 5.45257 4.59018 2.1369 -0.19204 pars: 4.97245 4.43242 2.42332 -0.20215 pars: 4.9903 3.67862 2.72579 0.18076 pars: 5.49622 3.459 2.5032 0.3778 pars: 5.4086 3.47427 2.50298 0.30201 pars: 5.4086 3.47427 2.50298 0.30201 ## pars: 0 0 0 0 pars: 0.68232 0.18385 0.69992 0.10368 pars: 0.94839 0.98527 1.23134 0.17101 pars: 1.0573 1.39416 2.12115 0.00016 pars: 1.83382 1.85779 2.53278 0.11251 pars: 2.69198 1.59737 2.89786 -0.13743 pars: 3.46633 2.11102 3.23179 0.02081 pars: 4.39738 1.82415 3.10141 0.20482 pars: 4.83607 1.61158 3.82481 0.69376 pars: 5.63461 1.9711 3.34836 0.7717 pars: 5.36818 2.48587 3.22821 1.57768 pars: 5.3113 2.15669 3.27048 2.51929 pars: 5.20552 2.40156 3.39664 2.81602 pars: 5.29194 2.40941 3.43233 2.94479 pars: 5.29194 2.40941 3.43233 2.94479 ## pars: 0 0 0 0 pars: 0.97065 0.23933 0.01031 0.02127 pars: 1.84055 -0.24859 -0.02904 -0.03925 pars: 2.93078 -1.92271 -0.06424 -0.13201 pars: 3.46357 -3.76886 -0.53632 -0.42547 pars: 4.16688 -5.98521 -2.27637 -0.90028 pars: 4.75705 -7.84113 -3.71234 -1.29737 pars: 5.2907 -9.52984 -4.67053 -1.65737 pars: 5.71239 -10.86472 -5.41267 -1.94189 pars: 5.97476 -11.69529 -5.8736 -2.11892 pars: 6.08351 -12.03955 -6.06466 -2.1923 pars: 6.08351 -12.03955 -6.06466 -2.1923 ## pars: 0 0 0 0 pars: 0.99055 0.13497 0.02384 0.005 pars: 1.76899 -0.47833 -0.10827 -0.01618 pars: 2.50182 -1.15468 -0.17906 -0.03852 pars: 3.15651 -1.85793 -0.45299 -0.0807 pars: 3.80385 -2.38434 -1.00298 -0.11749 pars: 4.39646 -2.83157 -1.67238 -0.14409 pars: 4.9068 -3.22552 -2.43652 -0.16515 pars: 5.28288 -3.56982 -3.29662 -0.18119 pars: 5.56618 -3.96027 -4.1412 -0.18981 pars: 5.66439 -4.18394 -4.44608 -0.19032 pars: 5.69304 -4.3274 -4.59812 -0.18931 pars: 5.69304 -4.3274 -4.59812 -0.18931 ## pars: 0 0 0 0 pars: 0.95678 0.17343 0.23335 -0.00695 pars: 1.89894 -0.08332 0.01798 -0.00246 pars: 2.7661 -0.35377 -0.40003 0.01038 pars: 3.42311 -0.61773 -1.10578 0.03443 pars: 4.05733 -0.99229 -1.78173 0.0583 pars: 4.62323 -1.63539 -2.29735 0.07583 pars: 5.08769 -2.45589 -2.63044 0.08609 pars: 5.43923 -3.01508 -2.92626 0.09127 pars: 5.61987 -3.27933 -3.10887 0.09318 pars: 5.67965 -3.38201 -3.19485 0.09307 pars: 5.67965 -3.38201 -3.19485 0.09307 ## pars: 0 0 0 0 pars: 0.95904 0.28051 0.0394 -0.00183 pars: 1.86368 -0.12674 -0.08621 -0.00032 pars: 3.10413 -1.7442 -0.18479 0.00978 pars: 3.61182 -3.64261 -0.73387 0.04872 pars: 4.32592 -6.05013 -3.06708 0.11906 pars: 4.89514 -7.94863 -4.83078 0.17493 pars: 5.41367 -9.70492 -6.14363 0.22635 pars: 5.80745 -11.03924 -7.13394 0.26541 pars: 6.03842 -11.82191 -7.71462 0.28832 pars: 6.12442 -12.11333 -7.93083 0.29685 pars: 6.12442 -12.11333 -7.93083 0.29685 ## pars: 0 0 0 0 pars: 0.98222 0.16733 0.08307 0.01863 pars: 1.83537 -0.2742 -0.18856 -0.0396 pars: 2.62278 -0.85086 -0.40007 -0.09177 pars: 3.28257 -1.51645 -0.74249 -0.15818 pars: 3.94995 -1.75803 -1.44599 -0.19482 pars: 4.57231 -1.90868 -2.21386 -0.17638 pars: 5.14101 -2.18869 -2.69316 -0.19234 pars: 5.6057 -2.4589 -3.03794 -0.21663 pars: 5.92256 -2.65144 -3.26779 -0.23441 pars: 6.07615 -2.74965 -3.38006 -0.24269 pars: 6.07615 -2.74965 -3.38006 -0.24269 ## pars: 0 0 0 0 pars: 0.96076 0.26992 0.06013 -0.02183 pars: 1.86597 -0.11187 -0.1211 0.02258 pars: 3.08545 -1.69269 -0.30744 0.11976 pars: 3.60109 -3.55895 -0.80293 0.30941 pars: 4.31168 -5.88857 -3.02266 0.67566 pars: 4.87607 -7.60856 -5.25829 0.95694 pars: 5.3609 -9.15538 -6.67163 1.20518 pars: 5.73 -10.33461 -7.73547 1.39433 pars: 5.92825 -10.96804 -8.30652 1.49593 pars: 5.99362 -11.1769 -8.49483 1.52943 pars: 5.99362 -11.1769 -8.49483 1.52943 ## pars: 0 0 0 0 pars: 0.97819 0.14561 0.14777 -0.01027 pars: 1.85958 -0.1974 -0.17599 0.01568 pars: 2.64802 -0.6215 -0.62067 0.04325 pars: 3.29019 -1.10603 -1.2139 0.07377 pars: 3.91371 -1.60182 -1.81791 0.09796 pars: 4.46073 -2.17414 -2.42881 0.10407 pars: 4.90687 -2.72975 -2.93619 0.09501 pars: 5.19422 -3.07153 -3.24098 0.08953 pars: 5.32486 -3.24241 -3.3914 0.08609 pars: 5.35606 -3.30377 -3.44359 0.08383 pars: 5.35606 -3.30377 -3.44359 0.08383 ## pars: 0 0 0 0 pars: 0.98851 0.13677 0.06165 -0.01871 pars: 1.78795 -0.37851 -0.2353 0.06618 pars: 2.53215 -1.0116 -0.43773 0.13243 pars: 3.16929 -1.69846 -0.77943 0.20668 pars: 3.78649 -2.15488 -1.41843 0.25588 pars: 4.3235 -2.42963 -2.21598 0.2625 pars: 4.76042 -2.69198 -2.73797 0.26181 pars: 5.03832 -2.87678 -3.03248 0.2628 pars: 5.1618 -2.97594 -3.17348 0.26158 pars: 5.1618 -2.97594 -3.17348 0.26158 ## pars: 0 0 0 0 pars: 0.98536 0.05114 0.1614 -0.0202 pars: 1.74684 -0.24642 -0.40996 0.05157 pars: 2.53913 -0.68083 -2.19817 0.2305 pars: 3.0501 -1.782 -3.79067 0.42139 pars: 3.43197 -3.51747 -4.7226 0.56269 pars: 3.59342 -4.23037 -5.10808 0.61839 pars: 3.65439 -4.49876 -5.25607 0.63856 pars: 3.65439 -4.49876 -5.25607 0.63856 ## pars: 0 0 0 0 pars: 0.98716 0.15199 0.04615 -0.01663 pars: 1.79733 -0.38864 -0.17083 0.0487 pars: 2.53943 -1.04541 -0.29218 0.10532 pars: 3.188 -1.73701 -0.60129 0.17956 pars: 3.82754 -2.06037 -1.29845 0.19901 pars: 4.40439 -2.3222 -2.07092 0.15443 pars: 4.89994 -2.58904 -2.554 0.13346 pars: 5.25505 -2.78861 -2.87072 0.12674 pars: 5.4469 -2.90279 -3.04451 0.12305 pars: 5.50849 -2.94613 -3.10735 0.12073 pars: 5.50849 -2.94613 -3.10735 0.12073 ## pars: 0 0 0 0 pars: 0.98115 0.07133 0.17919 0.0125 pars: 1.83337 -0.18478 -0.27573 -0.02159 pars: 2.60893 -0.33495 -0.88778 -0.05839 pars: 3.24305 -0.56777 -1.6229 -0.11565 pars: 3.86414 -1.13963 -2.15302 -0.19436 pars: 4.40401 -1.92242 -2.44969 -0.28259 pars: 4.83723 -2.40407 -2.70274 -0.354 pars: 5.11212 -2.7017 -2.87046 -0.39613 pars: 5.23088 -2.84285 -2.95305 -0.41428 pars: 5.23088 -2.84285 -2.95305 -0.41428 ## pars: 0 0 0 0 pars: 0.97112 0.21803 0.08357 -0.04911 pars: 1.8683 -0.15944 -0.12068 0.05513 pars: 2.6783 -0.72029 -0.26155 0.15264 pars: 3.32913 -1.42404 -0.50419 0.30192 pars: 3.98794 -1.94922 -1.02272 0.44776 pars: 4.59272 -2.363 -1.69699 0.53935 pars: 5.1267 -2.73622 -2.45367 0.59418 pars: 5.53851 -3.11393 -3.28277 0.61267 pars: 5.84273 -3.51311 -3.83293 0.59193 pars: 5.97371 -3.73916 -4.07409 0.57171 pars: 6.01043 -3.85344 -4.17465 0.55697 pars: 6.01043 -3.85344 -4.17465 0.55697 ## pars: 0 0 0 0 pars: 0.9844 0.08916 0.15144 -0.00861 pars: 1.8261 -0.20628 -0.29963 0.01943 pars: 2.58944 -0.48231 -0.88299 0.04798 pars: 3.22761 -0.91277 -1.52027 0.08429 pars: 3.84726 -1.56863 -1.95042 0.1134 pars: 4.38734 -2.33277 -2.30308 0.11961 pars: 4.81963 -2.84217 -2.64516 0.11787 pars: 5.09319 -3.13518 -2.87491 0.11778 pars: 5.21148 -3.27061 -2.99583 0.1167 pars: 5.21148 -3.27061 -2.99583 0.1167 ## pars: 0 0 0 0 pars: 0.56941 0.79448 0.17175 -0.1228 pars: 0.45902 1.66684 0.62093 -0.28103 pars: 0.77894 2.10341 1.44873 -0.42872 pars: 0.62276 3.05851 1.62173 -0.24582 pars: 0.93108 3.31735 2.52784 -0.37585 pars: 1.3798 3.40243 2.4622 -1.26303 pars: 2.24316 3.07108 2.37361 -1.63313 pars: 2.63333 3.20557 2.38826 -1.39455 pars: 2.3055 3.22258 2.39774 -1.61191 pars: 2.18852 3.2345 2.43911 -1.72298 pars: 2.26693 3.18635 2.4773 -1.82369 pars: 2.26693 3.18635 2.4773 -1.82369 ## pars: 0 0 0 0 pars: 0.90997 0.40894 0.0625 0.02865 pars: 1.82451 0.21259 -0.23502 -0.16252 pars: 3.65887 -1.26231 -0.5249 -0.32584 pars: 4.20488 -3.53872 -0.72272 0.03684 pars: 4.7041 -5.5484 -1.80229 0.48112 pars: 5.11538 -7.12315 -3.4932 0.85888 pars: 5.44933 -8.4086 -4.77873 1.16293 pars: 5.59731 -8.98719 -5.2378 1.29538 pars: 5.65202 -9.20062 -5.41367 1.34448 pars: 5.65202 -9.20062 -5.41367 1.34448 ## pars: 0 0 0 0 pars: 0.93704 0.30971 0.15766 0.03435 pars: 1.87542 0.05673 -0.04897 -0.07855 pars: 3.37822 -1.33301 -0.71973 -0.21869 pars: 3.9392 -3.13663 -1.7436 -0.0105 pars: 4.61472 -5.03221 -3.8151 0.34637 pars: 5.01598 -6.08118 -5.11209 0.54564 pars: 5.33676 -6.9797 -5.9914 0.69807 pars: 5.52315 -7.50487 -6.49413 0.7863 pars: 5.58137 -7.66856 -6.65197 0.81388 pars: 5.58137 -7.66856 -6.65197 0.81388 ## pars: 0 0 0 0 pars: 0.94428 0.22826 0.23712 0.00362 pars: 1.88308 0.0445 -0.05364 0.02191 pars: 3.2938 -0.89094 -1.20632 0.00649 pars: 3.91766 -2.74293 -1.80608 -0.11717 pars: 4.3639 -4.7355 -1.71625 -0.24573 pars: 4.72744 -6.20428 -1.85594 -0.35169 pars: 4.91095 -6.87613 -2.02873 -0.4037 pars: 4.96971 -7.04231 -2.15617 -0.41923 pars: 4.96971 -7.04231 -2.15617 -0.41923 ## pars: 0 0 0 0 pars: 0.69193 0.4624 0.49996 0.23971 pars: 0.70759 1.19169 1.14993 0.45284 pars: -0.41234 2.08429 1.79872 0.53902 pars: -4.95752 6.47028 5.11009 1.10935 pars: -3.96749 4.35073 4.34249 2.87736 pars: -3.60514 3.21732 3.8023 5.08737 pars: -3.81145 3.86264 4.10987 3.82908 pars: -3.13398 3.82007 2.46452 5.14127 pars: -3.78262 3.7942 3.92807 3.93072 pars: -3.81822 3.43764 3.67889 4.00215 pars: -3.79573 3.45846 3.2406 3.95157 pars: -3.81507 3.45957 3.50826 3.99329 pars: -3.77568 3.29765 3.47116 3.97016 pars: -3.72254 3.27214 3.32494 3.9007 pars: -3.64634 3.15042 3.25727 3.83376 pars: -3.55879 3.10603 3.1471 3.74483 pars: -3.44002 2.99882 3.05383 3.60314 pars: -3.19537 2.81905 2.81258 3.32967 pars: -3.11165 2.92141 2.94838 3.31969 pars: -3.03569 2.91521 2.92485 3.36517 pars: -3.03569 2.91521 2.92485 3.36517 ## pars: 0 0 0 0 pars: -0.65601 -0.53743 -0.5299 0.005 pars: -2.62404 -2.14973 -2.11959 0.02 pars: -0.26214 -3.35533 -3.03055 0.16519 pars: -1.04822 -3.47218 -3.12218 0.23541 pars: -2.14543 -4.32082 -4.08044 0.40271 pars: -1.47948 -4.53582 -4.34195 0.36375 pars: -1.56693 -4.73882 -4.5796 0.38663 pars: -1.62693 -5.04483 -4.9301 0.41409 pars: -1.62876 -5.29389 -5.21156 0.43201 pars: -1.62876 -5.29389 -5.21156 0.43201 ## pars: 0 0 0 0 pars: 0.95229 0.18979 0.23767 0.02507 pars: 1.84328 -0.25796 0.22112 0.09846 pars: 3.15501 -1.56581 -0.60028 -0.02799 pars: 3.93335 -1.43962 -2.45412 -0.27965 pars: 4.52076 -1.4489 -4.33415 -0.41195 pars: 4.95933 -2.09505 -5.44991 -0.51793 pars: 5.30264 -3.07675 -6.16802 -0.58604 pars: 5.44655 -3.63537 -6.42383 -0.60961 pars: 5.47869 -3.84369 -6.45553 -0.61203 pars: 5.47869 -3.84369 -6.45553 -0.61203 ## pars: 0 0 0 0 pars: 0.75432 0.62537 0.18916 -0.06426 pars: 0.92002 1.58888 0.39817 -0.08709 pars: 1.41838 2.05544 1.1288 -0.09795 pars: 1.58344 2.67694 1.8939 -0.06447 pars: 1.58321 3.11658 2.78684 0.03233 pars: 1.66757 4.09653 2.9653 0.00522 pars: 2.06785 4.15139 3.87917 -0.03482 pars: 2.92358 3.84869 3.49315 -0.19942 pars: 3.47614 3.75763 3.12159 0.54107 pars: 3.53287 3.71157 3.01336 -0.45036 pars: 3.6886 3.64483 3.0909 -0.11123 pars: 3.57673 3.65662 3.0827 -0.08101 pars: 3.57673 3.65662 3.0827 -0.08101 ## pars: 0 0 0 0 pars: 0.7185 0.26903 0.61752 0.17335 pars: 0.89086 0.99857 1.27273 0.26698 pars: 0.70535 3.07719 2.14593 0.54051 pars: 0.33763 2.97449 4.33354 0.02966 pars: 0.89165 5.14545 4.70327 0.21858 pars: 2.09954 4.59001 4.31625 1.75236 pars: 8.41839 2.1499 2.20323 5.99147 pars: 4.10544 3.70485 3.66822 3.07869 pars: 4.28448 3.57837 3.62343 2.65194 pars: 4.04245 3.5188 3.75197 2.62297 pars: 4.212 3.55086 3.68145 2.6419 pars: 4.26627 3.53909 3.68272 2.63657 pars: 4.26627 3.53909 3.68272 2.63657 ## pars: 0 0 0 0 pars: 0.86764 0.47735 0.12825 -0.05378 pars: 1.60055 0.85527 -0.4348 0.00083 pars: 2.98055 0.6713 -1.96344 0.36316 pars: 4.56025 -0.69621 -2.11602 0.49531 pars: 5.13942 -2.59627 -1.68464 -0.02861 pars: 5.69363 -4.38262 -1.5224 -0.56474 pars: 6.14522 -5.83084 -1.54613 -1.01866 pars: 6.45053 -6.80754 -1.64849 -1.33896 pars: 6.59353 -7.26331 -1.7578 -1.49875 pars: 6.63164 -7.3833 -1.84131 -1.55002 pars: 6.63164 -7.3833 -1.84131 -1.55002 ## pars: 0 0 0 0 pars: 0.69514 0.18398 0.6915 0.06902 pars: 0.77855 0.49856 1.63472 0.13539 pars: 1.18201 1.26663 2.12294 0.2299 pars: 1.1805 2.09694 2.67671 0.16727 pars: 1.00344 2.98528 3.01539 -0.08728 pars: 0.87527 3.15025 3.99266 -0.05129 pars: 1.25297 4.07154 3.90112 -0.06447 pars: 2.05738 3.73175 3.80322 -0.54184 pars: 2.58764 3.4122 3.66679 0.23153 pars: 2.48876 3.42798 3.70359 0.13889 pars: 2.48876 3.42798 3.70359 0.13889 ## pars: 0 0 0 0 pars: 0.92612 0.27416 0.25901 0.00766 pars: 1.88959 0.02031 0.1746 0.02026 pars: 3.37032 -1.11066 -0.62438 -0.01858 pars: 3.97765 -1.23534 -2.55395 -0.08127 pars: 4.42771 -1.09784 -4.5261 -0.1076 pars: 4.8115 -1.71097 -5.67615 -0.11949 pars: 5.03438 -2.54738 -6.04879 -0.11502 pars: 5.11217 -3.08607 -6.02863 -0.10757 pars: 5.11217 -3.08607 -6.02863 -0.10757 ## pars: 0 0 0 0 pars: 0.61673 0.68693 0.3494 -0.1603 pars: 0.71676 1.2997 1.12775 -0.25341 pars: 0.64272 2.18417 1.58834 -0.26303 pars: 1.00744 2.48954 2.46784 -0.27747 pars: 1.48718 3.29858 2.80049 -0.34566 pars: 2.40856 3.11806 3.11122 -0.49371 pars: 3.15813 3.69676 2.81085 -0.60788 pars: 2.78734 3.92351 3.45844 -1.23376 pars: 3.20165 3.64129 3.19737 -1.86975 pars: 3.64663 3.48059 3.05421 -1.04705 pars: 3.43547 3.58005 3.16439 -1.39838 pars: 3.43754 3.57364 3.16243 -1.43225 pars: 3.43754 3.57364 3.16243 -1.43225 ## pars: 0 0 0 0 pars: 0.8278 0.42343 0.36074 -0.07293 pars: 1.77186 0.51875 0.31211 0.23901 pars: 3.77575 0.02075 -0.46183 0.30413 pars: 4.93993 -1.50522 -0.95988 1.271 pars: 5.46218 -3.02531 -0.33773 1.75107 pars: 5.96861 -4.02297 -0.39594 2.19833 pars: 6.34667 -4.31082 -1.09848 2.48287 pars: 6.61408 -4.11176 -2.18308 2.65482 pars: 6.701 -3.79646 -2.90384 2.69051 pars: 6.6872 -3.63772 -3.10125 2.66144 pars: 6.6872 -3.63772 -3.10125 2.66144 ## pars: 0 0 0 0 pars: 0.90962 0.27477 0.31129 0.014 pars: 1.87717 0.02561 0.27362 -0.00468 pars: 3.48492 -1.12635 -0.43124 -0.02039 pars: 4.21357 -0.92697 -2.38766 -0.12397 pars: 4.77408 -0.56464 -4.35442 -0.20311 pars: 5.14757 -0.95577 -5.31655 -0.25442 pars: 5.4172 -1.76866 -5.75813 -0.28493 pars: 5.53533 -2.54272 -5.75389 -0.29314 pars: 5.54667 -2.9004 -5.61953 -0.29041 pars: 5.54667 -2.9004 -5.61953 -0.29041 ## pars: 0 0 0 0 pars: 0.98698 0.15435 0.03016 0.03382 pars: 1.78658 -0.41103 -0.11736 -0.10479 pars: 2.51271 -1.08349 -0.2143 -0.21032 pars: 3.16352 -1.75053 -0.55123 -0.34442 pars: 3.79683 -2.2526 -1.13216 -0.44119 pars: 4.36879 -2.58632 -1.87919 -0.49986 pars: 4.84494 -2.83217 -2.72295 -0.52998 pars: 5.2337 -3.06608 -3.2198 -0.54298 pars: 5.46718 -3.22489 -3.4945 -0.54805 pars: 5.56219 -3.30959 -3.61797 -0.54754 pars: 5.56219 -3.30959 -3.61797 -0.54754 ## pars: 0 0 0 0 pars: -0.55614 -0.74286 0.36459 0.07713 pars: -1.19844 -1.60082 0.78566 0.1662 pars: -0.56402 -3.9795 1.76034 0.52216 pars: -0.57094 -4.83803 0.56392 0.67389 pars: -0.85971 -4.99632 0.7113 0.71831 pars: -0.81689 -5.07712 0.75813 0.7319 pars: -0.81689 -5.07712 0.75813 0.7319 ## pars: 0 0 0 0 pars: 0.37453 0.91636 0.08003 0.11664 pars: -0.10162 1.67004 0.46875 0.34935 pars: -0.05357 1.91977 1.38702 0.65287 pars: -0.0607 2.9123 1.42831 0.76744 pars: -0.26876 2.8076 1.39412 1.73934 pars: -1.0379 2.49581 2.11683 3.61307 pars: -0.27579 2.62289 1.69086 1.78591 pars: -0.44116 2.68671 1.66263 2.08951 pars: -0.74571 2.67967 1.67955 2.66577 pars: -1.04532 2.89539 1.68184 2.55728 pars: -1.05851 2.85016 1.78051 2.40351 pars: -1.14488 2.8378 1.78828 2.56836 pars: -1.18893 2.85012 1.79364 2.58604 pars: -1.18893 2.85012 1.79364 2.58604 ## pars: 0 0 0 0 pars: 0.91681 0.19964 0.32505 0.11806 pars: 1.8466 -0.1055 0.15435 0.00299 pars: 3.42691 -1.04718 -1.23259 -0.4261 pars: 3.83231 -1.58188 -1.79664 -0.37235 pars: 4.30912 -2.63368 -2.45308 -0.06916 pars: 4.39553 -3.00966 -2.63355 0.1796 pars: 4.40299 -3.31021 -2.80086 0.54914 pars: 4.30518 -4.06683 -3.2702 1.80399 pars: 4.12288 -4.82685 -3.75604 3.266 pars: 4.03343 -5.24626 -4.07025 4.09906 pars: 4.02785 -5.37915 -4.21863 4.36683 pars: 4.02785 -5.37915 -4.21863 4.36683 ## pars: 0 0 0 0 pars: 0.95994 0.27012 0.06101 -0.0427 pars: 1.87018 -0.09889 -0.10497 0.04534 pars: 2.72561 -0.61013 -0.16497 0.10247 pars: 3.37606 -1.35357 -0.27941 0.20794 pars: 4.03146 -1.98905 -0.66012 0.35518 pars: 4.63058 -2.39413 -1.34213 0.46391 pars: 5.1551 -2.63548 -2.15615 0.5272 pars: 5.57446 -2.86823 -3.00044 0.55935 pars: 5.82114 -3.05241 -3.3794 0.56871 pars: 5.92553 -3.16185 -3.55113 0.56796 pars: 5.92553 -3.16185 -3.55113 0.56796 ## pars: 0 0 0 0 pars: 0.99224 -0.04779 -0.1148 -0.00015 pars: 1.24265 -0.70418 -0.82645 -0.00026 pars: 1.81422 -3.39804 -3.72756 -0.00088 pars: 1.65907 -3.93165 -4.28762 -0.00139 pars: 0.78597 -4.51098 -4.99275 -0.0029 pars: 1.10483 -4.61105 -4.99965 -0.00254 pars: 1.05079 -4.77649 -5.15046 -0.00271 pars: 1.05079 -4.77649 -5.15046 -0.00271 ## pars: 0 0 0 0 pars: 0.96608 0.25258 0.04799 0.0244 pars: 1.84739 -0.18601 -0.11824 -0.03301 pars: 2.65434 -0.77239 -0.17706 -0.07219 pars: 3.25774 -1.52649 -0.42926 -0.13236 pars: 3.83049 -2.08187 -1.02975 -0.18654 pars: 4.2923 -2.38255 -1.86349 -0.22128 pars: 4.66412 -2.63046 -2.50111 -0.24485 pars: 4.85844 -2.77859 -2.79376 -0.25552 pars: 4.93142 -2.85019 -2.92632 -0.25772 pars: 4.93142 -2.85019 -2.92632 -0.25772 ## pars: 0 0 0 0 pars: 0.9983 0.04813 0.02807 0.01733 pars: 1.66404 -0.56159 -0.3449 -0.19693 pars: 2.39562 -2.14806 -1.20347 -0.69647 pars: 3.0395 -3.18648 -2.70141 -1.24604 pars: 3.71543 -4.0479 -4.14902 -1.82646 pars: 4.34039 -4.93846 -5.18527 -2.37574 pars: 4.92374 -5.77167 -6.13955 -2.88895 pars: 5.40987 -6.46569 -6.93408 -3.31671 pars: 5.75695 -6.96115 -7.50129 -3.62211 pars: 5.93876 -7.22069 -7.79842 -3.7821 pars: 5.99464 -7.30046 -7.88974 -3.83127 pars: 5.99464 -7.30046 -7.88974 -3.83127 ## pars: 0 0 0 0 pars: 0.99937 0.01424 0.03068 -0.01083 pars: 1.6253 -0.32906 -0.63462 0.20762 pars: 2.34508 -1.13575 -2.30937 0.69109 pars: 2.97988 -2.32562 -3.77748 1.1741 pars: 3.60884 -4.00507 -4.70381 1.53896 pars: 4.24364 -5.1576 -5.61004 1.91137 pars: 4.82806 -6.13424 -6.43189 2.26008 pars: 5.32714 -6.9623 -7.13218 2.55828 pars: 5.68694 -7.55887 -7.6369 2.77328 pars: 5.8812 -7.88094 -7.90938 2.88936 pars: 5.9438 -7.98472 -7.99719 2.92677 pars: 5.9438 -7.98472 -7.99719 2.92677 ## pars: 0 0 0 0 pars: 0.94866 0.00604 0.31529 -0.02436 pars: 1.74856 -0.21082 -0.24115 0.03484 pars: 2.94258 -0.44979 -2.42901 0.13529 pars: 2.94536 -1.55639 -2.46888 0.1115 pars: 2.93645 -5.98178 -2.62658 -0.0237 pars: 2.92706 -6.1078 -2.66808 -0.06651 pars: 2.92706 -6.1078 -2.66808 -0.06651 ## pars: 0 0 0 0 pars: 0.91549 0.35065 0.19729 -0.00193 pars: 1.85543 0.204 -0.10978 0.0246 pars: 3.47171 -0.95238 -0.98178 0.04001 pars: 4.01391 -3.04556 -0.8074 -0.02631 pars: 4.21692 -3.57406 -1.42921 -0.06461 pars: 4.31788 -3.67994 -2.15866 -0.0868 pars: 4.32988 -3.62191 -2.43666 -0.09064 pars: 4.32988 -3.62191 -2.43666 -0.09064 ## pars: 0 0 0 0 pars: 0.98893 0.12363 0.07395 -0.03544 pars: 1.78798 -0.35542 -0.25886 0.11039 pars: 2.50783 -0.9685 -0.54702 0.26176 pars: 3.12284 -1.62881 -0.93751 0.44418 pars: 3.69436 -2.16693 -1.53878 0.59337 pars: 4.15682 -2.60616 -2.30319 0.68761 pars: 4.49253 -3.00505 -3.09362 0.72747 pars: 4.65252 -3.25922 -3.43158 0.73326 pars: 4.7011 -3.38812 -3.5688 0.72755 pars: 4.7011 -3.38812 -3.5688 0.72755 ## pars: 0 0 0 0 pars: 0.99786 0.03922 0.04859 0.01929 pars: 1.66413 -0.417 -0.50288 -0.19008 pars: 2.35177 -0.84935 -1.05432 -0.38016 pars: 2.9832 -1.36983 -1.60885 -0.53145 pars: 3.56942 -1.94726 -2.16731 -0.63651 pars: 4.06117 -2.59272 -2.74708 -0.71031 pars: 4.41415 -3.31325 -3.3434 -0.73559 pars: 4.67333 -3.82665 -3.80358 -0.72448 pars: 4.77183 -4.05224 -4.01817 -0.71397 pars: 4.77183 -4.05224 -4.01817 -0.71397 ## pars: 0 0 0 0 pars: 0.99793 0.04707 0.04215 -0.01208 pars: 1.66476 -0.49614 -0.44895 0.12605 pars: 2.34334 -1.04211 -0.92224 0.25816 pars: 2.94753 -1.60909 -1.46764 0.38477 pars: 3.48897 -2.18964 -2.06809 0.481 pars: 3.90844 -2.80782 -2.72883 0.55395 pars: 4.16814 -3.4545 -3.44496 0.59291 pars: 4.3005 -3.85266 -3.86406 0.59608 pars: 4.33138 -4.0241 -4.03746 0.59163 pars: 4.33138 -4.0241 -4.03746 0.59163 ## pars: 0 0 0 0 pars: 0.67764 0.67717 0.28273 0.04816 pars: 0.83876 1.29471 1.05258 0.05019 pars: 0.05291 2.73344 2.22878 -0.0646 pars: 1.2004 2.44579 3.86366 -0.17329 pars: 2.37922 4.0476 3.51429 -0.09181 pars: 3.31599 2.89631 2.14701 -0.19993 pars: 3.64062 2.75701 2.12712 1.78978 pars: 3.66017 2.91851 2.32973 0.58511 pars: 4.00613 2.9415 2.33264 0.027 pars: 3.9107 2.88193 2.32898 0.55097 pars: 3.96729 2.80993 2.22048 0.76336 pars: 3.9107 2.88193 2.32898 0.55097 ## pars: 0 0 0 0 pars: 0.79465 0.46123 0.39241 0.04253 pars: 0.98773 1.04448 1.18127 0.05796 pars: 0.54499 2.65326 2.97849 0.46848 pars: 1.70748 3.26853 0.87997 0.68974 pars: 0.77878 2.77699 2.55646 0.51298 pars: 1.14821 2.48516 2.55297 0.68147 pars: 1.59693 2.41263 2.57934 0.4747 pars: 2.01933 2.4222 2.45987 0.71401 pars: 2.81222 2.20328 2.38015 1.1829 pars: 3.37364 2.01707 2.03033 1.10997 pars: 3.1167 2.06255 1.97508 1.06069 pars: 3.19691 2.04948 2.00771 1.1465 pars: 3.19691 2.04948 2.00771 1.1465 ## pars: 0 0 0 0 pars: 0.91566 0.39495 0.05987 -0.04474 pars: 1.74051 0.19613 -0.44945 0.09905 pars: 3.40776 -1.43679 -0.90915 0.32194 pars: 3.43368 -1.48738 -1.69122 0.28943 pars: 3.46414 -1.63191 -3.7315 0.13432 pars: 3.44914 -1.69243 -3.92259 0.05944 pars: 3.44914 -1.69243 -3.92259 0.05944 ## pars: 0 0 0 0 pars: 0.89686 0.43132 0.09051 -0.03764 pars: 1.69535 0.48825 -0.49891 0.07069 pars: 3.32935 -0.75124 -1.12235 0.2632 pars: 4.06513 -2.4825 -1.17685 0.11067 pars: 3.91892 -2.10596 -1.75017 0.10858 pars: 3.84263 -1.9084 -2.35142 0.07441 pars: 3.8494 -1.93316 -2.62435 0.03379 pars: 3.8494 -1.93316 -2.62435 0.03379 ## pars: 0 0 0 0 pars: 0.93216 0.35935 0.04113 0.01577 pars: 1.8544 0.02273 -0.14432 -0.02632 pars: 3.46548 -1.637 -0.26025 -0.08028 pars: 3.96994 -3.71801 -1.1391 -0.17606 pars: 4.4192 -5.46053 -2.59467 -0.27495 pars: 4.84506 -7.13708 -3.51073 -0.37088 pars: 5.10419 -8.16131 -4.00028 -0.42961 pars: 5.21726 -8.60824 -4.21369 -0.45523 pars: 5.24103 -8.70199 -4.26166 -0.4606 pars: 5.24103 -8.70199 -4.26166 -0.4606 ## pars: 0 0 0 0 pars: 0.91076 0.41116 0.03731 -0.00865 pars: 1.81942 0.14843 -0.28497 0.02939 pars: 3.80296 -1.50947 -0.53724 0.07375 pars: 4.30754 -3.28985 -1.46712 0.09856 pars: 4.7549 -4.79937 -2.98053 0.11582 pars: 5.02248 -5.70823 -3.59839 0.12752 pars: 5.16614 -6.19677 -3.91158 0.13394 pars: 5.20241 -6.31975 -4.00086 0.13552 pars: 5.20241 -6.31975 -4.00086 0.13552 ## pars: 0 0 0 0 pars: 0.98062 0.12505 0.15069 -0.00531 pars: 1.83091 -0.2403 -0.22806 0.00339 pars: 2.56763 -0.6414 -0.77202 0.02537 pars: 3.1529 -1.11066 -1.43267 0.05352 pars: 3.66813 -1.70434 -2.05049 0.07294 pars: 4.04231 -2.44554 -2.60778 0.07914 pars: 4.32143 -3.13321 -3.07702 0.07207 pars: 4.41878 -3.38812 -3.29374 0.06629 pars: 4.4454 -3.50323 -3.40423 0.06172 pars: 4.4454 -3.50323 -3.40423 0.06172 ## pars: 0 0 0 0 pars: 0.94772 0.31737 0.0332 0.00318 pars: 1.85007 -0.08597 -0.11856 -0.00369 pars: 3.26691 -1.791 -0.20635 -0.01648 pars: 3.75824 -3.74617 -1.13237 -0.04596 pars: 4.17581 -5.28023 -2.67957 -0.07625 pars: 4.60274 -6.85147 -4.02251 -0.10693 pars: 4.83824 -7.72675 -4.60545 -0.12389 pars: 4.94801 -8.13486 -4.87487 -0.1318 pars: 4.96954 -8.21474 -4.93051 -0.13335 pars: 4.96954 -8.21474 -4.93051 -0.13335 ## pars: 0 0 0 0 pars: 0.93693 0.34757 0.03554 0.00975 pars: 1.84475 -0.02659 -0.14951 -0.03048 pars: 3.42897 -1.75681 -0.26605 -0.06473 pars: 3.91399 -3.40418 -1.27932 -0.06209 pars: 4.36612 -4.82566 -3.09393 -0.04478 pars: 4.62784 -5.65639 -3.87299 -0.03798 pars: 4.76691 -6.09961 -4.24894 -0.03512 pars: 4.80355 -6.21594 -4.35663 -0.03428 pars: 4.80355 -6.21594 -4.35663 -0.03428 ## pars: 0 0 0 0 pars: 0.99431 0.10577 0.00816 0.0092 pars: 1.68801 -0.60473 -0.09145 -0.05446 pars: 2.39824 -2.46698 -0.27781 -0.17451 pars: 2.89644 -4.19598 -1.14721 -0.34184 pars: 3.31916 -5.37923 -2.70304 -0.49073 pars: 3.68437 -6.34441 -4.41807 -0.61417 pars: 3.8891 -6.89617 -5.07414 -0.68436 pars: 3.99271 -7.17567 -5.39842 -0.71991 pars: 4.01199 -7.22753 -5.46464 -0.72649 pars: 4.01199 -7.22753 -5.46464 -0.72649 ## pars: 0 0 0 0 pars: 0.99176 0.1249 0.02078 -0.01927 pars: 1.7593 -0.49518 -0.10442 0.08421 pars: 2.48285 -1.17725 -0.17386 0.16445 pars: 3.14093 -1.87114 -0.43258 0.30049 pars: 3.79047 -2.40056 -0.96594 0.41598 pars: 4.38924 -2.85002 -1.62378 0.49784 pars: 4.90982 -3.24335 -2.37899 0.56069 pars: 5.30118 -3.58313 -3.233 0.60606 pars: 5.58865 -3.96769 -4.10995 0.62675 pars: 5.70968 -4.22548 -4.47514 0.6242 pars: 5.74559 -4.38164 -4.64477 0.61824 pars: 5.74559 -4.38164 -4.64477 0.61824 ## pars: 0 0 0 0 pars: 0.50573 0.09068 0.85098 -0.1088 pars: 0.55123 0.95173 1.26916 -0.39456 pars: 0.91424 0.96755 2.08614 0.05322 pars: 0.61334 1.71118 2.68067 -0.00173 pars: 0.3316 1.69263 3.6382 -0.06011 pars: -0.62565 1.95881 3.66271 -0.17068 pars: -2.58129 1.60948 3.32956 -1.45243 pars: -1.03549 1.75022 3.23516 -0.30979 pars: -1.64861 1.87024 3.38633 -0.33134 pars: -1.82843 2.03125 3.38713 0.24284 pars: -1.81771 1.89959 3.44897 0.08443 pars: -1.79765 1.89675 3.41682 0.03824 pars: -1.79765 1.89675 3.41682 0.03824 ## pars: 0 0 0 0 pars: 0.88556 0.40894 0.20142 0.08929 pars: 1.82573 0.24019 -0.06524 -0.03918 pars: 3.89698 -1.1837 -0.889 -0.33405 pars: 3.91901 -1.12782 -1.37009 -0.21716 pars: 3.98408 -0.87622 -3.88058 0.62725 pars: 3.95141 -1.03583 -3.55566 0.71388 pars: 3.76748 -2.45897 -1.56465 1.74334 pars: 3.80916 -2.21739 -2.94378 2.11271 pars: 3.79215 -2.66399 -3.25254 2.85085 pars: 3.79415 -3.24213 -3.73207 3.78084 pars: 3.80308 -3.64963 -4.10718 4.43646 pars: 3.80308 -3.64963 -4.10718 4.43646 ## pars: 0 0 0 0 pars: 0.93684 0.25182 0.24212 -0.01721 pars: 1.88206 0.07835 -0.0241 0.05753 pars: 3.31542 -0.89442 -1.16677 0.17861 pars: 3.83542 -2.79989 -1.67169 -0.22751 pars: 4.36841 -4.42981 -2.61089 -0.75421 pars: 4.71449 -5.51772 -3.15227 -1.08909 pars: 4.93123 -6.20867 -3.47614 -1.29794 pars: 5.00635 -6.44438 -3.59414 -1.3706 pars: 5.00635 -6.44438 -3.59414 -1.3706 ## pars: 0 0 0 0 pars: 0.81171 0.39805 0.42181 0.06894 pars: 1.25941 0.89786 1.01549 -0.37525 pars: 1.78742 1.46777 1.62055 -0.20114 pars: 1.97109 2.19505 2.28024 -0.24739 pars: 1.92704 2.67299 3.15697 -0.2164 pars: 2.48882 3.48406 3.30788 -0.27806 pars: 3.23725 3.56696 3.96588 -0.27498 pars: 4.19173 3.80308 3.78622 -0.2443 pars: 4.26742 2.9825 3.22382 -0.17642 pars: 4.2252 3.44021 3.53752 -0.21429 pars: 4.59931 3.41666 3.53757 0.02031 pars: 4.49754 3.28647 3.32494 0.37107 pars: 4.56032 3.33922 3.46298 0.7831 pars: 4.67748 3.42344 3.41982 0.41296 pars: 4.56032 3.33922 3.46298 0.7831 ## pars: 0 0 0 0 pars: 0.99353 0.02604 0.10952 -0.01481 pars: 1.72903 -0.16184 -0.5341 0.08269 pars: 2.42994 -0.28559 -1.23313 0.15165 pars: 3.06296 -0.66579 -1.90289 0.23015 pars: 3.65601 -1.25266 -2.45111 0.28778 pars: 4.1573 -1.95933 -2.94863 0.33025 pars: 4.52107 -2.77806 -3.39165 0.36322 pars: 4.74311 -3.67005 -3.78491 0.383 pars: 4.92562 -4.4409 -4.2325 0.38396 pars: 4.96954 -4.68313 -4.43847 0.37827 pars: 4.96954 -4.68313 -4.43847 0.37827 ## pars: 0 0 0 0 pars: 0.79286 0.03106 0.6083 -0.01958 pars: 1.03361 0.05987 1.5784 -0.03051 pars: 0.29241 0.07414 2.76472 -0.02335 pars: 0.65288 2.22182 2.72512 -0.42139 pars: -0.22073 3.87974 3.67563 -1.11932 pars: 0.34977 2.83873 3.24653 -0.68859 pars: 0.43447 2.29303 3.35286 -1.39531 pars: 0.49367 2.31057 3.38321 -0.58078 pars: 0.50574 2.3603 3.35519 -0.93038 pars: 0.55919 2.33102 3.34886 -1.07809 pars: 0.55919 2.33102 3.34886 -1.07809 ## pars: 0 0 0 0 pars: 0.87149 0.48815 0.01779 0.0435 pars: 1.11289 1.41915 -0.23976 -0.0494 pars: 0.83996 4.04828 -0.44671 -0.06518 pars: 2.07994 2.8088 0.47641 0.26101 pars: 1.45523 3.55055 -0.12385 0.05055 pars: 1.51411 3.55962 -0.35268 0.49452 pars: 1.75858 3.5458 -1.58785 2.06387 pars: 2.49199 3.50434 -5.29333 6.77193 pars: 2.39763 3.61995 -6.14954 7 pars: 2.04005 3.5706 -3.56252 4.35503 pars: 1.90436 3.63461 -3.19439 4.08007 pars: 1.79036 3.666 -2.92591 3.96245 pars: 1.79036 3.666 -2.92591 3.96245 ## pars: 0 0 0 0 pars: 0.74313 0.29062 0.59155 -0.11561 pars: 0.9385 0.76768 1.44743 -0.15698 pars: 0.33411 2.08752 2.9358 -0.10179 pars: 1.72722 3.33622 2.3579 0.59933 pars: 2.58858 3.25229 4.22301 0.2864 pars: 3.45208 1.75483 3.76771 0.08404 pars: 3.38785 2.20034 3.5514 -0.66408 pars: 3.04608 2.89222 3.52623 -0.32899 pars: 3.20034 2.63971 3.37141 -0.74998 pars: 3.21761 2.57981 3.40534 -0.6371 pars: 3.21761 2.57981 3.40534 -0.6371 ## pars: 0 0 0 0 pars: 0.80219 0.45462 0.38703 -0.00404 pars: 1.08821 1.02058 1.15961 0.02759 pars: 0.79247 2.62309 2.682 -0.06937 pars: 1.05221 4.35944 1.38116 -0.52545 pars: 1.13107 2.92484 2.91615 -0.08166 pars: 1.47759 3.21636 3.15169 -0.09321 pars: 2.51713 2.95244 3.73482 -0.17692 pars: 3.36449 3.82394 3.87551 -0.18062 pars: 4.37154 3.60258 3.28608 -0.47518 pars: 5.15103 3.43096 4.20816 -0.37491 pars: 4.64041 3.54339 3.60414 -0.44059 pars: 4.75472 3.36279 3.41046 -0.13244 pars: 4.79778 3.38984 3.40809 -0.55144 pars: 4.75472 3.36279 3.41046 -0.13244 ## pars: 0 0 0 0 pars: 0.9533 0.27296 0.10004 -0.0819 pars: 1.86934 -0.03286 -0.11484 0.06356 pars: 2.721 -0.52859 -0.24701 0.17058 pars: 3.31742 -1.28247 -0.47933 0.31883 pars: 3.86527 -1.92469 -1.00228 0.43688 pars: 4.28525 -2.42157 -1.75989 0.48941 pars: 4.54534 -2.79092 -2.65204 0.49064 pars: 4.77502 -3.20879 -3.52989 0.44568 pars: 4.83397 -3.39649 -3.76252 0.41058 pars: 4.83397 -3.39649 -3.76252 0.41058 ## pars: 0 0 0 0 pars: 0.95917 0.27964 0.03497 -0.02381 pars: 1.8505 -0.14562 -0.1036 0.05028 pars: 3.09777 -1.84225 -0.21225 0.13329 pars: 3.63263 -3.66625 -1.12447 0.22119 pars: 4.296 -5.7275 -3.34053 0.35009 pars: 4.79089 -7.2457 -4.80578 0.44787 pars: 5.20112 -8.51871 -5.79835 0.53141 pars: 5.48029 -9.38557 -6.46548 0.58835 pars: 5.59819 -9.7517 -6.74705 0.61241 pars: 5.62443 -9.83317 -6.80985 0.61776 pars: 5.62443 -9.83317 -6.80985 0.61776 ## pars: 0 0 0 0 pars: 0.94989 0.10703 0.28361 0.07633 pars: 1.79272 -0.26408 -0.09111 -0.03083 pars: 2.89892 -1.04918 -1.91288 -0.36812 pars: 3.31651 -1.97298 -2.61421 -0.40707 pars: 3.53403 -3.09171 -2.87765 -0.32599 pars: 3.48871 -3.22466 -2.82126 -0.23532 pars: 3.29198 -3.87599 -2.71017 0.30783 pars: 3.25047 -4.24213 -2.83639 0.63432 pars: 3.20432 -5.17222 -3.3532 1.51162 pars: 3.1938 -5.80017 -3.76011 2.11012 pars: 3.19139 -6.37489 -4.14635 2.65425 pars: 3.19139 -6.37489 -4.14635 2.65425 ## pars: 0 0 0 0 pars: 0.98819 0.13032 0.07802 0.02042 pars: 1.68799 -0.42295 -0.36589 -0.06391 pars: 2.24379 -1.16002 -0.73915 -0.15611 pars: 2.58465 -1.90455 -1.3099 -0.2171 pars: 2.78191 -2.51581 -2.07584 -0.24539 pars: 2.91281 -2.98552 -2.9489 -0.24427 pars: 2.94695 -3.2296 -3.33856 -0.22333 pars: 2.94695 -3.2296 -3.33856 -0.22333 ## pars: 0 0 0 0 pars: 0.98865 0.0687 0.12607 0.04435 pars: 1.768 -0.24876 -0.38163 -0.14019 pars: 2.45247 -0.54494 -1.02251 -0.32204 pars: 3.03456 -1.02279 -1.658 -0.49224 pars: 3.53479 -1.693 -2.19512 -0.60224 pars: 3.8929 -2.52126 -2.62299 -0.65393 pars: 4.15136 -3.09049 -2.98855 -0.66561 pars: 4.24937 -3.31848 -3.17324 -0.6605 pars: 4.27478 -3.41683 -3.26709 -0.64983 pars: 4.27478 -3.41683 -3.26709 -0.64983 ## pars: 0 0 0 0 pars: 0.99842 0.04205 0.0346 0.01414 pars: 1.51322 -0.59346 -0.52806 -0.10631 pars: 1.96605 -2.09375 -1.88471 -0.38844 pars: 2.45729 -4.294 -4.05413 -0.78319 pars: 2.49023 -4.44217 -4.23598 -0.80325 pars: 2.49023 -4.44217 -4.23598 -0.80325 ## pars: 0 0 0 0 pars: 0.99519 0.0946 0.02464 0.00596 pars: 1.71592 -0.56827 -0.17323 -0.03893 pars: 2.41213 -1.27388 -0.30054 -0.07341 pars: 3.04841 -1.94429 -0.67973 -0.11717 pars: 3.64658 -2.47907 -1.27563 -0.15024 pars: 4.15706 -2.97074 -1.98065 -0.17524 pars: 4.53458 -3.41727 -2.79163 -0.19546 pars: 4.74286 -3.82024 -3.68273 -0.20899 pars: 4.90256 -4.25673 -4.42968 -0.2126 pars: 4.93681 -4.45375 -4.6595 -0.21098 pars: 4.93681 -4.45375 -4.6595 -0.21098 ## pars: 0 0 0 0 pars: 0.99653 0.07072 0.03704 -0.0236 pars: 1.6785 -0.53778 -0.31829 0.17233 pars: 2.35028 -1.18267 -0.63843 0.34649 pars: 2.9553 -1.78163 -1.14414 0.48603 pars: 3.49035 -2.29328 -1.8098 0.57994 pars: 3.90219 -2.70675 -2.62023 0.63126 pars: 4.20583 -3.02937 -3.10124 0.65464 pars: 4.35088 -3.20991 -3.33238 0.66254 pars: 4.39329 -3.29457 -3.42576 0.66159 pars: 4.39329 -3.29457 -3.42576 0.66159 ## pars: 0 0 0 0 pars: 0.99385 0.10367 0.03143 -0.02282 pars: 1.68437 -0.55137 -0.24268 0.1149 pars: 2.35747 -2.32915 -0.81643 0.40833 pars: 2.82815 -3.8688 -1.97524 0.71481 pars: 3.23887 -4.86839 -3.6475 0.96886 pars: 3.4992 -5.52546 -4.3854 1.13663 pars: 3.66116 -5.93692 -4.81392 1.24218 pars: 3.70793 -6.05544 -4.9419 1.27247 pars: 3.70793 -6.05544 -4.9419 1.27247 ## pars: 0 0 0 0 pars: 0.99761 0.02209 0.06482 0.00944 pars: 1.68259 -0.22891 -0.61203 -0.08889 pars: 2.39081 -0.40424 -1.29046 -0.17505 pars: 3.05324 -0.815 -1.90761 -0.28269 pars: 3.70233 -1.46102 -2.30109 -0.36338 pars: 4.30357 -2.22447 -2.53117 -0.41552 pars: 4.83539 -2.69611 -2.73341 -0.45403 pars: 5.24634 -3.00331 -2.89218 -0.48299 pars: 5.49898 -3.19102 -2.9983 -0.50046 pars: 5.60042 -3.27305 -3.0513 -0.5071 pars: 5.60042 -3.27305 -3.0513 -0.5071 ## pars: 0 0 0 0 pars: 0.99916 0.02815 0.02649 -0.01389 pars: 1.58639 -0.53956 -0.52033 0.17009 pars: 2.20004 -1.93774 -1.86769 0.57631 pars: 2.60941 -3.36073 -3.27154 0.96177 pars: 3.07813 -4.85977 -4.83455 1.36289 pars: 3.31029 -5.47886 -5.46284 1.5571 pars: 3.47484 -5.91133 -5.90107 1.69541 pars: 3.51568 -6.02033 -6.01154 1.72954 pars: 3.51568 -6.02033 -6.01154 1.72954 ## pars: 0 0 0 0 pars: 0.99944 -0.01242 -0.03089 -0.00337 pars: 1.21342 -0.72478 -0.69925 0.00411 pars: 1.75555 -3.63089 -3.39348 0.04581 pars: 1.91186 -4.87407 -4.7566 0.05649 pars: 1.85906 -4.81158 -4.73932 0.05011 pars: 1.85906 -4.81158 -4.73932 0.05011 ## pars: 0 0 0 0 pars: 0.99804 0.05673 0.02438 0.01047 pars: 1.63108 -0.6128 -0.35065 -0.09121 pars: 2.28452 -2.32714 -1.24971 -0.32463 pars: 2.73694 -3.88625 -2.49045 -0.5565 pars: 3.2897 -5.27727 -4.6436 -0.82221 pars: 3.57556 -5.97745 -5.43286 -0.95939 pars: 3.81508 -6.56255 -6.07525 -1.07486 pars: 3.89337 -6.75385 -6.28517 -1.1126 pars: 3.89337 -6.75385 -6.28517 -1.1126 ## pars: 0 0 0 0 pars: 0.70984 -0.45145 -0.54066 0.00339 pars: 0.46661 -1.09817 -1.26355 0.00653 pars: 0.08651 -3.80061 -4.18797 0.01805 pars: 0.13168 -4.34705 -4.66535 0.01884 pars: 0.13729 -4.70116 -4.98228 0.01939 pars: 0.13729 -4.70116 -4.98228 0.01939 ## pars: 0 0 0 0 pars: 0.77613 0.50491 0.30936 -0.21676 pars: 0.8906 0.56616 0.01247 -1.16281 pars: 0.95564 0.36979 0.35391 -2.07966 pars: 0.80308 0.65644 0.56099 -3.00253 pars: -0.08944 2.17356 1.51955 -6.46416 pars: 0.65149 1.31796 0.72619 -3.70781 pars: 0.33326 1.19369 1.13407 -4.54579 pars: 0.43844 1.13163 0.83016 -4.28385 pars: 0.20981 1.42394 1.06437 -5.1742 pars: 0.37308 1.20325 0.915 -4.52766 pars: 0.32597 1.17015 1.06131 -4.59751 pars: 0.36921 1.16657 0.96049 -4.53009 pars: 0.3549 1.1898 0.96733 -4.58151 pars: 0.3549 1.1898 0.96733 -4.58151 ## pars: 0 0 0 0 pars: 0.96416 0.141 0.22474 -0.0017 pars: 1.82454 -0.35268 0.10102 0.02523 pars: 2.68037 -0.71219 -0.27087 0.0217 pars: 3.36142 -0.76206 -1.00139 0.01711 pars: 3.87276 -0.89079 -1.85107 0.01432 pars: 4.24759 -1.39755 -2.6274 0.0124 pars: 4.47118 -2.15503 -3.24077 0.01073 pars: 4.75057 -3.86618 -4.05765 0.00575 pars: 4.75102 -4.12212 -4.14658 0.00505 pars: 4.75102 -4.12212 -4.14658 0.00505 ## pars: 0 0 0 0 pars: 0.91272 0.36475 0.18409 -0.00346 pars: 1.87797 0.178 0.00135 -0.00722 pars: 3.57202 -1.09966 -0.54355 0.00926 pars: 4.21392 -2.77784 -1.79697 0.00421 pars: 4.6627 -3.41055 -3.84572 -0.01359 pars: 5.14975 -4.33092 -5.56412 -0.03037 pars: 5.47318 -4.94721 -6.68587 -0.03885 pars: 5.64356 -5.27139 -7.27735 -0.04324 pars: 5.69223 -5.36435 -7.44579 -0.0445 pars: 5.69223 -5.36435 -7.44579 -0.0445 ## pars: 0 0 0 0 pars: 0.94375 0.32927 0.03017 0.003 pars: 1.84548 -0.05582 -0.16615 -0.00412 pars: 3.42756 -1.76254 -0.27771 -0.02312 pars: 3.89826 -3.95341 -0.91495 -0.05742 pars: 4.68884 -7.74541 -2.50002 -0.02758 pars: 5.19876 -10.21165 -3.14961 0.01422 pars: 5.68504 -12.56538 -3.72938 0.05428 pars: 6.00141 -14.09689 -4.10201 0.08035 pars: 6.16067 -14.86784 -4.28974 0.09348 pars: 6.20409 -15.07803 -4.34153 0.09705 pars: 6.20409 -15.07803 -4.34153 0.09705 ## pars: 0 0 0 0 pars: 0.9111 0.39259 0.12301 0.02514 pars: 1.8367 0.25659 -0.22693 0.0732 pars: 3.49987 -1.05171 -0.75596 -0.00485 pars: 4.11019 -3.11167 -0.43368 -0.21439 pars: 4.53899 -4.414 -1.08751 -0.42725 pars: 4.8422 -5.1739 -2.45572 -0.58412 pars: 4.96964 -5.44294 -3.33076 -0.6489 pars: 4.98345 -5.45552 -3.52542 -0.65546 pars: 4.98345 -5.45552 -3.52542 -0.65546 ## pars: 0 0 0 0 pars: 0.80812 0.57994 0.10286 0.00538 pars: 1.44217 1.052 -0.50407 0.0877 pars: 2.86444 0.78643 -1.94421 0.10286 pars: 4.53717 -0.37674 -2.06678 0.0628 pars: 5.63618 -2.04737 -1.67233 0.17768 pars: 6.05172 -2.6842 -1.63644 0.21458 pars: 6.5299 -3.41584 -1.65595 0.27337 pars: 6.79753 -3.82471 -1.70615 0.30826 pars: 6.9213 -4.01331 -1.76135 0.32421 pars: 6.9213 -4.01331 -1.76135 0.32421 ## pars: 0 0 0 0 pars: 0.78922 0.36665 0.49181 0.02884 pars: 1.10512 1.18848 0.96167 -0.03467 pars: 0.83305 2.3556 2.67556 0.24677 pars: 0.75061 4.41656 2.46991 -0.14845 pars: 1.49746 4.54561 4.43874 -0.10245 pars: 1.49632 4.51135 4.54212 -2.20981 pars: 1.51394 4.54673 4.48578 -1.00616 pars: 0.97784 4.93562 4.70441 -1.583 pars: 1.26399 4.72804 4.58771 -1.2751 pars: 1.30471 4.72011 4.58546 -1.5005 pars: 1.30471 4.72011 4.58546 -1.5005 ## pars: 0 0 0 0 pars: 0.84078 0.38413 0.37264 0.08169 pars: 1.8118 0.37534 0.34569 -0.15561 pars: 3.87148 -0.31636 -0.37398 -0.3443 pars: 4.91326 -1.78574 -1.58058 -1.10194 pars: 5.42327 -2.59155 -2.17281 -1.48241 pars: 5.95624 -3.2526 -3.00162 -1.80201 pars: 6.31064 -3.72532 -3.51297 -2.01244 pars: 6.52323 -4.0128 -3.81454 -2.14039 pars: 6.59724 -4.11159 -3.92174 -2.18314 pars: 6.59724 -4.11159 -3.92174 -2.18314 ## pars: 0 0 0 0 pars: 0.95186 0.29059 0.08983 0.0381 pars: 1.86106 -0.07295 -0.08149 -0.07072 pars: 3.2989 -1.64037 -0.46501 -0.26655 pars: 3.85693 -3.5171 -1.401 -0.25718 pars: 4.01158 -5.48666 -2.38419 -0.24735 pars: 4.59059 -8.35721 -4.70338 -0.24719 pars: 5.09883 -10.92264 -6.58936 -0.2508 pars: 5.47772 -12.83548 -7.99451 -0.25351 pars: 5.69214 -13.91797 -8.78968 -0.25505 pars: 5.76737 -14.29774 -9.06865 -0.25559 pars: 5.76737 -14.29774 -9.06865 -0.25559 ## pars: 0 0 0 0 pars: 0.88998 0.34071 0.30177 -0.02814 pars: 1.8397 0.05888 0.43764 -0.01623 pars: 3.56453 -1.29923 0.19488 0.01642 pars: 4.43748 -1.30273 -1.82487 0.21149 pars: 4.96682 -0.67654 -3.87493 0.14468 pars: 5.27646 -0.68706 -4.87164 0.07781 pars: 5.48235 -1.06807 -5.34547 0.0073 pars: 5.61016 -1.72794 -5.43581 -0.06951 pars: 5.73456 -3.07945 -5.18397 -0.20059 pars: 5.69986 -3.57982 -4.83512 -0.23472 pars: 5.55079 -4.15378 -4.09368 -0.25812 pars: 5.5622 -4.25899 -4.09099 -0.27793 pars: 5.5622 -4.25899 -4.09099 -0.27793 ## pars: 0 0 0 0 pars: 0.98891 0.14708 0.01814 -0.00991 pars: 1.76385 -0.46688 -0.10292 0.07868 pars: 2.6729 -2.26884 -0.2282 0.11953 pars: 3.24011 -4.04393 -1.00441 -0.00526 pars: 3.83171 -5.38075 -2.39636 -0.13233 pars: 4.41414 -6.74856 -3.76225 -0.25476 pars: 4.87763 -7.85971 -4.54165 -0.34402 pars: 5.21425 -8.66796 -5.09046 -0.40848 pars: 5.38269 -9.07244 -5.36439 -0.44073 pars: 5.43184 -9.19042 -5.44481 -0.45014 pars: 5.43184 -9.19042 -5.44481 -0.45014 ## pars: 0 0 0 0 pars: 0.84112 0.33766 0.41625 0.07242 pars: 1.80243 0.10316 0.52485 -0.02294 pars: 3.86674 -1.05576 0.06715 -0.15019 pars: 4.66595 -0.64868 -2.1402 -0.54175 pars: 5.07052 -0.54834 -3.28405 -0.7021 pars: 5.26536 -0.88822 -3.66004 -0.77225 pars: 5.41911 -1.69167 -3.71248 -0.80267 pars: 5.63027 -3.71509 -3.3781 -0.79916 pars: 5.52976 -3.42622 -3.26456 -0.73088 pars: 5.40843 -3.62489 -2.93238 -0.5596 pars: 5.38688 -3.80209 -2.87366 -0.42388 pars: 5.38688 -3.80209 -2.87366 -0.42388 ## pars: 0 0 0 0 pars: 0.87522 0.23922 0.41993 0.02051 pars: 1.85388 0.09115 0.28024 0.04882 pars: 3.76445 -0.66183 -0.75683 0.05858 pars: 4.59408 -1.17388 -2.81202 -0.28576 pars: 5.05898 -2.16979 -3.62906 -0.52665 pars: 5.41582 -3.29955 -4.07042 -0.70563 pars: 5.55685 -3.67077 -4.28187 -0.77597 pars: 5.61939 -3.84913 -4.36945 -0.80617 pars: 5.61939 -3.84913 -4.36945 -0.80617 ## pars: 0 0 0 0 pars: 0.9976 0.04657 0.04643 -0.02156 pars: 1.6818 -0.51466 -0.35914 0.20735 pars: 2.4453 -1.69728 -1.6968 0.73219 pars: 3.07941 -2.48819 -3.36616 1.21381 pars: 3.73288 -3.71891 -4.75349 1.63802 pars: 4.38379 -4.80693 -5.92346 2.0235 pars: 4.98964 -5.65939 -7.01051 2.39804 pars: 5.52721 -6.39568 -7.97555 2.73242 pars: 5.94024 -6.95906 -8.71721 2.98955 pars: 6.18987 -7.29937 -9.16545 3.14497 pars: 6.28739 -7.43236 -9.34056 3.20568 pars: 6.28739 -7.43236 -9.34056 3.20568 ## pars: 0 0 0 0 pars: 0.98561 0.16451 0.03882 0.00129 pars: 1.76303 -0.34905 -0.31519 0.08226 pars: 2.86822 -2.19769 -0.63305 0.03565 pars: 3.40034 -4.21615 -1.20092 -0.21397 pars: 4.09161 -6.75404 -2.4745 -0.50407 pars: 4.64096 -8.82367 -3.07652 -0.7112 pars: 5.1247 -10.64653 -3.60462 -0.89267 pars: 5.45061 -11.87493 -3.95793 -1.01491 pars: 5.61561 -12.49679 -4.13755 -1.0768 pars: 5.66223 -12.6723 -4.18962 -1.09429 pars: 5.66223 -12.6723 -4.18962 -1.09429 ## pars: 0 0 0 0 pars: 0.9509 0.3011 0.06067 -0.03793 pars: 1.86319 -0.05704 -0.12818 0.02376 pars: 3.20782 -1.66625 -0.32237 0.18616 pars: 3.68458 -3.54462 -1.09674 0.51246 pars: 4.35693 -5.88727 -3.35663 1.07016 pars: 4.84505 -7.62491 -4.54804 1.48161 pars: 5.2855 -9.20359 -5.53358 1.85459 pars: 5.56035 -10.18917 -6.14481 2.08741 pars: 5.68121 -10.6226 -6.41352 2.1898 pars: 5.70806 -10.71887 -6.47328 2.21254 pars: 5.70806 -10.71887 -6.47328 2.21254 ## pars: 0 0 0 0 pars: 0.04514 -0.70599 -0.70678 -0.00018 pars: -0.40786 -3.51589 -3.51735 -0.00047 pars: 0.54213 -6.26458 -6.26366 -0.00032 pars: 0.09972 -6.0742 -6.07376 -0.00044 pars: -0.08802 -6.01738 -6.01715 -0.00049 pars: -0.04122 -6.05475 -6.05446 -0.00048 pars: -0.04122 -6.05475 -6.05446 -0.00048 ## pars: 0 0 0 0 pars: 0.99277 0.11907 0.00876 -0.01274 pars: 1.71936 -0.55643 -0.09026 0.06435 pars: 2.49607 -2.43512 -0.26587 0.2102 pars: 3.0411 -4.1812 -1.15678 0.42288 pars: 3.52307 -5.44674 -2.67791 0.61556 pars: 4.09015 -6.92511 -4.21311 0.8413 pars: 4.48231 -7.95709 -5.02864 0.99869 pars: 4.77173 -8.7191 -5.6214 1.1149 pars: 4.89271 -9.03763 -5.86894 1.16347 pars: 4.92084 -9.11167 -5.92675 1.17477 pars: 4.92084 -9.11167 -5.92675 1.17477 ## pars: 0 0 0 0 pars: 0.97712 0.19111 0.09079 0.02163 pars: 1.8583 -0.2171 -0.14489 -0.01492 pars: 2.65578 -0.7836 -0.34196 -0.08027 pars: 3.31814 -1.43602 -0.69326 -0.19084 pars: 3.9911 -1.89201 -1.26764 -0.2872 pars: 4.62465 -2.29556 -1.92444 -0.35325 pars: 5.20941 -2.70452 -2.62325 -0.403 pars: 5.70265 -3.15708 -3.36531 -0.4383 pars: 6.12203 -3.70554 -3.99662 -0.44612 pars: 6.34806 -4.0351 -4.31507 -0.44256 pars: 6.44053 -4.20519 -4.46853 -0.43789 pars: 6.44053 -4.20519 -4.46853 -0.43789 ## pars: 0 0 0 0 pars: 0.86081 0.50672 0.02402 0.04086 pars: 1.12903 1.46837 -0.00618 -0.00783 pars: 0.97679 4.8168 0.03271 0.05528 pars: 3.70693 4.68977 1.97458 0.05476 pars: 3.92255 4.6142 1.41275 0.87969 pars: 4.80582 4.35394 -0.87127 3.20763 pars: 5.02148 4.30452 -1.57926 3.83178 pars: 4.89744 4.33294 -1.17204 3.47279 pars: 4.87679 4.35168 -1.16899 3.51145 pars: 4.87679 4.35168 -1.16899 3.51145 ## pars: 0 0 0 0 pars: 0.50563 0.82569 0.23384 -0.08886 pars: 0.46326 1.4918 0.97778 -0.05645 pars: 0.76765 1.7347 1.85214 0.23309 pars: 1.17549 2.61655 2.07968 0.16787 pars: 2.01984 2.94953 2.48494 0.05854 pars: 2.47297 3.62223 2.67019 0.61338 pars: 3.26566 3.92652 3.17667 0.46331 pars: 4.16642 3.85086 2.92772 0.81106 pars: 4.63068 4.24036 3.67029 0.52585 pars: 4.82954 4.14184 3.56652 0.27373 pars: 5.06762 4.06982 3.44292 -0.05634 pars: 5.11541 4.09948 3.44816 -0.06628 pars: 5.11541 4.09948 3.44816 -0.06628 ## pars: 0 0 0 0 pars: 0.87535 0.47822 0.06404 0.03098 pars: 1.21741 1.3864 -0.1275 -0.11572 pars: 1.16451 4.22071 -0.19309 -0.19606 pars: 3.95429 4.32406 0.30947 -0.16819 pars: 4.56905 4.31984 -2.45698 -0.29354 pars: 5.64991 4.31499 -7.72737 -0.82397 pars: 5.6223 4.3268 -7.59473 -0.82731 pars: 5.6223 4.3268 -7.59473 -0.82731 ## pars: 0 0 0 0 pars: 0.81925 0.55672 0.13393 0.03074 pars: 1.06414 1.526 0.13377 0.0077 pars: 0.68336 3.52235 1.03116 -0.01125 pars: 1.55936 3.94244 3.02787 -0.08462 pars: 2.42887 4.68121 2.54147 -1.9279 pars: 3.49001 4.95707 2.13741 -0.03827 pars: 4.76527 4.10304 1.8995 -0.29812 pars: 6.59177 3.40008 1.16716 -0.03495 pars: 5.84459 3.76925 1.47499 -0.0698 pars: 5.67508 3.94462 1.52361 0.00252 pars: 5.67496 4.07729 1.47923 0.1364 pars: 5.67496 4.07729 1.47923 0.1364 ## pars: 0 0 0 0 pars: 0.95357 0.29838 0.03954 0.01058 pars: 1.84878 -0.13799 -0.03921 0.05512 pars: 3.30037 -1.84526 -0.18149 0.01421 pars: 3.81537 -3.74267 -1.1087 -0.5503 pars: 4.06765 -6.10674 -2.26407 -1.25401 pars: 4.66315 -9.30421 -4.35469 -2.32226 pars: 5.23368 -12.40924 -6.08376 -3.35098 pars: 5.70336 -14.96599 -7.50355 -4.19797 pars: 6.02736 -16.72968 -8.48288 -4.78224 pars: 6.18742 -17.60101 -8.9667 -5.07089 pars: 6.23191 -17.84318 -9.10118 -5.15112 pars: 6.23191 -17.84318 -9.10118 -5.15112 ## pars: 0 0 0 0 pars: 0.84875 0.51492 0.11546 -0.03387 pars: 1.16579 1.44641 0.11244 0.14447 pars: 0.99159 3.79956 0.4688 -0.0068 pars: 2.6837 4.23241 2.09869 -0.10868 pars: 1.31142 4.74268 3.68134 -1.14273 pars: 0.53234 4.98579 4.73759 0.84116 pars: 0.40374 4.51382 5.08008 -0.6042 pars: 0.47758 4.78484 4.88341 0.22577 pars: 0.74852 5.01527 4.63719 -0.2804 pars: 1.04536 4.84673 4.38455 -0.79323 pars: 1.22067 4.86156 4.33283 -0.9496 pars: 1.95504 4.87846 4.09394 -1.52626 pars: 3.99374 4.87111 3.1627 -3.3596 pars: 7.79197 4.88419 1.55999 -6.66054 pars: 2.39325 4.82622 3.95821 -1.61522 pars: 3.25015 4.85025 3.5323 -2.54915 pars: 3.57814 4.77958 3.47268 -2.64798 pars: 3.65918 4.74387 3.50503 -2.54836 pars: 3.65918 4.74387 3.50503 -2.54836 ## pars: 0 0 0 0 pars: 0.89565 0.32164 0.30619 0.02463 pars: 1.8748 0.26302 0.11264 0.04383 pars: 3.59802 -0.45838 -0.94355 0.01316 pars: 4.3787 -2.42237 -1.17893 -0.27714 pars: 4.94017 -4.2127 -1.13676 -0.49495 pars: 5.37724 -5.14798 -1.75631 -0.64985 pars: 5.6839 -5.61445 -2.48256 -0.74607 pars: 5.81024 -5.7735 -2.83296 -0.78352 pars: 5.84339 -5.77701 -2.98396 -0.79085 pars: 5.84339 -5.77701 -2.98396 -0.79085 ## pars: 0 0 0 0 pars: 0.98754 0.10996 0.10623 0.03717 pars: 1.76234 -0.35116 -0.31006 -0.08016 pars: 2.43891 -0.86103 -0.821 -0.22584 pars: 2.98648 -1.42691 -1.42895 -0.32758 pars: 3.41748 -2.04651 -2.08245 -0.38478 pars: 4.0426 -3.48265 -3.56703 -0.44726 pars: 4.28383 -4.25158 -4.29872 -0.43357 pars: 4.3234 -4.47208 -4.5041 -0.41346 pars: 4.3234 -4.47208 -4.5041 -0.41346 ## pars: 0 0 0 0 pars: 0.84424 0.45689 0.27436 -0.05683 pars: 1.7977 0.55912 0.04827 0.11451 pars: 3.73013 0.01571 -0.96887 0.28044 pars: 4.86999 -1.88975 -0.60506 0.45158 pars: 5.25418 -3.44066 0.95577 0.13131 pars: 5.67832 -6.0769 5.2936 -0.07568 pars: 5.57156 -4.32597 2.41456 0.06185 pars: 5.75154 -5.04523 3.9848 0.10659 pars: 5.75376 -4.5499 2.9127 0.07575 pars: 6.10205 -4.3921 2.48307 0.04599 pars: 6.13574 -4.27743 2.18345 0.01565 pars: 6.13574 -4.27743 2.18345 0.01565 ## pars: 0 0 0 0 pars: 0.67334 0.73909 0.01848 0.00282 pars: 0.86189 1.72111 0.02769 0.00374 pars: 0.36605 2.4833 0.40036 -0.18158 pars: 1.13783 3.08286 0.61016 -0.21101 pars: 1.99384 3.22366 0.11306 -0.19334 pars: 3.01471 3.54501 -1.72269 -0.0013 pars: 3.30925 3.55247 -2.47854 0.0185 pars: 3.48072 3.60525 -3.13545 -0.00161 pars: 3.50507 3.60674 -3.38903 -0.06502 pars: 3.50507 3.60674 -3.38903 -0.06502 ## pars: 0 0 0 0 pars: 0.98754 0.10996 0.10623 0.03717 pars: 1.76234 -0.35116 -0.31006 -0.08016 pars: 2.43891 -0.86103 -0.821 -0.22584 pars: 2.98648 -1.42691 -1.42895 -0.32758 pars: 3.41748 -2.04651 -2.08245 -0.38478 pars: 4.0426 -3.48265 -3.56703 -0.44726 pars: 4.28383 -4.25158 -4.29872 -0.43357 pars: 4.3234 -4.47208 -4.5041 -0.41346 pars: 4.3234 -4.47208 -4.5041 -0.41346 ## pars: 0 0 0 0 pars: 0.90228 0.28177 0.32356 0.04253 pars: 1.87373 0.28736 0.09661 -0.02624 pars: 3.59217 -0.25759 -1.07074 -0.14324 pars: 4.46486 -2.20364 -1.32018 -0.2675 pars: 5.02816 -3.90816 -0.13824 -0.18546 pars: 5.64581 -5.32986 1.35064 -0.26832 pars: 6.09055 -6.53803 3.0624 -0.46522 pars: 6.3819 -9.5532 7.46122 -0.99738 pars: 6.3021 -7.05121 3.8402 -0.55579 pars: 6.72862 -6.55077 3.1468 -0.46567 pars: 6.85262 -6.43976 2.99452 -0.44523 pars: 6.85262 -6.43976 2.99452 -0.44523 ## pars: 0 0 0 0 pars: 0.75425 0.58315 0.28208 -0.10709 pars: 1.2351 0.81752 1.12344 -0.02983 pars: 1.92926 1.50005 1.3337 -0.11969 pars: 2.57646 1.44307 2.08164 -0.25564 pars: 3.27843 2.15244 2.11205 -0.31145 pars: 3.95316 1.86329 1.68312 -0.8379 pars: 4.0563 2.55368 1.73889 -1.55177 pars: 4.11095 2.32467 1.97826 -2.49372 pars: 3.90601 2.32472 1.62034 -3.40471 pars: 4.0067 2.35324 1.76555 -2.91046 pars: 4.16304 2.32436 1.65504 -3.10809 pars: 4.17212 2.3215 1.65608 -3.58821 pars: 4.17212 2.3215 1.65608 -3.58821 ## pars: 0 0 0 0 pars: 0.95355 0.2298 0.19412 0.01613 pars: 1.88574 -0.02677 -0.05489 -0.04033 pars: 2.79453 -0.35248 -0.31498 -0.05947 pars: 3.52586 -0.89145 -0.73291 -0.0604 pars: 4.14295 -1.45314 -1.28392 -0.05095 pars: 4.69354 -1.90393 -1.98639 -0.03777 pars: 5.12893 -2.42691 -2.71888 -0.0178 pars: 5.41414 -2.83067 -3.12322 -0.00343 pars: 5.54008 -3.03287 -3.30619 0.00378 pars: 5.56957 -3.11185 -3.36196 0.00671 pars: 5.56957 -3.11185 -3.36196 0.00671 ## pars: 0 0 0 0 pars: 0.88276 0.4025 0.23445 -0.06142 pars: 1.85212 0.29158 0.10275 0.11374 pars: 3.75126 -0.75414 -0.59907 0.34687 pars: 4.55618 -2.78289 -1.29432 0.34891 pars: 5.08707 -3.73066 -2.55785 0.27631 pars: 5.51189 -4.46608 -3.5984 0.21624 pars: 5.78075 -4.98774 -4.14452 0.18651 pars: 5.91342 -5.24661 -4.41104 0.17209 pars: 5.94486 -5.30621 -4.47771 0.16835 pars: 5.94486 -5.30621 -4.47771 0.16835 ## pars: 0 0 0 0 pars: 0.68593 0.55936 0.4457 -0.13407 pars: 0.79846 1.16587 1.23046 -0.07389 pars: 1.05137 2.08567 1.44044 -0.28818 pars: 1.72005 2.4196 2.0963 -0.39406 pars: 2.65149 2.54876 1.8392 -0.61689 pars: 3.27005 2.69522 2.60656 -0.70109 pars: 3.7052 2.33007 2.20515 -1.41956 pars: 3.53536 2.98135 2.17687 -2.15861 pars: 3.75938 2.55308 2.34731 -1.42192 pars: 3.53882 2.58468 2.47957 -1.4977 pars: 3.47702 2.68716 2.43422 -1.7354 pars: 3.58063 2.65509 2.49117 -1.79211 pars: 3.58063 2.65509 2.49117 -1.79211 ## pars: 0 0 0 0 pars: 0.81192 0.40743 0.4155 -0.04638 pars: 1.21776 0.97734 0.98788 0.38125 pars: 1.19217 2.44229 2.24951 -0.13204 pars: 0.96376 2.22811 4.17577 0.30767 pars: 1.8473 4.00552 4.2837 0.08316 pars: 3.55194 3.16552 3.76972 -0.27231 pars: 3.97079 3.22948 3.28636 -0.82614 pars: 4.5592 3.17319 2.9956 -0.0289 pars: 4.58226 3.11585 2.99632 -0.57782 pars: 4.6036 3.07534 3.01888 -0.76993 pars: 4.6036 3.07534 3.01888 -0.76993 ## pars: 0 0 0 0 pars: 0.81981 0.53901 0.14657 0.12609 pars: 1.13296 1.46853 0.107 -0.06458 pars: 1.74267 1.81144 0.77577 0.18726 pars: 2.06701 2.4666 1.43975 0.34445 pars: 2.78498 2.56467 2.12849 0.32129 pars: 3.47914 3.23935 2.34564 0.44693 pars: 4.40611 2.94872 2.52038 0.60728 pars: 5.07675 3.65961 2.6322 0.78718 pars: 5.25639 3.48313 2.37362 1.71977 pars: 5.19729 3.44597 2.50254 2.70896 pars: 5.0963 3.38248 2.72285 4.39928 pars: 4.9894 3.8566 2.63272 7 pars: 5.04668 3.67576 2.8156 7 pars: 5.04668 3.67576 2.8156 7 ## pars: 0 0 0 0 pars: 0.59621 0.49751 0.61484 -0.1378 pars: 0.78786 1.35789 1.04516 0.05673 pars: 1.01725 1.7767 1.92345 0.08101 pars: 1.52275 2.59878 2.17933 0.13752 pars: 2.11726 2.9539 2.90073 0.14298 pars: 3.08413 3.20526 2.87513 0.10671 pars: 3.64682 3.59355 3.60493 0.10705 pars: 4.61382 3.58079 3.35443 0.15171 pars: 4.5564 3.05214 3.54124 0.09166 pars: 4.54636 3.51002 3.42292 0.13867 pars: 4.43754 3.47839 3.45681 0.11798 pars: 4.37142 3.54584 3.4682 0.0447 pars: 4.43754 3.47839 3.45681 0.11798 ## pars: 0 0 0 0 pars: 0.79344 0.37203 0.47858 -0.05483 pars: 1.05346 1.10019 1.10194 0.06185 pars: 0.67043 2.60875 2.55236 -0.3484 pars: 0.77438 1.91227 4.50433 0.27482 pars: 1.59792 3.90729 4.55238 0.09079 pars: 2.7239 3.4119 3.61164 -1.42456 pars: 4.40457 2.97635 2.49044 -0.77413 pars: 3.74433 3.14865 3.05665 -0.76428 pars: 3.98542 3.06264 2.92945 -0.7773 pars: 4.02175 3.0278 2.97077 -0.80469 pars: 4.02175 3.0278 2.97077 -0.80469 ## pars: 0 0 0 0 pars: 0.79471 0.58376 0.16495 -0.02127 pars: 1.02718 1.48473 0.5313 -0.01964 pars: 0.61855 3.32945 1.61846 -0.26138 pars: 1.2333 3.04451 3.69519 -0.45753 pars: 1.69591 5.16127 4.01919 -0.35404 pars: 1.31858 5.09103 4.79082 1.6628 pars: -0.00437 5.20077 6.34075 2.46645 pars: 0.69626 5.28838 5.47413 0.64465 pars: 0.77361 5.25767 5.37098 0.50511 pars: 0.77361 5.25767 5.37098 0.50511 ## pars: 0 0 0 0 pars: 0.92833 0.31032 0.20371 -0.02037 pars: 1.88769 0.04911 0.11094 0.03236 pars: 3.41309 -1.2371 -0.49702 0.1148 pars: 4.03533 -1.88758 -2.3772 0.00414 pars: 4.49927 -1.49425 -4.36932 -0.13416 pars: 4.93184 -1.47738 -5.86411 -0.23769 pars: 5.18363 -1.62624 -6.59511 -0.30787 pars: 5.28883 -1.79193 -6.81023 -0.34537 pars: 5.31069 -1.90926 -6.78263 -0.35985 pars: 5.31069 -1.90926 -6.78263 -0.35985 ## pars: 0 0 0 0 pars: 0.86842 0.40322 0.28795 -0.01877 pars: 1.85421 0.34996 0.13927 0.03839 pars: 3.82803 -0.57927 -0.59258 0.0985 pars: 4.66928 -2.49152 -1.55879 0.12391 pars: 5.27414 -3.62559 -2.72967 0.13491 pars: 5.84435 -4.3893 -4.30837 0.13186 pars: 6.242 -5.04262 -5.21557 0.1303 pars: 6.52089 -5.51629 -5.82586 0.13034 pars: 6.643 -5.72501 -6.09121 0.1303 pars: 6.67102 -5.77369 -6.15127 0.13011 pars: 6.67102 -5.77369 -6.15127 0.13011 ## pars: 0 0 0 0 pars: 0.54648 0.82539 0.09069 -0.10894 pars: 0.30812 1.67143 0.51341 -0.32964 pars: 1.08916 2.1682 0.87215 -0.45009 pars: 1.88096 2.09369 1.46235 -0.31162 pars: 2.47241 2.85115 1.71443 -0.42516 pars: 3.15645 3.04605 2.31351 -0.79287 pars: 3.89065 3.59279 2.37763 -0.39548 pars: 4.47735 3.81084 2.58775 -1.14653 pars: 5.27312 3.95301 2.06289 -1.41312 pars: 5.85559 4.01731 1.49974 -1.99574 pars: 6.30995 4.048 0.83439 -2.58729 pars: 6.44996 4.06078 0.49573 -3.10538 pars: 6.40442 4.08136 0.29685 -3.9374 pars: 6.02423 4.1386 0.30805 -5.62482 pars: 6.00549 4.15967 0.32678 -5.8157 pars: 6.00549 4.15967 0.32678 -5.8157 ## pars: 0 0 0 0 pars: 0.91251 0.35815 0.19015 -0.0538 pars: 1.87344 0.1355 0.0319 -0.00909 pars: 3.64029 -1.1061 -0.63299 0.11049 pars: 4.38113 -2.92054 -1.55952 0.75871 pars: 4.99985 -4.12154 -2.95252 1.35184 pars: 5.55308 -5.30455 -3.94934 1.95445 pars: 6.00804 -6.28558 -4.75052 2.45422 pars: 6.31171 -6.94092 -5.28404 2.78797 pars: 6.4541 -7.24824 -5.53419 2.94448 pars: 6.49022 -7.32617 -5.59769 2.98417 pars: 6.49022 -7.32617 -5.59769 2.98417 ## pars: 0 0 0 0 pars: 0.73232 0.65434 0.17965 -0.05722 pars: 1.30461 0.89603 0.96324 -0.04913 pars: 1.94311 1.66285 1.02618 -0.06742 pars: 2.77973 1.72799 1.56792 -0.11567 pars: 3.39995 2.50261 1.68781 -0.14631 pars: 4.29479 2.31298 2.09086 -0.17556 pars: 4.84557 3.12465 2.26261 -0.26684 pars: 4.72596 3.38683 2.70124 -0.77357 pars: 5.32176 3.36481 2.31615 -1.47801 pars: 5.15455 3.38303 2.33884 -1.32979 pars: 5.15455 3.38303 2.33884 -1.32979 ## pars: 0 0 0 0 pars: 0.7644 0.64078 0.03467 0.06246 pars: 0.8687 1.63405 0.06696 0.10094 pars: 1.80503 1.77448 0.38877 0.10323 pars: 2.11793 2.7124 0.25816 0.17632 pars: 3.07561 2.99928 0.23759 0.16509 pars: 3.58702 3.5571 -0.39325 -0.00619 pars: 4.41026 3.61134 -0.93693 -0.16024 pars: 4.71903 4.34753 -1.31843 -0.62625 pars: 5.34699 4.23432 -2.04151 -0.89083 pars: 5.6039 4.30787 -2.30355 -1.07173 pars: 5.73959 4.36492 -2.45449 -1.17963 pars: 5.73959 4.36492 -2.45449 -1.17963 ## pars: 0 0 0 0 pars: 0.98352 0.11977 0.13013 0.03758 pars: 1.81329 -0.31949 -0.20899 -0.02183 pars: 2.84097 -1.42868 -1.48443 -0.43637 pars: 3.40757 -2.21502 -3.18004 -0.95651 pars: 4.13514 -3.82471 -5.19371 -1.70758 pars: 4.73057 -5.14817 -6.64902 -2.30547 pars: 5.32096 -6.28625 -8.15424 -2.92225 pars: 5.81736 -7.22913 -9.4251 -3.44278 pars: 6.17599 -7.9093 -10.34364 -3.81898 pars: 6.36412 -8.26606 -10.82551 -4.01633 pars: 6.42156 -8.37501 -10.97263 -4.07659 pars: 6.42156 -8.37501 -10.97263 -4.07659 ## pars: 0 0 0 0 pars: 0.7966 0.48054 0.36664 0.00963 pars: 1.31168 0.60564 1.20312 -0.1294 pars: 1.86458 1.33354 1.60663 -0.08863 pars: 2.0894 1.88072 2.41022 -0.15401 pars: 2.14883 2.77113 2.85634 -0.08606 pars: 2.38375 2.94931 3.81161 -0.10891 pars: 2.90373 3.80144 3.8606 -0.14168 pars: 3.68755 3.3594 3.5075 -0.39771 pars: 4.85074 3.10653 3.16302 -0.75732 pars: 4.90042 3.04114 2.8549 -0.08387 pars: 4.8046 3.00765 2.85746 -0.09663 pars: 4.8046 3.00765 2.85746 -0.09663 ## pars: 0 0 0 0 pars: 0.67677 0.61437 0.36752 -0.17163 pars: 0.85314 1.15834 1.18165 -0.27253 pars: 0.08629 2.70802 2.26262 -0.4587 pars: 1.79333 3.20527 3.27069 -0.58231 pars: 2.86692 3.82528 1.85248 -1.38506 pars: 2.42102 3.37272 2.93117 -0.82932 pars: 3.10583 3.11328 3.15575 -0.93701 pars: 3.72669 2.96548 2.80378 -1.1961 pars: 3.94727 2.93395 2.86359 -1.9344 pars: 4.12143 3.19976 2.7765 -2.57397 pars: 3.93481 3.06665 2.78371 -2.85112 pars: 4.07074 3.01514 2.87331 -2.54698 pars: 4.02423 3.05972 2.83264 -2.67957 pars: 4.02423 3.05972 2.83264 -2.67957 ## pars: 0 0 0 0 pars: 0.63238 0.71216 0.2769 -0.12751 pars: 0.74422 1.38867 1.00465 -0.11396 pars: 1.05267 2.14333 1.21066 0.42725 pars: 1.65018 2.73059 1.73348 0.26986 pars: 2.55636 2.89805 1.89327 0.62377 pars: 3.11012 3.44532 2.47094 0.37851 pars: 4.08881 3.48737 2.27051 0.36401 pars: 4.59884 3.86386 3.00749 0.1295 pars: 5.15541 3.28152 2.96744 -0.46169 pars: 4.8354 3.61634 2.99047 -0.12178 pars: 4.89737 3.79963 2.87615 -0.48255 pars: 4.91899 3.66508 2.82653 -0.88208 pars: 4.85729 3.65771 2.93533 -0.97856 pars: 4.85729 3.65771 2.93533 -0.97856 ## pars: 0 0 0 0 pars: 0.75649 0.6005 0.24692 -0.07844 pars: 0.96518 1.46579 0.70136 -0.11309 pars: 0.5942 2.75053 2.25751 -0.41385 pars: 1.23436 2.14193 4.13321 -0.37201 pars: 1.66802 4.16571 4.20725 -0.26722 pars: 1.1914 4.40451 4.60528 -2.2313 pars: 0.92594 4.43879 5.43332 -1.66758 pars: 1.17387 4.47903 4.9217 -2.01678 pars: 1.4795 4.61952 4.78459 -1.87517 pars: 1.8523 4.54761 4.72518 -1.80944 pars: 2.47352 4.47778 4.46455 -1.69121 pars: 6.48555 3.83209 3.18275 -1.2984 pars: 4.2527 4.12476 3.86554 -1.49641 pars: 4.96519 3.99668 3.55376 -1.4491 pars: 5.11384 3.96473 3.39312 -1.48068 pars: 5.04341 3.97254 3.29932 -1.55415 pars: 5.04341 3.97254 3.29932 -1.55415 ## pars: 0 0 0 0 pars: 0.90005 0.40068 0.16251 -0.0544 pars: 1.85543 0.10971 0.16926 -0.1048 pars: 3.70368 -1.2962 -0.15455 -0.0545 pars: 4.39645 -2.53101 -1.81006 0.81418 pars: 4.84348 -2.76371 -4.02066 1.41356 pars: 5.15298 -3.10804 -5.18935 1.84187 pars: 5.33327 -3.31877 -5.85356 2.08868 pars: 5.38575 -3.39128 -6.03143 2.15467 pars: 5.38575 -3.39128 -6.03143 2.15467 ## pars: 0 0 0 0 pars: 0.84558 0.52245 0.10768 0.02091 pars: 1.66829 0.71671 -0.42632 0.00459 pars: 3.11993 0.15073 -1.70066 -0.14116 pars: 4.07755 -0.93893 -3.24082 -0.32636 pars: 6.25843 -4.22188 -2.22033 -0.29093 pars: 6.15609 -4.06418 -2.33591 -0.28439 pars: 6.15609 -4.06418 -2.33591 -0.28439 ## pars: 0 0 0 0 pars: 0.9611 0.26604 0.06289 -0.03957 pars: 1.86609 -0.11058 -0.11509 0.04681 pars: 3.09131 -1.6827 -0.33061 0.21894 pars: 3.614 -3.53092 -0.83359 0.54562 pars: 4.32138 -5.66685 -3.04997 1.14192 pars: 4.88802 -7.45162 -4.29973 1.63631 pars: 5.41515 -9.11647 -5.43173 2.09703 pars: 5.8019 -10.33816 -6.26116 2.4351 pars: 6.02927 -11.05637 -6.74872 2.63385 pars: 6.11225 -11.31852 -6.92668 2.70639 pars: 6.11225 -11.31852 -6.92668 2.70639 ## pars: 0 0 0 0 pars: 0.98843 0.14756 0.03065 0.01685 pars: 1.77292 -0.44398 -0.13908 -0.05966 pars: 2.50147 -1.12111 -0.22508 -0.11726 pars: 3.127 -1.83569 -0.52645 -0.20251 pars: 3.72213 -2.31963 -1.16485 -0.26629 pars: 4.22285 -2.56934 -1.99352 -0.2811 pars: 4.594 -2.79954 -2.89268 -0.25328 pars: 4.83068 -3.00456 -3.3367 -0.22808 pars: 4.92451 -3.12449 -3.52755 -0.21309 pars: 4.92451 -3.12449 -3.52755 -0.21309 ## pars: 0 0 0 0 pars: 0.9318 0.36272 0.0106 0.00903 pars: 1.85195 -0.02205 -0.05684 -0.01796 pars: 3.57323 -1.80437 -0.09025 -0.05145 pars: 3.96954 -4.15876 -0.74088 -0.18637 pars: 4.62524 -7.93451 -2.83186 -0.44306 pars: 5.09922 -10.65996 -4.32554 -0.62832 pars: 5.45998 -12.73839 -5.194 -0.76969 pars: 5.66271 -13.90644 -5.67389 -0.84913 pars: 5.73024 -14.29552 -5.83403 -0.8756 pars: 5.73024 -14.29552 -5.83403 -0.8756 ## pars: 0 0 0 0 pars: 0.98943 0.13398 0.04859 -0.02665 pars: 1.78328 -0.42204 -0.16834 0.08992 pars: 2.52294 -1.06394 -0.34071 0.19552 pars: 3.16639 -1.70008 -0.73534 0.35544 pars: 3.79379 -2.13491 -1.36811 0.48543 pars: 4.34871 -2.55659 -2.0794 0.57653 pars: 4.79706 -2.99081 -2.85791 0.64256 pars: 5.09024 -3.47729 -3.68039 0.67276 pars: 5.26755 -3.89031 -4.15945 0.66483 pars: 5.31753 -4.08607 -4.34615 0.65336 pars: 5.31753 -4.08607 -4.34615 0.65336 ## pars: 0 0 0 0 pars: 0.92419 0.16851 0.34189 -0.02445 pars: 1.85319 -0.20113 0.32406 -0.02226 pars: 2.7998 -0.44053 0.1092 -0.00112 pars: 3.62836 -0.44982 -0.44959 0.03293 pars: 4.26128 -0.38186 -1.22032 0.06079 pars: 4.81776 -0.58749 -2.02361 0.11323 pars: 5.26356 -1.31385 -2.54384 0.16838 pars: 5.5534 -2.23634 -2.79558 0.20857 pars: 5.73009 -2.80025 -2.9732 0.23374 pars: 5.77952 -2.99586 -3.04526 0.23981 pars: 5.77952 -2.99586 -3.04526 0.23981 ## pars: 0 0 0 0 pars: 0.76283 0.43915 0.4652 -0.09387 pars: 0.98252 1.16052 1.11705 -0.01344 pars: 0.42638 2.21807 2.61994 -0.63687 pars: 2.37981 2.66311 2.86671 -0.62138 pars: 2.61771 3.8536 1.80696 -1.77807 pars: 2.70221 2.83946 2.82327 -0.71952 pars: 3.44106 2.97426 2.97205 -0.72684 pars: 3.90132 2.86875 2.99927 -1.32895 pars: 4.48228 3.34564 2.9941 -1.18303 pars: 4.65773 2.96894 3.48663 -0.76955 pars: 4.42775 3.11577 3.05259 -1.18477 pars: 4.27848 3.01101 2.9363 -1.2964 pars: 4.42775 3.11577 3.05259 -1.18477 ## pars: 0 0 0 0 pars: 0.83444 0.49653 0.23628 -0.03664 pars: 1.73304 0.69743 -0.11264 0.13774 pars: 3.58235 0.29844 -1.33126 0.26497 pars: 4.88901 -1.48498 -0.91534 0.40426 pars: 5.30978 -3.10242 0.54263 0.00239 pars: 5.50479 -3.80171 0.96566 -0.24328 pars: 5.57757 -3.9793 0.73321 -0.3665 pars: 5.57757 -3.9793 0.73321 -0.3665 ## pars: 0 0 0 0 pars: 0.89982 0.37735 0.21841 -0.01532 pars: 1.86548 0.25566 -0.01108 -0.02031 pars: 3.6009 -0.82049 -0.84141 -0.01924 pars: 4.27059 -2.89899 -0.85382 0.28144 pars: 4.69866 -3.94314 -1.57577 0.52691 pars: 5.00468 -4.37842 -2.81491 0.69535 pars: 5.11762 -4.48746 -3.39727 0.75073 pars: 5.14074 -4.47908 -3.59177 0.7581 pars: 5.14074 -4.47908 -3.59177 0.7581 ## pars: 0 0 0 0 pars: 0.75871 0.58464 0.26342 -0.11477 pars: 1.35275 0.72453 1.05346 -0.05658 pars: 1.84792 1.54106 1.32772 -0.16996 pars: 2.19686 1.90038 2.16562 -0.3869 pars: 2.5078 2.82471 2.38317 -0.42717 pars: 3.02821 2.92001 3.15955 -0.76968 pars: 3.63684 3.67321 3.01551 -0.97347 pars: 4.07695 3.18585 2.66913 -1.64339 pars: 3.53796 3.31494 2.91892 -2.43738 pars: 3.49304 3.34667 3.25295 -2.13352 pars: 3.72257 3.37189 3.0522 -2.09232 pars: 3.65039 3.36911 3.08977 -2.28633 pars: 3.65039 3.36911 3.08977 -2.28633 ## pars: 0 0 0 0 pars: 0.82171 0.33214 0.45325 0.09507 pars: 1.22315 1.05754 0.95946 -0.14239 pars: 1.88045 1.33169 1.65486 -0.04638 pars: 2.0769 1.9046 2.45057 -0.04921 pars: 2.0535 2.34525 3.30441 -0.32534 pars: 2.79942 2.86215 3.7124 -0.2255 pars: 3.75485 2.70056 3.60648 -0.44868 pars: 4.4549 3.17008 4.11616 -0.27629 pars: 5.3223 3.1483 3.66531 -0.06683 pars: 5.49825 2.50044 3.85218 0.65038 pars: 5.23429 2.98012 3.81647 0.09306 pars: 5.12443 3.12893 3.71464 0.2927 pars: 5.10594 3.04773 3.77788 0.56383 pars: 5.25042 3.00204 3.70254 0.80007 pars: 5.21776 3.02819 3.73369 0.99976 pars: 5.21776 3.02819 3.73369 0.99976 ## pars: 0 0 0 0 pars: 0.75219 0.47025 0.45385 -0.08426 pars: 0.99588 1.1725 1.06475 0.18825 pars: 1.5063 1.35395 1.8204 -0.1799 pars: 2.20771 1.96854 2.18123 -0.1909 pars: 3.01126 1.74784 2.72713 -0.10377 pars: 3.64016 2.49304 2.94482 -0.14579 pars: 4.18651 2.52673 2.60296 -0.6932 pars: 3.94875 3.04505 3.3764 -0.97 pars: 4.17249 2.92057 2.97237 -0.727 pars: 4.20097 2.91202 2.91181 -0.67921 pars: 4.20097 2.91202 2.91181 -0.67921 ## pars: 0 0 0 0 pars: 0.93626 0.33883 0.09249 0.00755 pars: 1.87403 0.02281 -0.04641 -0.03037 pars: 3.42125 -1.50609 -0.34004 -0.05691 pars: 3.9588 -3.25897 -1.54245 0.04813 pars: 4.12832 -5.16749 -2.85299 0.16253 pars: 4.69529 -7.62424 -6.36592 0.3634 pars: 5.15906 -9.66201 -9.14968 0.52821 pars: 5.47967 -11.0708 -11.07414 0.64215 pars: 5.63586 -11.7571 -12.01164 0.69766 pars: 5.67856 -11.94471 -12.26792 0.71283 pars: 5.67856 -11.94471 -12.26792 0.71283 ## pars: 0 0 0 0 pars: 0.8937 0.15819 0.41901 0.02655 pars: 1.81559 -0.2251 0.40174 0.08047 pars: 3.49538 -1.02699 -0.66522 0.03153 pars: 4.33954 -0.46045 -2.54607 -0.15377 pars: 4.72911 -0.79165 -3.36821 -0.24628 pars: 5.04856 -1.84339 -3.90676 -0.3401 pars: 5.22496 -3.20279 -4.06832 -0.39695 pars: 5.24564 -3.82212 -4.01379 -0.39865 pars: 5.24564 -3.82212 -4.01379 -0.39865 ## pars: 0 0 0 0 pars: 0.89418 0.35175 0.27345 0.04403 pars: 1.86389 0.11442 0.27665 0.10177 pars: 3.63707 -1.06907 -0.26055 0.071 pars: 4.46089 -1.60768 -2.14347 -0.49483 pars: 5.02581 -1.41206 -4.21224 -0.85291 pars: 5.45637 -1.69756 -5.38424 -1.10647 pars: 5.75964 -2.04636 -6.08584 -1.2661 pars: 5.89356 -2.27169 -6.33615 -1.3272 pars: 5.92823 -2.39411 -6.34748 -1.33455 pars: 5.92823 -2.39411 -6.34748 -1.33455 ## pars: 0 0 0 0 pars: 0.8103 0.534 0.2368 0.04681 pars: 1.19548 1.1562 0.78822 -0.35373 pars: 1.6731 1.87291 1.2382 -0.11768 pars: 1.91153 2.5252 1.95756 -0.13138 pars: 1.92978 3.27559 2.60519 -0.00031 pars: 2.20847 3.3692 3.55892 -0.06331 pars: 2.5692 4.26492 3.81098 0.00012 pars: 3.40682 3.7643 3.93039 0.18323 pars: 4.24237 3.73883 3.41825 0.38052 pars: 6.29369 3.25282 2.41814 0.87557 pars: 6.26363 3.34927 2.19226 2.7515 pars: 5.08546 3.59838 2.86815 1.35957 pars: 4.86935 3.62202 2.89905 1.44083 pars: 4.86935 3.62202 2.89905 1.44083 ## pars: 0 0 0 0 pars: 0.88248 0.44879 0.12647 0.06179 pars: 1.78132 0.20371 0.42028 0.27559 pars: 3.62286 -1.08642 0.37173 0.3129 pars: 4.68621 -2.8485 -0.26522 -0.33369 pars: 5.04388 -2.71959 -2.45559 -0.67599 pars: 5.58285 -2.62515 -5.42096 -1.25068 pars: 5.91056 -2.59298 -7.15194 -1.60033 pars: 6.1047 -2.57994 -8.16815 -1.80072 pars: 6.16337 -2.58178 -8.46639 -1.85475 pars: 6.16337 -2.58178 -8.46639 -1.85475 ## pars: 0 0 0 0 pars: 0.97598 0.16863 0.12623 -0.05563 pars: 1.83393 -0.17049 -0.2393 0.0681 pars: 2.9431 -1.517 -1.20408 0.48292 pars: 3.4736 -3.27552 -1.92571 0.98457 pars: 4.16026 -5.24459 -3.61573 1.69704 pars: 4.66916 -6.53312 -5.00192 2.20349 pars: 5.1038 -7.71275 -5.97888 2.66463 pars: 5.39385 -8.50501 -6.61752 2.97431 pars: 5.52388 -8.86026 -6.90359 3.11317 pars: 5.55451 -8.94373 -6.97153 3.14581 pars: 5.55451 -8.94373 -6.97153 3.14581 ## pars: 0 0 0 0 pars: 0.99992 0.009 0.00866 0.00308 pars: 1.54841 -0.58103 -0.58169 -0.04693 pars: 2.12959 -2.05144 -2.03958 -0.16341 pars: 2.82213 -4.5499 -4.54294 -0.36453 pars: 3.049 -5.13717 -5.13089 -0.4237 pars: 3.31192 -5.80089 -5.79397 -0.4919 pars: 3.397 -6.01543 -6.00828 -0.51395 pars: 3.397 -6.01543 -6.00828 -0.51395 ## pars: 0 0 0 0 pars: 0.99805 0.04145 0.04147 0.02128 pars: 1.65723 -0.4643 -0.46483 -0.20971 pars: 2.36288 -1.74932 -1.75267 -0.74293 pars: 2.94267 -3.03641 -3.10406 -1.26548 pars: 3.54246 -4.03076 -4.12461 -1.78771 pars: 4.07495 -4.85461 -4.96605 -2.26105 pars: 4.50075 -5.50848 -5.63443 -2.64045 pars: 4.76753 -5.91781 -6.05289 -2.87821 pars: 4.87986 -6.09018 -6.22911 -2.97833 pars: 4.87986 -6.09018 -6.22911 -2.97833 ## pars: 0 0 0 0 pars: 0.99945 -0.00314 -0.03276 -0.00492 pars: 1.2765 -0.72239 -0.66973 0.00823 pars: 1.9721 -3.67709 -3.27392 0.07254 pars: 2.12097 -4.58187 -4.37578 0.08438 pars: 2.07198 -4.56749 -4.44432 0.07676 pars: 2.07198 -4.56749 -4.44432 0.07676 ## pars: 0 0 0 0 pars: 0.96695 0.16818 0.1718 -0.08489 pars: 1.88249 -0.09599 -0.09526 0.05891 pars: 2.71049 -0.46882 -0.47903 0.22669 pars: 3.365 -0.97022 -0.99422 0.46076 pars: 4.01931 -1.49216 -1.50538 0.65612 pars: 4.61963 -2.06593 -2.04041 0.81151 pars: 5.16137 -2.49842 -2.46478 0.9534 pars: 5.58545 -2.80954 -2.77299 1.06976 pars: 5.85626 -3.00712 -2.9692 1.1441 pars: 5.97164 -3.09483 -3.05673 1.17444 pars: 5.97164 -3.09483 -3.05673 1.17444 ## pars: 0 0 0 0 pars: 0.99839 0.02673 0.04668 -0.0179 pars: 1.65131 -0.34965 -0.5717 0.20491 pars: 2.36964 -1.24566 -2.17069 0.72316 pars: 2.97852 -2.63473 -3.42323 1.24764 pars: 3.61363 -3.96629 -4.46136 1.75915 pars: 4.16185 -4.86702 -5.35683 2.22354 pars: 4.62773 -5.61787 -6.11594 2.6196 pars: 4.93998 -6.12018 -6.62459 2.88514 pars: 5.0909 -6.36292 -6.87042 3.01348 pars: 5.13081 -6.42716 -6.93545 3.04742 pars: 5.13081 -6.42716 -6.93545 3.04742 ## pars: 0 0 0 0 pars: 0.68076 0.69234 0.23923 -0.00087 pars: 0.76773 1.44766 0.88795 0.03204 pars: 0.75276 2.09461 2.8996 -3e-04 pars: 0.73704 4.1879 2.69805 -0.20965 pars: 2.25117 3.69031 4.08346 -0.29336 pars: 3.6239 3.11927 2.67503 -0.81529 pars: 3.95896 3.06097 2.43918 1.2572 pars: 3.75659 3.10449 2.58824 -0.00629 pars: 3.64663 3.16945 2.73952 -0.10181 pars: 3.6391 3.18257 2.74277 -0.0897 pars: 3.6391 3.18257 2.74277 -0.0897 ## pars: 0 0 0 0 pars: 0.95151 0.06272 0.30104 -0.00876 pars: 1.78724 -0.37409 -0.02025 -0.09547 pars: 3.13825 -0.75566 -1.6744 -0.04466 pars: 3.7512 -1.40207 -3.6478 0.10277 pars: 3.879 -2.42621 -3.96409 0.14902 pars: 3.95429 -3.62756 -4.09719 0.17717 pars: 3.93586 -3.77219 -4.03142 0.16903 pars: 3.93586 -3.77219 -4.03142 0.16903 ## pars: 0 0 0 0 pars: 0.87113 0.40893 0.26696 -0.05148 pars: 1.85338 0.33074 0.13802 0.06006 pars: 3.77168 -0.59595 -0.59702 0.19493 pars: 4.71958 -2.55498 -1.13673 0.45858 pars: 5.1317 -3.26754 -2.0383 0.56885 pars: 5.51393 -3.5607 -3.52779 0.63319 pars: 5.69199 -3.78864 -4.06171 0.66262 pars: 5.75309 -3.8736 -4.23635 0.66916 pars: 5.75309 -3.8736 -4.23635 0.66916 ## pars: 0 0 0 0 pars: 0.9553 0.28617 0.07252 -0.01602 pars: 1.82735 -0.03714 -0.28335 0.07531 pars: 3.29731 -1.65279 -0.7452 0.16633 pars: 3.8388 -3.81926 -0.81221 0.12859 pars: 4.37774 -5.84057 -1.59741 0.12944 pars: 4.90478 -7.82473 -2.30562 0.14721 pars: 5.27208 -9.22002 -2.71153 0.16206 pars: 5.48512 -10.029 -2.94898 0.17069 pars: 5.55843 -10.30566 -3.04281 0.17349 pars: 5.55843 -10.30566 -3.04281 0.17349 ## pars: 0 0 0 0 pars: 0.64268 0.61011 0.41284 -0.21045 pars: 0.88948 0.98544 1.30627 -0.21013 pars: 1.50849 1.6876 1.61978 -0.36979 pars: 2.3716 1.74841 2.11389 -0.45473 pars: 2.99628 2.47478 2.37449 -0.57417 pars: 3.85743 2.4334 2.82422 -0.80748 pars: 4.42977 3.23698 2.96216 -0.89504 pars: 4.70862 3.26128 3.09803 -1.8454 pars: 4.93625 3.37896 3.16541 -2.39981 pars: 4.63827 3.69785 3.69299 -3.12863 pars: 4.91769 3.51036 3.33794 -2.59558 pars: 5.01509 3.57308 3.25406 -2.85101 pars: 4.99266 3.5591 3.30619 -3.13787 pars: 5.05971 3.53294 3.33177 -3.42048 pars: 5.05971 3.53294 3.33177 -3.42048 ## pars: 0 0 0 0 pars: 0.84122 0.45256 0.29367 0.03609 pars: 1.79068 0.24943 0.52363 -0.03013 pars: 3.66079 -0.68876 0.1754 0.01621 pars: 4.89501 -2.07146 -0.72811 -0.48323 pars: 5.33337 -1.54262 -2.66746 -0.71877 pars: 5.69942 -1.31243 -3.98824 -0.91128 pars: 5.90283 -1.27059 -4.61442 -1.00082 pars: 5.97375 -1.32973 -4.74065 -1.0168 pars: 5.97375 -1.32973 -4.74065 -1.0168 ## pars: 0 0 0 0 pars: 0.81983 0.53446 0.20404 -0.02466 pars: 1.09727 1.31128 0.76391 0.05358 pars: 0.91766 2.61239 2.30168 -0.46624 pars: 1.11285 2.82297 3.96772 0.75932 pars: 2.5081 4.30315 4.22312 0.36285 pars: 4.04259 3.04291 3.8071 -0.1313 pars: 6.47648 0.75229 3.12369 -0.91877 pars: 4.80869 2.87962 2.06477 0.64311 pars: 4.41647 3.32995 2.50078 0.63254 pars: 2.89081 4.08673 6.73992 -2.58263 pars: 4.44985 3.50498 2.94418 0.29519 pars: 4.98567 3.67329 2.78124 0.28169 pars: 4.85372 3.59896 2.88995 -0.22392 pars: 4.83709 3.44705 2.71088 -0.7594 pars: 4.83874 3.56474 2.82348 -0.72816 pars: 4.83874 3.56474 2.82348 -0.72816 ## pars: 0 0 0 0 pars: 0.94574 0.31462 0.08036 -0.01125 pars: 1.84605 -0.0182 -0.15019 0.1485 pars: 3.31536 -1.60409 -0.51718 0.20926 pars: 3.81345 -3.6114 -1.0805 -0.25718 pars: 4.30722 -5.68281 -1.6617 -0.73858 pars: 4.65023 -6.87926 -3.03772 -1.11203 pars: 4.96532 -8.00101 -4.17918 -1.45385 pars: 5.09062 -8.4625 -4.55066 -1.58921 pars: 5.13582 -8.62686 -4.69591 -1.6381 pars: 5.13582 -8.62686 -4.69591 -1.6381 ## pars: 0 0 0 0 pars: 0.9274 0.31584 0.18653 -0.07333 pars: 1.88944 0.1326 0.02479 0.04807 pars: 3.39505 -1.12079 -0.60237 0.30123 pars: 3.92038 -2.62949 -1.91694 0.1786 pars: 4.29938 -4.53796 -3.58035 0.02329 pars: 4.80391 -6.17888 -5.69122 -0.15066 pars: 5.28499 -7.86479 -7.4429 -0.28403 pars: 5.64652 -9.13378 -8.75458 -0.38348 pars: 5.84 -9.81291 -9.45642 -0.43669 pars: 5.90284 -10.03351 -9.68441 -0.45397 pars: 5.90284 -10.03351 -9.68441 -0.45397 ## pars: 0 0 0 0 pars: 0.97056 0.12508 0.20581 0.00302 pars: 1.84999 -0.28728 -0.03028 0.03174 pars: 2.70009 -0.53675 -0.49364 0.01169 pars: 3.3705 -0.60263 -1.23203 -0.01957 pars: 3.99262 -0.78881 -1.99172 -0.05386 pars: 4.54862 -1.39695 -2.55653 -0.09877 pars: 5.02662 -2.13646 -2.93559 -0.14698 pars: 5.34485 -2.54003 -3.19254 -0.17786 pars: 5.50797 -2.76205 -3.32826 -0.19358 pars: 5.55372 -2.84757 -3.37194 -0.19832 pars: 5.55372 -2.84757 -3.37194 -0.19832 ## pars: 0 0 0 0 pars: 0.97427 0.16191 0.15651 0.00882 pars: 1.85952 -0.09343 -0.23212 0.01918 pars: 2.70133 -0.47761 -0.61006 -0.01103 pars: 3.38249 -1.14882 -0.89458 -0.07853 pars: 4.03259 -1.87034 -1.12318 -0.14568 pars: 4.63779 -2.41022 -1.70304 -0.22338 pars: 5.1742 -2.76953 -2.45741 -0.29837 pars: 5.58465 -3.05943 -2.90283 -0.35244 pars: 5.83962 -3.24417 -3.16684 -0.38543 pars: 5.94266 -3.32422 -3.27917 -0.39858 pars: 5.94266 -3.32422 -3.27917 -0.39858 ## pars: 0 0 0 0 pars: 0.94662 0.11082 0.2997 -0.04264 pars: 1.88063 -0.04721 -0.01528 0.01603 pars: 3.27201 -0.4527 -1.49238 0.18952 pars: 3.7989 -1.70541 -3.02174 0.54515 pars: 3.91662 -3.18824 -4.83062 0.96612 pars: 4.51757 -6.48466 -7.61036 1.79749 pars: 5.04261 -9.25225 -10.07899 2.5437 pars: 5.45045 -11.40194 -11.9966 3.12335 pars: 5.69541 -12.69307 -13.14835 3.4715 pars: 5.79135 -13.19877 -13.59946 3.60786 pars: 5.79135 -13.19877 -13.59946 3.60786 ## pars: 0 0 0 0 pars: 0.99143 0.1231 0.0387 -0.02057 pars: 1.68656 -0.5169 -0.27645 0.06809 pars: 2.37013 -2.34919 -0.8926 0.31304 pars: 2.87423 -3.85024 -2.19239 0.57287 pars: 3.18581 -4.57977 -3.41913 0.72788 pars: 3.3193 -4.91096 -3.81909 0.79729 pars: 3.38427 -5.07088 -4.02551 0.83052 pars: 3.38427 -5.07088 -4.02551 0.83052 ## pars: 0 0 0 0 pars: 0.87335 0.4869 0.01228 0.00602 pars: 1.14918 1.44168 -0.09857 0.01125 pars: 1.31218 5.43482 -0.2662 0.02254 pars: 4.48223 4.12077 1.77889 -0.18166 pars: 4.39592 4.18502 0.46112 -0.12946 pars: 4.11208 4.3866 -2.53073 -0.18861 pars: 3.87052 4.57944 -6.29669 -0.34082 pars: 3.96082 4.52884 -5.86355 -0.33067 pars: 4.03323 4.49371 -5.60981 -0.3318 pars: 4.03323 4.49371 -5.60981 -0.3318 ## pars: 0 0 0 0 pars: 0.64846 0.13688 0.72208 0.1984 pars: 0.26042 0.31007 1.45733 0.72645 pars: 0.18347 1.07897 1.80496 1.2575 pars: -0.14433 1.20827 2.37718 1.99804 pars: -0.37271 1.3357 2.49861 2.95556 pars: -0.72004 1.52949 2.68329 4.41182 pars: -1.5114 2.33996 2.71893 7 pars: -1.03536 1.55398 2.57864 6.25988 pars: -1.1431 1.64253 2.46659 6.60504 pars: -1.85296 2.03199 2.58409 7 pars: -1.5946 1.73479 2.46591 7 pars: -1.9009 1.73359 2.46716 7 pars: -3.11977 1.64565 2.37898 7 pars: -3.58418 1.79174 2.5752 7 pars: -3.59627 1.7806 2.53805 7 pars: -3.59627 1.7806 2.53805 7 ## pars: 0 0 0 0 pars: 0.98701 0.09817 0.12697 -0.00747 pars: 1.8161 -0.26894 -0.29432 0.01104 pars: 2.57469 -0.63001 -0.83545 0.04775 pars: 3.22461 -1.05193 -1.46534 0.10103 pars: 3.86315 -1.60787 -1.99515 0.15101 pars: 4.43826 -2.29958 -2.43054 0.1859 pars: 4.9251 -2.82941 -2.79776 0.21052 pars: 5.26907 -3.15617 -3.05171 0.2282 pars: 5.44976 -3.331 -3.19542 0.23718 pars: 5.50503 -3.39401 -3.25312 0.2394 pars: 5.50503 -3.39401 -3.25312 0.2394 ## pars: 0 0 0 0 pars: 0.9372 0.26403 0.22728 0.01693 pars: 1.88864 -0.01951 0.108 0.02905 pars: 3.35941 -1.20588 -0.6935 -0.02669 pars: 4.06557 -1.748 -2.5282 -0.26647 pars: 4.59756 -1.07746 -4.39171 -0.37068 pars: 5.09339 -0.90424 -5.70912 -0.46717 pars: 5.43141 -1.33593 -6.20881 -0.50229 pars: 5.61389 -2.12404 -6.0918 -0.48991 pars: 5.6767 -2.90711 -5.69598 -0.4568 pars: 5.6767 -2.90711 -5.69598 -0.4568 ## pars: 0 0 0 0 pars: 0.93058 0.33351 0.15092 -0.00304 pars: 1.88018 0.05627 0.01306 0.04589 pars: 3.48293 -1.35209 -0.4979 0.07857 pars: 4.0639 -2.84303 -1.96828 -0.22471 pars: 4.322 -4.49085 -3.59496 -0.56028 pars: 4.8792 -6.20106 -6.37452 -1.03051 pars: 5.38464 -7.86129 -8.662 -1.4646 pars: 5.77848 -9.155 -10.44393 -1.80294 pars: 6.00294 -9.89235 -11.45955 -1.99578 pars: 6.08452 -10.16031 -11.82863 -2.06586 pars: 6.08452 -10.16031 -11.82863 -2.06586 ## pars: 0 0 0 0 pars: 0.90099 0.39897 0.16914 -0.02062 pars: 1.85945 0.27542 -0.06246 0.09098 pars: 3.61301 -0.88866 -0.71739 0.19669 pars: 4.42165 -2.92587 -0.56007 -0.00651 pars: 4.92723 -4.14501 -1.14702 -0.27744 pars: 5.38411 -4.87739 -2.8646 -0.56395 pars: 5.65492 -5.27797 -3.99204 -0.73688 pars: 5.77005 -5.47264 -4.38894 -0.80776 pars: 5.79868 -5.5171 -4.50157 -0.82594 pars: 5.79868 -5.5171 -4.50157 -0.82594 ## pars: 0 0 0 0 pars: 0.83377 0.49682 0.23237 0.06318 pars: 1.48269 0.62005 0.96323 -0.10878 pars: 2.35194 1.0615 0.82311 0.06413 pars: 3.29991 0.93583 1.10369 -0.01847 pars: 4.29225 0.82228 1.14474 0.0077 pars: 5.21733 0.46238 1.03877 -0.05128 pars: 5.87548 -0.0843 0.55605 -0.23824 pars: 6.3177 -0.4189 -0.25042 -0.44342 pars: 6.61401 -0.75325 -1.12626 -0.62594 pars: 6.96022 -1.3562 -2.50682 -0.90144 pars: 7.04631 -1.8314 -2.9581 -0.96268 pars: 7.10197 -2.86839 -3.38248 -0.93003 pars: 7.04969 -3.53459 -3.50317 -0.82597 pars: 6.89653 -4.3283 -3.61639 -0.62563 pars: 6.84679 -4.70277 -3.80335 -0.54274 pars: 6.84679 -4.70277 -3.80335 -0.54274 ## pars: 0 0 0 0 pars: 0.85877 0.40178 0.31587 -0.03625 pars: 1.84745 0.30085 0.23497 0.03977 pars: 3.80187 -0.57615 -0.50234 0.09541 pars: 4.78784 -2.28204 -1.54382 0.50618 pars: 5.06107 -2.55871 -2.16457 0.65677 pars: 5.28839 -2.82558 -2.63136 0.79193 pars: 5.35354 -2.89474 -2.7757 0.82823 pars: 5.35354 -2.89474 -2.7757 0.82823 ## pars: 0 0 0 0 pars: 0.98575 0.11203 0.12478 0.01352 pars: 1.82017 -0.25868 -0.28135 -0.02344 pars: 2.57678 -0.68402 -0.77455 -0.08163 pars: 3.20876 -1.21112 -1.33703 -0.16153 pars: 3.81356 -1.79994 -1.86822 -0.23464 pars: 4.32916 -2.43903 -2.43624 -0.28997 pars: 4.71825 -3.11436 -3.06166 -0.32733 pars: 4.96044 -3.63362 -3.58816 -0.33664 pars: 5.04954 -3.87486 -3.83852 -0.33426 pars: 5.04954 -3.87486 -3.83852 -0.33426 ## pars: 0 0 0 0 pars: 0.99169 0.11744 0.05115 -0.01166 pars: 1.74493 -0.46961 -0.24059 0.04217 pars: 2.43234 -1.15487 -0.47274 0.10525 pars: 3.01499 -1.80651 -0.95204 0.18371 pars: 3.52239 -2.21209 -1.70974 0.2466 pars: 3.88977 -2.43945 -2.61033 0.29411 pars: 4.12689 -2.67637 -3.1833 0.32779 pars: 4.21228 -2.82843 -3.40616 0.33945 pars: 4.21228 -2.82843 -3.40616 0.33945 ## pars: 0 0 0 0 pars: 0.97919 0.13806 0.1445 -0.0352 pars: 1.6984 -0.34317 -0.35103 0.03969 pars: 2.3253 -1.6533 -1.71985 0.29698 pars: 2.69879 -2.6839 -2.73675 0.43806 pars: 2.71614 -2.79907 -2.83163 0.41251 pars: 2.71614 -2.79907 -2.83163 0.41251 ## pars: 0 0 0 0 pars: 0.97725 0.20712 0.01921 -0.04136 pars: 1.6526 -0.44852 -0.29792 0.07469 pars: 2.43159 -2.51894 -0.9326 0.32501 pars: 2.61005 -2.99206 -1.98554 0.36592 pars: 2.67894 -3.15472 -3.29956 0.33629 pars: 2.63346 -3.06543 -3.47247 0.28807 pars: 2.63346 -3.06543 -3.47247 0.28807 ## pars: 0 0 0 0 pars: 0.97202 0.15575 0.16675 -0.05574 pars: 1.87609 -0.13433 -0.13086 0.04399 pars: 2.69351 -0.51022 -0.54656 0.17711 pars: 3.3501 -0.99302 -1.09243 0.37161 pars: 3.99365 -1.51408 -1.61674 0.5702 pars: 4.57793 -2.12181 -2.12202 0.7545 pars: 5.07878 -2.57063 -2.52242 0.92011 pars: 5.44325 -2.87327 -2.79951 1.04392 pars: 5.64398 -3.04142 -2.95562 1.11139 pars: 5.71072 -3.10233 -3.01407 1.13233 pars: 5.71072 -3.10233 -3.01407 1.13233 ## pars: 0 0 0 0 pars: 0.97178 0.20528 0.114 -0.02228 pars: 1.87433 -0.13898 -0.14122 0.01966 pars: 2.69612 -0.66263 -0.36024 0.0696 pars: 3.35955 -1.35004 -0.64652 0.14281 pars: 4.00958 -1.87401 -1.18964 0.23186 pars: 4.60676 -2.0855 -1.96049 0.29845 pars: 5.12748 -2.33721 -2.66448 0.36014 pars: 5.5196 -2.55646 -3.08592 0.40598 pars: 5.75 -2.69905 -3.32465 0.43214 pars: 5.83557 -2.76777 -3.41431 0.44081 pars: 5.83557 -2.76777 -3.41431 0.44081 ## pars: 0 0 0 0 pars: 0.86478 0.36362 0.34013 -0.06519 pars: 1.8495 0.21875 0.36788 0.02731 pars: 3.84184 -0.85077 -0.15536 0.2245 pars: 4.55599 -0.65866 -2.36316 0.1563 pars: 5.15941 -0.24935 -4.5629 -0.07917 pars: 5.6476 -0.33077 -6.07566 -0.31092 pars: 6.01823 -0.66031 -7.05631 -0.53606 pars: 6.21859 -0.96638 -7.50631 -0.68179 pars: 6.28543 -1.15443 -7.60259 -0.74659 pars: 6.28543 -1.15443 -7.60259 -0.74659 ## pars: 0 0 0 0 pars: 0.7911 0.60604 0.08238 0.00978 pars: 0.98364 1.56667 -0.11601 0.0375 pars: 1.22696 2.42702 0.21426 -0.26499 pars: 2.10306 2.66787 0.63051 -0.29925 pars: 2.4557 3.59345 0.52692 -0.2086 pars: 3.39328 3.90795 0.67529 -0.21335 pars: 4.11381 3.91065 -0.01792 -0.2308 pars: 4.7505 4.01546 -2.01854 -0.24358 pars: 5.17154 3.89774 -3.34917 -0.27284 pars: 5.21278 4.13077 -3.66227 -0.2598 pars: 5.25031 4.02037 -3.69923 -0.26738 pars: 5.25031 4.02037 -3.69923 -0.26738 ## pars: 0 0 0 0 pars: 0.86792 0.46905 0.15913 0.03717 pars: 1.81729 0.40445 -0.11218 -0.10746 pars: 3.97458 -0.7287 -0.74446 -0.2603 pars: 4.81296 -3.02741 -0.93685 -0.84092 pars: 5.30335 -4.13252 -1.91311 -1.32038 pars: 5.75184 -4.8678 -3.76749 -1.72644 pars: 5.98633 -5.27581 -4.65648 -1.92759 pars: 6.08769 -5.46285 -5.00374 -2.01379 pars: 6.08769 -5.46285 -5.00374 -2.01379 ## pars: 0 0 0 0 pars: 0.86128 0.49404 0.11692 0.02107 pars: 1.76125 0.39516 0.03098 0.43689 pars: 3.52594 -0.64685 -0.52761 0.54404 pars: 4.79128 -2.35202 -0.43752 0.4623 pars: 5.0723 -2.60952 -1.3246 0.30591 pars: 5.39576 -2.86228 -2.5769 0.06704 pars: 5.49254 -2.95078 -2.8835 -0.01086 pars: 5.52082 -2.97297 -2.99761 -0.03834 pars: 5.52082 -2.97297 -2.99761 -0.03834 ## pars: 0 0 0 0 pars: 0.72169 0.67251 0.12283 -0.10862 pars: 0.7507 1.64909 0.30802 -0.21428 pars: 1.53499 2.09149 0.72117 -0.35019 pars: 2.29286 2.0554 1.32892 -0.11572 pars: 2.947 2.76024 1.55835 -0.26622 pars: 3.79712 2.57352 1.77081 -0.71041 pars: 4.38335 3.36442 1.89129 -0.838 pars: 4.52708 3.26621 1.57721 -1.7713 pars: 4.30889 3.32454 1.98042 -2.6581 pars: 3.72026 3.4819 3.06814 -5.05039 pars: 3.73321 3.43519 3.8816 -6.12824 pars: 4.37406 3.36683 2.20635 -2.97891 pars: 4.38784 3.42794 2.34095 -3.35034 pars: 4.1987 3.39542 2.53852 -4.00314 pars: 4.29708 3.45552 2.49582 -4.42643 pars: 4.42581 3.55495 2.41181 -5.50227 pars: 4.39892 3.55454 2.41503 -6.59325 pars: 4.36804 3.49026 2.39725 -7 pars: 4.36533 3.47533 2.41601 -7 pars: 4.36865 3.48752 2.39174 -7 pars: 4.36865 3.48752 2.39174 -7 ## pars: 0 0 0 0 pars: 0.72217 0.69089 0.03096 -0.01376 pars: 0.83777 1.53907 -0.47815 -0.1034 pars: 1.67085 2.09169 -0.46461 -0.12317 pars: 2.57622 1.94929 -0.84209 0.00923 pars: 3.34189 2.59251 -0.84338 0.00456 pars: 4.29126 2.35086 -1.04077 -0.0323 pars: 4.95358 3.10006 -1.04685 -0.03365 pars: 5.06633 3.52206 -1.36125 -0.04474 pars: 5.45842 3.71324 -1.75517 -0.08376 pars: 5.46119 3.91789 -1.93842 -0.09644 pars: 5.46367 3.98384 -2.0501 -0.10891 pars: 5.46367 3.98384 -2.0501 -0.10891 ## pars: 0 0 0 0 pars: 0.76156 0.60806 0.22277 -0.02581 pars: 0.9075 1.47103 0.70553 0.0046 pars: 1.26858 2.05853 2.6453 -0.06988 pars: 1.20477 4.11162 2.61536 0.0838 pars: 2.8488 4.26224 3.76279 -0.36527 pars: 4.43925 3.45791 2.7984 -0.73573 pars: 5.08195 3.243 2.7286 1.2084 pars: 4.76876 3.51122 2.89705 -0.0611 pars: 4.70974 4.03859 3.28525 -0.44056 pars: 4.67541 3.81782 3.23523 -0.32145 pars: 4.6392 3.77377 3.25494 -0.26307 pars: 4.6392 3.77377 3.25494 -0.26307 ## pars: 0 0 0 0 pars: 0.94488 0.2656 0.19118 -0.01084 pars: 1.88944 -0.04551 0.10413 0.04776 pars: 3.27032 -1.3307 -0.61116 0.0975 pars: 3.89124 -1.78047 -2.46472 -0.1242 pars: 4.45808 -1.89082 -4.38456 -0.35528 pars: 5.05671 -2.23662 -6.17265 -0.60914 pars: 5.53804 -2.50516 -7.61592 -0.8129 pars: 5.88752 -2.69897 -8.66464 -0.96081 pars: 6.0705 -2.80894 -9.20777 -1.03856 pars: 6.1274 -2.85342 -9.36945 -1.06312 pars: 6.1274 -2.85342 -9.36945 -1.06312 ## pars: 0 0 0 0 pars: 0.93261 0.29518 0.19158 -0.08006 pars: 1.89038 0.03667 0.10459 0.0109 pars: 3.37235 -1.25895 -0.46712 0.25143 pars: 4.01461 -1.74237 -2.29663 0.76746 pars: 4.59501 -1.51722 -4.25602 0.94861 pars: 5.18543 -1.36404 -6.19841 1.28717 pars: 5.71734 -1.37079 -7.83739 1.5637 pars: 6.12079 -1.45725 -9.0217 1.74984 pars: 6.36395 -1.55925 -9.69964 1.84719 pars: 6.45825 -1.63955 -9.93327 1.8728 pars: 6.45825 -1.63955 -9.93327 1.8728 ## pars: 0 0 0 0 pars: 0.99893 0.03851 0.02558 -0.00227 pars: 1.54218 -0.63645 -0.47275 0.02884 pars: 2.08568 -2.22688 -1.56903 0.10697 pars: 2.43755 -3.61285 -2.97706 0.18096 pars: 2.67244 -4.31671 -3.84321 0.22565 pars: 2.77212 -4.61265 -4.17299 0.24471 pars: 2.77212 -4.61265 -4.17299 0.24471 ## pars: 0 0 0 0 pars: 0.96128 0.19802 0.18976 -0.02677 pars: 1.87333 -0.13469 -0.03955 0.04309 pars: 2.73948 -0.51775 -0.35729 0.08877 pars: 3.3984 -0.91112 -0.99807 0.11129 pars: 3.93698 -1.13781 -1.80957 0.11063 pars: 4.36129 -1.54874 -2.61639 0.09861 pars: 4.62254 -2.27413 -3.25239 0.06602 pars: 4.75148 -3.19069 -3.62758 0.01587 pars: 4.77999 -3.6926 -3.80825 -0.01891 pars: 4.77999 -3.6926 -3.80825 -0.01891 ## pars: 0 0 0 0 pars: 0.99305 0.08933 0.07569 -0.01203 pars: 1.75753 -0.39634 -0.34291 0.05482 pars: 2.47427 -0.93872 -0.7758 0.12349 pars: 3.0949 -1.51059 -1.3067 0.2005 pars: 3.67448 -2.01893 -1.94026 0.26584 pars: 4.1516 -2.50858 -2.66953 0.29349 pars: 4.49064 -2.92298 -3.1701 0.29341 pars: 4.66361 -3.16711 -3.42326 0.29035 pars: 4.71521 -3.27916 -3.52583 0.28555 pars: 4.71521 -3.27916 -3.52583 0.28555 ## pars: 0 0 0 0 pars: 0.66366 0.67062 0.27219 -0.18907 pars: 0.76946 1.32603 1.00964 -0.31317 pars: 0.71804 2.27778 1.30337 -0.38572 pars: 1.13576 2.75674 2.06225 -0.52791 pars: 1.51347 3.63118 1.80839 -0.69598 pars: 2.00323 3.69088 2.67733 -0.7349 pars: 2.57134 3.37393 2.57361 -1.48725 pars: 2.45763 3.31395 2.80317 -2.45202 pars: 2.87757 3.37517 2.86329 -3.06437 pars: 2.86912 3.57323 3.01796 -3.58405 pars: 2.78881 3.70342 3.13254 -4.06981 pars: 2.77631 3.71707 3.13766 -4.09034 pars: 2.77631 3.71707 3.13766 -4.09034 ## pars: 0 0 0 0 pars: 0.77065 0.57589 0.2715 -0.02718 pars: 0.98225 1.37259 0.83754 -0.03704 pars: 0.71606 2.6116 2.55252 -0.35003 pars: -0.37121 4.42629 2.89104 -0.11495 pars: 0.47919 4.50287 4.86715 -0.22013 pars: 0.66305 4.45012 4.70915 -2.36106 pars: 0.52577 4.52935 4.79797 -0.92743 pars: 1.00846 4.57082 4.55304 -1.38919 pars: 1.65956 4.57802 4.29654 -1.52393 pars: 1.65956 4.57802 4.29654 -1.52393 ## pars: 0 0 0 0 pars: 0.80451 0.53464 0.25738 -0.02614 pars: 1.06599 1.45715 0.53802 0.01698 pars: 1.00392 2.66094 2.24261 -0.14077 pars: 0.08411 4.50275 2.55457 -0.35943 pars: 1.01124 4.63318 4.42697 -0.32757 pars: 2.66113 4.814 3.89346 -1.48689 pars: 3.90674 3.62292 3.36744 -2.55299 pars: 3.00993 4.15105 3.85332 -1.61434 pars: 3.52238 4.34122 3.63919 -1.1302 pars: 3.946 3.85919 3.45966 -0.76279 pars: 4.61238 3.83368 3.11627 -0.89077 pars: 4.7455 3.81535 3.12344 -0.14183 pars: 4.66274 3.83472 3.16387 -0.64216 pars: 4.51974 3.88583 3.30099 -0.79948 pars: 4.49007 3.8841 3.30018 -0.793 pars: 4.49007 3.8841 3.30018 -0.793 ## pars: 0 0 0 0 pars: 0.96267 0.05898 0.26041 -0.04449 pars: 1.80169 -0.33596 -0.08332 0.10357 pars: 3.15451 -0.74794 -1.79429 0.3755 pars: 3.78939 -1.33658 -3.84838 0.5554 pars: 4.24277 -2.522 -5.14101 0.68609 pars: 4.58364 -3.19054 -6.13549 0.7911 pars: 4.77883 -3.52839 -6.71005 0.85259 pars: 4.85043 -3.6635 -6.91952 0.87482 pars: 4.85043 -3.6635 -6.91952 0.87482 ## pars: 0 0 0 0 pars: 0.86065 0.41173 0.29956 0.00513 pars: 1.84435 0.23469 0.31654 0.03148 pars: 3.83873 -0.86992 -0.13064 0.04749 pars: 4.75242 -1.63148 -2.12305 -0.0685 pars: 5.17151 -1.02952 -4.25682 -0.11341 pars: 5.43426 -1.17444 -5.03509 -0.13773 pars: 5.57072 -1.63643 -5.04271 -0.1426 pars: 5.62799 -2.24105 -4.62714 -0.13686 pars: 5.62799 -2.24105 -4.62714 -0.13686 ## pars: 0 0 0 0 pars: 0.6052 0.6427 0.45379 0.12146 pars: 0.71145 1.36494 1.12956 0.22343 pars: 0.50641 1.98304 1.8878 0.19199 pars: 0.80375 2.90617 1.78605 -0.02952 pars: 1.09336 3.17401 2.70242 0.03864 pars: 2.02555 3.02941 2.71137 -0.29308 pars: 2.527 3.38762 2.93885 0.46091 pars: 3.00624 3.05722 2.74824 1.10743 pars: 2.64459 3.25058 2.8743 0.63294 pars: 2.58537 3.23089 2.88409 0.59699 pars: 2.58537 3.23089 2.88409 0.59699 ## pars: 0 0 0 0 pars: 0.82058 0.35859 0.43213 0.10642 pars: 1.55575 0.45108 0.87563 -0.39783 pars: 2.50929 0.47785 1.14118 -0.25808 pars: 3.47358 0.26089 1.24779 -0.36632 pars: 4.40071 -0.04816 1.09379 -0.51192 pars: 5.1589 -0.02686 0.45278 -0.62938 pars: 5.62081 0.15965 -0.41394 -0.65485 pars: 5.94736 -0.08011 -1.32636 -0.71289 pars: 6.13631 -0.79015 -2.00049 -0.78836 pars: 6.23336 -1.66793 -2.46358 -0.86337 pars: 6.42267 -4.81777 -3.66519 -1.1029 pars: 6.31251 -4.28944 -3.35621 -1.01956 pars: 6.13916 -4.16002 -3.24915 -0.86861 pars: 6.13916 -4.16002 -3.24915 -0.86861 ## pars: 0 0 0 0 pars: 0.88254 0.32073 0.33018 -0.09611 pars: 1.86147 0.1677 0.24051 0.00503 pars: 3.70026 -0.86212 -0.51097 0.19738 pars: 4.42103 -1.31554 -2.48141 0.85743 pars: 4.87422 -1.59122 -3.81853 1.27788 pars: 5.1458 -2.35236 -4.18393 1.45599 pars: 5.30739 -3.29088 -4.06515 1.47024 pars: 5.33451 -3.71409 -3.87902 1.39635 pars: 5.33451 -3.71409 -3.87902 1.39635 ## pars: 0 0 0 0 pars: 0.87067 0.41996 0.25513 -0.02168 pars: 1.83487 0.46212 -0.00665 -0.0271 pars: 3.70511 -0.38192 -0.86462 -0.0227 pars: 4.54542 -2.39962 -0.55709 0.25022 pars: 5.06992 -3.56657 -0.74061 0.49096 pars: 5.54927 -4.35079 -1.60027 0.71986 pars: 5.85912 -4.81095 -2.274 0.86774 pars: 6.00222 -5.02755 -2.5748 0.93598 pars: 6.04448 -5.07853 -2.69678 0.95614 pars: 6.04448 -5.07853 -2.69678 0.95614 ## pars: 0 0 0 0 pars: 0.9505 0.22106 0.21289 0.0485 pars: 1.89161 -0.07569 0.06597 -0.01991 pars: 2.79616 -0.41304 -0.18797 -0.079 pars: 3.50142 -0.69418 -0.83318 -0.16436 pars: 4.13621 -0.81312 -1.59429 -0.22433 pars: 4.71751 -1.25452 -2.27648 -0.26768 pars: 5.19906 -2.06523 -2.6093 -0.27716 pars: 5.57044 -2.66622 -2.87384 -0.28065 pars: 5.76997 -2.95884 -3.0384 -0.28227 pars: 5.84098 -3.07777 -3.10995 -0.28011 pars: 5.84098 -3.07777 -3.10995 -0.28011 ## pars: 0 0 0 0 pars: 0.99689 0.06958 0.03665 -0.00578 pars: 1.6767 -0.55111 -0.35029 0.0479 pars: 2.35557 -1.22187 -0.64587 0.0909 pars: 2.96641 -1.86425 -1.10812 0.11409 pars: 3.51655 -2.4018 -1.74671 0.08959 pars: 3.97543 -2.79763 -2.24869 0.0421 pars: 4.27839 -3.04718 -2.56991 0.01405 pars: 4.42236 -3.17673 -2.74824 -0.00054 pars: 4.45951 -3.22445 -2.82216 -0.00673 pars: 4.45951 -3.22445 -2.82216 -0.00673 ## pars: 0 0 0 0 pars: 0.94588 0.32234 0.02378 -0.02902 pars: 1.86042 -0.06512 -0.06825 0.04188 pars: 3.30824 -1.7348 -0.12524 0.14251 pars: 3.77237 -3.81473 -0.62818 0.46326 pars: 4.48272 -6.82534 -2.5124 1.06723 pars: 5.03946 -9.20465 -3.53503 1.54484 pars: 5.55099 -11.39601 -4.36783 1.98447 pars: 5.91881 -12.97203 -4.96028 2.30064 pars: 6.1254 -13.85721 -5.29269 2.47822 pars: 6.19523 -14.15642 -5.40513 2.53825 pars: 6.19523 -14.15642 -5.40513 2.53825 ## pars: 0 0 0 0 pars: 0.9954 0.08774 0.03213 0.02121 pars: 1.64267 -0.58612 -0.29647 -0.1166 pars: 2.26683 -2.34565 -1.05966 -0.44112 pars: 2.7306 -3.74996 -2.42913 -0.77383 pars: 3.04664 -4.52201 -3.48476 -0.99368 pars: 3.21417 -4.94457 -3.92414 -1.11458 pars: 3.28537 -5.12363 -4.1169 -1.16563 pars: 3.28537 -5.12363 -4.1169 -1.16563 ## pars: 0 0 0 0 pars: 0.97706 0.19994 0.07307 -0.00636 pars: 1.84197 -0.25195 -0.1448 0.0097 pars: 2.63106 -0.84868 -0.28975 0.02527 pars: 3.2547 -1.56766 -0.59555 0.05051 pars: 3.85881 -2.08684 -1.19964 0.07434 pars: 4.36719 -2.5145 -1.94691 0.0903 pars: 4.74503 -2.90894 -2.78449 0.10069 pars: 5.00077 -3.35015 -3.64468 0.10402 pars: 5.09126 -3.62319 -3.95737 0.10162 pars: 5.09126 -3.62319 -3.95737 0.10162 ## pars: 0 0 0 0 pars: 0.98724 0.15685 0.02706 -0.00459 pars: 1.77104 -0.44539 -0.12403 0.00712 pars: 2.48925 -1.13681 -0.19947 0.02796 pars: 3.09457 -1.85912 -0.53184 0.06514 pars: 3.65048 -2.33918 -1.20968 0.09729 pars: 4.08868 -2.59063 -2.07241 0.11835 pars: 4.4109 -2.79534 -2.64373 0.13212 pars: 4.56469 -2.91717 -2.90442 0.13807 pars: 4.61093 -2.9766 -3.01456 0.13938 pars: 4.61093 -2.9766 -3.01456 0.13938 ## pars: 0 0 0 0 pars: 0.99579 0.08645 0.0286 -0.01053 pars: 1.70479 -0.56287 -0.23407 0.07136 pars: 2.40404 -1.25473 -0.40052 0.13963 pars: 3.04826 -1.90841 -0.79144 0.20954 pars: 3.66089 -2.36295 -1.43711 0.24389 pars: 4.21371 -2.71708 -2.1538 0.24877 pars: 4.64666 -2.97776 -2.59069 0.25637 pars: 4.92833 -3.14917 -2.87194 0.26271 pars: 5.05175 -3.23208 -3.00653 0.26486 pars: 5.05175 -3.23208 -3.00653 0.26486 ## pars: 0 0 0 0 pars: 0.99828 0.0548 0.01502 -0.0141 pars: 1.6367 -0.65229 -0.22984 0.16616 pars: 2.32868 -2.46558 -0.68659 0.54013 pars: 2.88885 -4.04113 -1.74672 0.98213 pars: 3.38114 -5.03527 -3.41042 1.32389 pars: 3.80793 -5.90807 -4.44203 1.62684 pars: 4.07437 -6.45495 -5.00994 1.81939 pars: 4.19183 -6.69606 -5.25923 1.90436 pars: 4.21729 -6.74828 -5.3158 1.92269 pars: 4.21729 -6.74828 -5.3158 1.92269 ## pars: 0 0 0 0 pars: 0.99559 0.0447 0.08171 0.01153 pars: 1.70911 -0.31502 -0.51276 -0.07843 pars: 2.40864 -0.60514 -1.16137 -0.15452 pars: 3.03474 -1.05988 -1.78998 -0.23242 pars: 3.61702 -1.69101 -2.29731 -0.30484 pars: 4.11221 -2.2373 -2.68233 -0.36882 pars: 4.46701 -2.5938 -2.93957 -0.41147 pars: 4.65856 -2.80033 -3.0866 -0.43364 pars: 4.71999 -2.88618 -3.14654 -0.44032 pars: 4.71999 -2.88618 -3.14654 -0.44032 ## pars: 0 0 0 0 pars: 0.99864 0.05116 0.00789 -0.00683 pars: 1.63294 -0.69282 -0.18075 0.08571 pars: 2.33494 -2.58208 -0.57907 0.28569 pars: 2.91509 -4.18704 -1.71529 0.52507 pars: 3.46354 -5.39695 -3.28092 0.73698 pars: 3.96348 -6.51406 -4.1792 0.9348 pars: 4.35309 -7.38617 -4.83533 1.08947 pars: 4.5796 -7.89328 -5.21432 1.17941 pars: 4.6631 -8.08023 -5.35429 1.21256 pars: 4.6631 -8.08023 -5.35429 1.21256 ## pars: 0 0 0 0 pars: 0.99991 0.01081 0.00732 -0.00268 pars: 1.58692 -0.63344 -0.4648 0.12954 pars: 2.29307 -2.17978 -1.5935 0.4269 pars: 2.90479 -3.63904 -2.88469 0.71223 pars: 3.4896 -4.78538 -4.47587 0.96573 pars: 4.03092 -5.64409 -5.49914 1.16507 pars: 4.46506 -6.30787 -6.26162 1.32481 pars: 4.74608 -6.73533 -6.75079 1.42826 pars: 4.86938 -6.92342 -6.96576 1.47364 pars: 4.89747 -6.96705 -7.01545 1.48396 pars: 4.89747 -6.96705 -7.01545 1.48396 ## pars: 0 0 0 0 pars: 0.7567 0.57542 0.31033 0.00052 pars: 0.96157 1.34849 0.91057 0.0111 pars: 0.46538 2.86951 2.31559 0.0866 pars: 0.13678 2.50869 4.34794 -0.32683 pars: 0.47583 2.92063 3.17477 -0.05988 pars: 0.81523 3.70162 3.36544 -0.03046 pars: 1.61674 3.69667 3.50066 0.28836 pars: 2.2794 4.24379 3.35122 0.24884 pars: 2.75095 3.57844 3.04118 0.21423 pars: 3.58013 3.80598 2.89143 0.18898 pars: 3.97773 3.0914 2.625 0.03844 pars: 4.68919 3.08999 2.48695 0.52541 pars: 4.73038 3.09529 2.5222 -0.34602 pars: 4.65511 3.0693 2.48311 0.18631 pars: 4.3371 3.01154 2.37306 0.19073 pars: 4.58527 3.0497 2.45202 0.17862 pars: 4.54013 3.08512 2.47354 0.1283 pars: 4.54013 3.08512 2.47354 0.1283 ## pars: 0 0 0 0 pars: 0.94464 0.30641 0.11663 -0.01253 pars: 1.8605 0.03056 -0.16332 -0.09458 pars: 3.25379 -1.4241 -0.66002 -0.03763 pars: 3.77053 -3.34203 -0.94506 0.49202 pars: 4.24031 -4.86986 -2.09573 1.14642 pars: 4.60624 -5.80364 -3.8414 1.65046 pars: 4.83568 -6.40518 -4.86939 1.96311 pars: 4.9204 -6.63698 -5.21166 2.07865 pars: 4.9204 -6.63698 -5.21166 2.07865 ## pars: 0 0 0 0 pars: 0.98234 0.16573 0.0866 0.00638 pars: 1.8316 -0.27945 -0.1962 -0.01807 pars: 2.59872 -0.87608 -0.43144 -0.03289 pars: 3.2347 -1.55118 -0.80511 -0.04462 pars: 3.8529 -2.06187 -1.4026 -0.05015 pars: 4.38915 -2.48144 -2.13494 -0.04163 pars: 4.81005 -2.86851 -2.95472 -0.01015 pars: 5.10281 -3.20917 -3.43649 0.02041 pars: 5.23257 -3.39995 -3.65562 0.03612 pars: 5.266 -3.48941 -3.73894 0.04327 pars: 5.266 -3.48941 -3.73894 0.04327 ## pars: 0 0 0 0 pars: 0.9744 0.20733 0.08595 -0.01338 pars: 1.85408 -0.20296 -0.15306 0.01309 pars: 2.6465 -0.78993 -0.31552 0.04689 pars: 3.26818 -1.51578 -0.60499 0.10038 pars: 3.86814 -2.06992 -1.17983 0.15074 pars: 4.36999 -2.50121 -1.92864 0.18839 pars: 4.73854 -2.85132 -2.78915 0.22195 pars: 4.99315 -3.20532 -3.46476 0.24892 pars: 5.08153 -3.40699 -3.70997 0.25718 pars: 5.08153 -3.40699 -3.70997 0.25718 ## pars: 0 0 0 0 pars: 0.95875 0.27976 0.04672 -0.01896 pars: 1.8444 -0.14864 -0.12482 0.03274 pars: 3.04037 -1.80162 -0.25471 0.10463 pars: 3.42319 -3.64433 -1.04755 0.22297 pars: 3.90414 -5.78926 -3.16177 0.41763 pars: 4.1497 -6.81817 -4.60227 0.51249 pars: 4.24555 -7.23253 -5.03348 0.55072 pars: 4.27276 -7.34855 -5.17233 0.56139 pars: 4.27276 -7.34855 -5.17233 0.56139 ## pars: 0 0 0 0 pars: 0.95171 0.28674 0.10754 -0.02169 pars: 1.88105 -0.00226 -0.11957 0.0133 pars: 2.75435 -0.47463 -0.23545 0.04138 pars: 3.38585 -1.23772 -0.36619 0.08384 pars: 3.95587 -1.97055 -0.73168 0.15067 pars: 4.41997 -2.40986 -1.49891 0.20517 pars: 4.73464 -2.73146 -2.39141 0.23675 pars: 4.89735 -3.04265 -3.32767 0.24687 pars: 4.94928 -3.30183 -3.70243 0.23689 pars: 4.94928 -3.30183 -3.70243 0.23689 ## pars: 0 0 0 0 pars: 0.94444 0.21926 0.24182 -0.03858 pars: 1.89151 -0.02568 0.03695 -0.00558 pars: 2.75481 -0.35827 -0.33841 0.05105 pars: 3.31816 -0.80001 -1.0307 0.14186 pars: 3.77972 -1.33131 -1.73783 0.2099 pars: 4.11323 -2.08509 -2.30322 0.24046 pars: 4.29615 -2.56962 -2.62542 0.24366 pars: 4.35099 -2.75284 -2.75959 0.23534 pars: 4.35099 -2.75284 -2.75959 0.23534 ## pars: 0 0 0 0 pars: 0.97495 0.16199 0.15233 0.00478 pars: 1.86539 -0.17219 -0.15662 0.00307 pars: 2.65282 -0.6236 -0.5759 -0.01632 pars: 3.26662 -1.17159 -1.1428 -0.05624 pars: 3.8377 -1.70139 -1.76818 -0.10172 pars: 4.29715 -2.2812 -2.43832 -0.162 pars: 4.61689 -2.70429 -2.86172 -0.20628 pars: 4.77172 -2.9245 -3.0726 -0.22715 pars: 4.81436 -3.01053 -3.14927 -0.23364 pars: 4.81436 -3.01053 -3.14927 -0.23364 ## pars: 0 0 0 0 pars: 0.95176 0.22264 0.21102 -0.00773 pars: 1.84155 -0.10093 -0.11009 0.01372 pars: 2.57024 -0.60345 -0.57524 0.02477 pars: 2.90275 -1.29124 -1.22044 0.01452 pars: 3.1091 -1.97744 -1.91766 -0.00609 pars: 3.24285 -2.65 -2.64479 -0.03861 pars: 3.30387 -3.22748 -3.2903 -0.07961 pars: 3.30139 -3.65252 -3.73792 -0.11709 pars: 3.30139 -3.65252 -3.73792 -0.11709 ## pars: 0 0 0 0 pars: 0.96665 0.1967 0.1611 -0.03065 pars: 1.88333 -0.10531 -0.09542 0.0213 pars: 2.69952 -0.56254 -0.44277 0.08543 pars: 3.31502 -1.1506 -0.96018 0.1728 pars: 3.87604 -1.65004 -1.61473 0.25876 pars: 4.3213 -2.16078 -2.3477 0.31909 pars: 4.61323 -2.78033 -3.07575 0.34844 pars: 4.76185 -3.35354 -3.5405 0.34008 pars: 4.79753 -3.60872 -3.73435 0.32338 pars: 4.79753 -3.60872 -3.73435 0.32338 ## pars: 0 0 0 0 pars: 0.95134 0.16172 0.25563 -0.05868 pars: 1.87947 -0.10768 0.00867 0.01218 pars: 2.7249 -0.35552 -0.45524 0.10493 pars: 3.28721 -0.6378 -1.22243 0.22967 pars: 3.75849 -1.18381 -1.90725 0.33348 pars: 4.09091 -2.03753 -2.30407 0.39002 pars: 4.28776 -2.52604 -2.56839 0.41366 pars: 4.35265 -2.71248 -2.68217 0.41227 pars: 4.35265 -2.71248 -2.68217 0.41227 ## pars: 0 0 0 0 pars: 0.92338 0.36451 0.11692 0.02861 pars: 1.86805 0.1902 -0.15835 -0.00937 pars: 3.40604 -1.1793 -0.50041 -0.10268 pars: 3.89616 -3.20543 -0.37622 -0.17882 pars: 4.39519 -5.082 -1.13625 -0.31467 pars: 4.80729 -6.54135 -2.25753 -0.4221 pars: 5.03441 -7.37397 -2.71548 -0.4842 pars: 5.12665 -7.71071 -2.9094 -0.50928 pars: 5.12665 -7.71071 -2.9094 -0.50928 ## pars: 0 0 0 0 pars: 0.96902 0.18211 0.16255 -0.03754 pars: 1.87647 -0.12822 -0.11208 0.03184 pars: 2.68345 -0.57106 -0.49387 0.115 pars: 3.29217 -1.1278 -1.04821 0.22547 pars: 3.8454 -1.64039 -1.69628 0.33127 pars: 4.27799 -2.20988 -2.39146 0.40388 pars: 4.56616 -2.85122 -2.99063 0.43022 pars: 4.68946 -3.18389 -3.27695 0.42751 pars: 4.71876 -3.31993 -3.39299 0.41728 pars: 4.71876 -3.31993 -3.39299 0.41728 ## pars: 0 0 0 0 pars: 0.99463 0.089 0.04919 -0.01942 pars: 1.72204 -0.4882 -0.29966 0.10712 pars: 2.41089 -1.1344 -0.60536 0.2274 pars: 3.03598 -1.74073 -1.08455 0.33694 pars: 3.60882 -2.28907 -1.6891 0.41242 pars: 4.07739 -2.82685 -2.38783 0.46727 pars: 4.3954 -3.33744 -3.1859 0.50272 pars: 4.65308 -3.8758 -3.98824 0.50791 pars: 4.72889 -4.11869 -4.25869 0.50004 pars: 4.72889 -4.11869 -4.25869 0.50004 ## pars: 0 0 0 0 pars: 0.99502 0.07474 0.06586 0.00328 pars: 1.72739 -0.43512 -0.38494 -0.0179 pars: 2.41856 -0.98521 -0.85301 -0.04244 pars: 3.0314 -1.546 -1.40906 -0.07002 pars: 3.58907 -2.07955 -2.04372 -0.10905 pars: 4.03894 -2.63656 -2.7385 -0.17716 pars: 4.33718 -2.99024 -3.12518 -0.21927 pars: 4.47615 -3.17422 -3.31522 -0.23883 pars: 4.51109 -3.2463 -3.38317 -0.24516 pars: 4.51109 -3.2463 -3.38317 -0.24516 ## pars: 0 0 0 0 pars: 0.99437 0.10134 0.02469 -0.01883 pars: 1.72907 -0.53978 -0.15779 0.1072 pars: 2.43462 -1.23208 -0.26936 0.20955 pars: 3.07418 -1.9131 -0.59134 0.36282 pars: 3.68368 -2.43999 -1.17045 0.48746 pars: 4.21225 -2.89884 -1.87893 0.57759 pars: 4.6182 -3.27559 -2.70912 0.64119 pars: 4.8678 -3.6214 -3.61302 0.67418 pars: 5.00126 -3.90546 -4.07404 0.67692 pars: 5.03501 -4.05666 -4.25145 0.6722 pars: 5.03501 -4.05666 -4.25145 0.6722 ## pars: 0 0 0 0 pars: 0.99804 0.04498 0.04224 -0.01023 pars: 1.66535 -0.48822 -0.46518 0.10341 pars: 2.35419 -1.01527 -0.94854 0.22207 pars: 2.98022 -1.5717 -1.48397 0.33063 pars: 3.55967 -2.14326 -2.05957 0.40965 pars: 4.03968 -2.7493 -2.69147 0.46442 pars: 4.40314 -3.3823 -3.37113 0.48409 pars: 4.58633 -3.70788 -3.70936 0.48473 pars: 4.64866 -3.86222 -3.86654 0.48195 pars: 4.64866 -3.86222 -3.86654 0.48195 ## pars: 0 0 0 0 pars: 0.99773 0.03764 0.05311 0.01712 pars: 1.66488 -0.38888 -0.52993 -0.16472 pars: 2.34493 -0.77961 -1.12494 -0.34023 pars: 2.95422 -1.3084 -1.69237 -0.50509 pars: 3.50388 -1.99069 -2.16484 -0.60062 pars: 3.93821 -2.79435 -2.57164 -0.59887 pars: 4.23406 -3.26962 -2.91233 -0.57316 pars: 4.36731 -3.4942 -3.1112 -0.55578 pars: 4.40088 -3.58078 -3.20606 -0.54378 pars: 4.40088 -3.58078 -3.20606 -0.54378 ## pars: 0 0 0 0 pars: 0.99574 0.09076 0.01045 -0.01273 pars: 1.69144 -0.61196 -0.09685 0.0906 pars: 2.3698 -1.33956 -0.16347 0.16796 pars: 2.98158 -2.04562 -0.50277 0.27789 pars: 3.53501 -2.49188 -1.20189 0.35401 pars: 3.97358 -2.74184 -2.06466 0.38236 pars: 4.28047 -2.94368 -2.63162 0.38974 pars: 4.42141 -3.06325 -2.89606 0.39035 pars: 4.45937 -3.12205 -3.00732 0.38698 pars: 4.45937 -3.12205 -3.00732 0.38698 &quot;NOTE: Depending on how you prefilter your data before running fit_ssm, you may want to consider changing some of the function parameters. E.g. you might indicate fit.to.subset = F, if you have filtered your data already and are sure all your locations are true locations.&quot; ## [1] &quot;NOTE: Depending on how you prefilter your data before running fit_ssm, you may\\nwant to consider changing some of the function parameters. E.g. you might indicate\\nfit.to.subset = F, if you have filtered your data already and are sure all your \\nlocations are true locations.&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 3: Review the model fit&quot; ## [1] &quot;STEP 3: Review the model fit&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## review the model summary ## See: https://ianjonsen.github.io/aniMotum/articles/Overview.html &quot;Check that converged and phHess were True. NOTE: I&#39;m not sure what it means if they are false&quot; ## [1] &quot;Check that converged and phHess were True. NOTE: I&#39;m not sure what it means if they are false&quot; fit_alltrack ## # A tibble: 296 × 5 ## id ssm converged pdHess pmodel ## &lt;chr&gt; &lt;named list&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;chr&gt; ## 1 19_Tag17600_Z-9_02 &lt;ssm [15]&gt; TRUE TRUE crw ## 2 19_Tag17600_Z-9_03 &lt;ssm [15]&gt; TRUE TRUE crw ## 3 19_Tag17600_Z-9_04 &lt;ssm [15]&gt; TRUE TRUE crw ## 4 19_Tag17600_Z-9_05 &lt;ssm [15]&gt; TRUE TRUE crw ## 5 19_Tag17604_Z-7_01 &lt;ssm [15]&gt; TRUE TRUE crw ## 6 19_Tag17604_Z-7_02 &lt;ssm [15]&gt; TRUE TRUE crw ## 7 19_Tag17604_Z-7_03 &lt;ssm [15]&gt; TRUE TRUE crw ## 8 19_Tag17604_Z-7_04 &lt;ssm [15]&gt; TRUE TRUE crw ## 9 19_Tag17604_Z-7_05 &lt;ssm [15]&gt; TRUE TRUE crw ## 10 19_Tag17604_Z-7_07 &lt;ssm [15]&gt; TRUE TRUE crw ## # … with 286 more rows fit_alltrack %&gt;% dplyr::filter(converged == F) ## # A tibble: 0 × 5 ## # … with 5 variables: id &lt;chr&gt;, ssm &lt;named list&gt;, converged &lt;lgl&gt;, ## # pdHess &lt;lgl&gt;, pmodel &lt;chr&gt; fit_alltrack %&gt;% dplyr::filter(pdHess == F) ## # A tibble: 0 × 5 ## # … with 5 variables: id &lt;chr&gt;, ssm &lt;named list&gt;, converged &lt;lgl&gt;, ## # pdHess &lt;lgl&gt;, pmodel &lt;chr&gt; &quot;Review overall summaries and SSM details for each individual. Again, not entirely sure what all the important bits are&quot; ## [1] &quot;Review overall summaries and SSM details for each individual. Again, not entirely sure what all the important bits are&quot; summary(fit_alltrack) ## Animal id Model Time n.obs n.filt n.fit n.pred n.rr ## 19_Tag17600_Z-9_02 crw 0.5 49 2 47 287 . ## 19_Tag17600_Z-9_03 crw 0.5 26 4 22 90 . ## 19_Tag17600_Z-9_04 crw 0.5 99 10 89 341 . ## 19_Tag17600_Z-9_05 crw 0.5 118 6 112 362 . ## 19_Tag17604_Z-7_01 crw 0.5 29 4 25 48 . ## 19_Tag17604_Z-7_02 crw 0.5 17 0 17 27 . ## 19_Tag17604_Z-7_03 crw 0.5 19 2 17 113 . ## 19_Tag17604_Z-7_04 crw 0.5 8 0 8 52 . ## 19_Tag17604_Z-7_05 crw 0.5 20 4 16 129 . ## 19_Tag17604_Z-7_07 crw 0.5 9 1 8 37 . ## 19_Tag17617_Z-4 (2nd Parent)_01 crw 0.5 35 1 34 47 . ## 19_Tag17617_Z-4 (2nd Parent)_02 crw 0.5 34 0 34 48 . ## 19_Tag17617_Z-4 (2nd Parent)_03 crw 0.5 40 6 34 84 . ## 19_Tag17617_Z-4 (2nd Parent)_04 crw 0.5 19 2 17 34 . ## 19_Tag17617_Z-4 (2nd Parent)_05 crw 0.5 18 2 16 35 . ## 19_Tag17644_Z-13_01 crw 0.5 55 3 52 227 . ## 19_Tag17644_Z-13_03 crw 0.5 44 4 40 113 . ## 19_Tag17644_Z-13_04 crw 0.5 134 12 122 460 . ## 19_Tag17652_Z-2_01 crw 0.5 53 3 50 54 . ## 19_Tag17652_Z-2_02 crw 0.5 26 1 25 28 . ## 19_Tag17652_Z-2_03 crw 0.5 13 3 10 10 . ## 19_Tag17652_Z-2_04 crw 0.5 18 2 16 16 . ## 19_Tag17652_Z-2_06 crw 0.5 17 1 16 33 . ## 19_Tag17652_Z-2_08 crw 0.5 20 2 18 42 . ## 19_Tag17652_Z-2_09 crw 0.5 61 3 58 95 . ## 19_Tag17652_Z-2_10 crw 0.5 20 0 20 32 . ## 19_Tag17652_Z-2_11 crw 0.5 13 2 11 34 . ## 19_Tag17652_Z-2_12 crw 0.5 102 5 97 233 . ## 19_Tag17652_Z-2_13 crw 0.5 12 2 10 30 . ## 19_Tag17652_Z-2_14 crw 0.5 82 6 76 182 . ## 19_Tag17652_Z-2_15 crw 0.5 15 3 12 33 . ## 19_Tag17704_Z-11_01 crw 0.5 29 2 27 40 . ## 19_Tag17704_Z-11_02 crw 0.5 12 2 10 15 . ## 19_Tag17704_Z-11_03 crw 0.5 16 0 16 38 . ## 19_Tag17704_Z-11_05 crw 0.5 49 8 41 324 . ## 19_Tag17704_Z-11_06 crw 0.5 10 0 10 26 . ## 19_Tag17704_Z-11_07 crw 0.5 25 1 24 139 . ## 19_Tag17704_Z-11_08 crw 0.5 49 6 43 337 . ## 19_Tag40066_Z-14_01 crw 0.5 52 8 44 45 . ## 19_Tag40066_Z-14_02 crw 0.5 32 2 30 31 . ## 19_Tag40066_Z-14_03 crw 0.5 7 0 7 25 . ## 19_Tag40066_Z-14_04 crw 0.5 9 1 8 22 . ## 19_Tag40066_Z-14_05 crw 0.5 6 0 6 33 . ## 19_Tag40066_Z-14_06 crw 0.5 14 0 14 78 . ## 19_Tag40066_Z-14_07 crw 0.5 11 0 11 29 . ## 19_Tag40066_Z-14_08 crw 0.5 8 1 7 32 . ## 19_Tag40066_Z-14_09 crw 0.5 10 2 8 109 . ## 19_Tag40066_Z-14_10 crw 0.5 8 2 6 77 . ## 19_Tag40066_Z-14_12 crw 0.5 15 1 14 80 . ## 19_Tag40069_Z-6_01 crw 0.5 17 0 17 29 . ## 19_Tag40069_Z-6_02 crw 0.5 22 1 21 35 . ## 19_Tag40069_Z-6_03 crw 0.5 16 2 14 30 . ## 19_Tag40069_Z-6_04 crw 0.5 15 3 12 31 . ## 19_Tag40069_Z-6_05 crw 0.5 15 2 13 37 . ## 19_Tag40069_Z-6_06 crw 0.5 22 0 22 58 . ## 19_Tag40069_Z-6_08 crw 0.5 32 5 27 80 . ## 19_Tag40069_Z-6_09 crw 0.5 13 3 10 33 . ## 19_Tag40069_Z-6_10 crw 0.5 12 2 10 35 . ## 19_Tag40069_Z-6_12 crw 0.5 15 2 13 38 . ## 19_Tag40069_Z-6_13 crw 0.5 11 0 11 30 . ## 19_Tag40069_Z-6_14 crw 0.5 12 0 12 32 . ## 19_Tag40069_Z-6_15 crw 0.5 30 3 27 83 . ## 19_Tag40069_Z-6_16 crw 0.5 12 0 12 35 . ## 19_Tag40069_Z-6_18 crw 0.5 8 2 6 36 . ## 19_Tag40073_Z-1_01 crw 0.5 44 1 43 36 . ## 19_Tag40073_Z-1_02 crw 0.5 38 0 38 33 . ## 19_Tag40073_Z-1_03 crw 0.5 40 0 40 34 . ## 19_Tag40073_Z-1_04 crw 0.5 16 2 14 31 . ## 19_Tag40073_Z-1_05 crw 0.5 21 0 21 34 . ## 19_Tag40073_Z-1_06 crw 0.5 24 1 23 36 . ## 19_Tag40073_Z-1_07 crw 0.5 20 2 18 34 . ## 19_Tag40073_Z-1_08 crw 0.5 26 0 26 36 . ## 19_Tag40073_Z-1_09 crw 0.5 19 0 19 35 . ## 19_Tag40073_Z-1_10 crw 0.5 74 4 70 136 . ## 19_Tag40073_Z-1_11 crw 0.5 25 1 24 35 . ## 19_Tag40073_Z-1_12 crw 0.5 20 3 17 32 . ## 19_Tag40073_Z-1_13 crw 0.5 18 2 16 34 . ## 19_Tag40073_Z-1_14 crw 0.5 73 3 70 134 . ## 19_Tag40073_Z-1_15 crw 0.5 20 1 19 37 . ## 19_Tag40073_Z-1_16 crw 0.5 90 3 87 181 . ## 19_Tag40078_Z-3 (2nd Parent)_01 crw 0.5 54 8 46 48 . ## 19_Tag40086_Z-11 (2nd Parent)_01 crw 0.5 23 1 22 43 . ## 19_Tag40086_Z-11 (2nd Parent)_02 crw 0.5 13 4 9 13 . ## 19_Tag40086_Z-11 (2nd Parent)_03 crw 0.5 305 34 271 1827 . ## 19_Tag40094_Z-16_01 crw 0.5 6 0 6 49 . ## 19_Tag40118_Z-2 (2nd Parent)_01 crw 0.5 7 0 7 6 . ## 19_Tag40118_Z-2 (2nd Parent)_02 crw 0.5 22 0 22 32 . ## 19_Tag40118_Z-2 (2nd Parent)_03 crw 0.5 50 5 45 81 . ## 19_Tag40118_Z-2 (2nd Parent)_04 crw 0.5 21 1 20 35 . ## 19_Tag40118_Z-2 (2nd Parent)_05 crw 0.5 14 0 14 34 . ## 19_Tag40118_Z-2 (2nd Parent)_06 crw 0.5 20 0 20 35 . ## 19_Tag40118_Z-2 (2nd Parent)_07 crw 0.5 91 9 82 129 . ## 19_Tag40118_Z-2 (2nd Parent)_08 crw 0.5 19 2 17 36 . ## 19_Tag40118_Z-2 (2nd Parent)_09 crw 0.5 19 0 19 36 . ## 19_Tag40118_Z-2 (2nd Parent)_10 crw 0.5 40 3 37 86 . ## 19_Tag40118_Z-2 (2nd Parent)_13 crw 0.5 8 2 6 36 . ## 19_Tag40118_Z-2 (2nd Parent)_14 crw 0.5 6 0 6 20 . ## 19_Tag40133_Z-15_01 crw 0.5 9 0 9 7 . ## 19_Tag40133_Z-15_02 crw 0.5 7 1 6 23 . ## 19_Tag40133_Z-15_03 crw 0.5 32 0 32 173 . ## 19_Tag40133_Z-15_06 crw 0.5 6 0 6 30 . ## 19_Tag40133_Z-15_08 crw 0.5 12 0 12 24 . ## 19_Tag40133_Z-15_10 crw 0.5 7 1 6 27 . ## 19_Tag40133_Z-15_11 crw 0.5 6 2 4 36 . ## 19_Tag40138_Z-17_01 crw 0.5 20 2 18 71 . ## 19_Tag40138_Z-17_03 crw 0.5 100 4 96 298 . ## 19_Tag40138_Z-17_04 crw 0.5 72 13 59 369 . ## 19_Tag40138_Z-17_05 crw 0.5 15 1 14 76 . ## 19_Tag40138_Z-17_06 crw 0.5 97 13 84 367 . ## 19_Tag40170_Z-12_01 crw 0.5 69 9 60 48 . ## 19_Tag40170_Z-12_02 crw 0.5 46 2 44 32 . ## 19_Tag40170_Z-12_04 crw 0.5 24 2 22 34 . ## 19_Tag40170_Z-12_05 crw 0.5 24 0 24 33 . ## 19_Tag40170_Z-12_06 crw 0.5 26 4 22 35 . ## 19_Tag40170_Z-12_07 crw 0.5 26 4 22 35 . ## 19_Tag40170_Z-12_08 crw 0.5 24 0 24 33 . ## 19_Tag40170_Z-12_09 crw 0.5 23 1 22 34 . ## 19_Tag40170_Z-12_10 crw 0.5 26 3 23 36 . ## 19_Tag40170_Z-12_11 crw 0.5 21 0 21 41 . ## 19_Tag40170_Z-12_12 crw 0.5 21 1 20 41 . ## 19_Tag40177_Z-17 (2nd Parent)_01 crw 0.5 17 1 16 47 . ## 19_Tag40177_Z-17 (2nd Parent)_02 crw 0.5 19 0 19 31 . ## 19_Tag40177_Z-17 (2nd Parent)_04 crw 0.5 18 2 16 31 . ## 19_Tag40177_Z-17 (2nd Parent)_05 crw 0.5 187 13 174 269 . ## 19_Tag40177_Z-17 (2nd Parent)_06 crw 0.5 17 1 16 37 . ## 19_Tag40177_Z-17 (2nd Parent)_07 crw 0.5 19 1 18 33 . ## 19_Tag40177_Z-17 (2nd Parent)_08 crw 0.5 22 1 21 39 . ## 19_Tag40177_Z-17 (2nd Parent)_09 crw 0.5 18 1 17 40 . ## 19_Tag40177_Z-17 (2nd Parent)_10 crw 0.5 234 18 216 374 . ## 19_Tag40182_Z-4_01 crw 0.5 23 7 16 31 . ## 19_Tag40182_Z-4_02 crw 0.5 7 0 7 10 . ## 19_Tag40182_Z-4_03 crw 0.5 6 0 6 8 . ## 19_Tag40182_Z-4_04 crw 0.5 48 14 34 91 . ## 19_Tag40182_Z-4_05 crw 0.5 18 0 18 43 . ## 19_Tag40182_Z-4_06 crw 0.5 26 7 19 74 . ## 19_Tag40182_Z-4_07 crw 0.5 32 2 30 86 . ## 19_Tag40182_Z-4_09 crw 0.5 14 2 12 41 . ## 19_Tag40182_Z-4_10 crw 0.5 12 0 12 32 . ## 19_Tag40182_Z-4_11 crw 0.5 22 2 20 50 . ## 19_Tag40182_Z-4_12 crw 0.5 12 2 10 31 . ## 19_Tag40182_Z-4_13 crw 0.5 10 2 8 31 . ## 19_Tag40182_Z-4_14 crw 0.5 12 4 8 29 . ## 19_Tag40182_Z-4_15 crw 0.5 9 1 8 35 . ## 20_Tag17600_Z-170_01 crw 0.5 10 0 10 8 . ## 20_Tag17600_Z-170_02 crw 0.5 26 3 23 46 . ## 20_Tag17600_Z-170_03 crw 0.5 41 5 36 97 . ## 20_Tag17600_Z-170_04 crw 0.5 12 2 10 29 . ## 20_Tag17600_Z-170_05 crw 0.5 38 3 35 66 . ## 20_Tag17600_Z-170_06 crw 0.5 14 0 14 31 . ## 20_Tag17600_Z-170_07 crw 0.5 28 0 28 46 . ## 20_Tag17600_Z-170_08 crw 0.5 19 0 19 48 . ## 20_Tag17600_Z-170_09 crw 0.5 32 2 30 98 . ## 20_Tag17604_Z-95_01 crw 0.5 27 2 25 28 . ## 20_Tag17604_Z-95_03 crw 0.5 18 3 15 33 . ## 20_Tag17604_Z-95_04 crw 0.5 16 0 16 32 . ## 20_Tag17604_Z-95_05 crw 0.5 12 0 12 37 . ## 20_Tag17604_Z-95_06 crw 0.5 6 0 6 26 . ## 20_Tag17604_Z-95_07 crw 0.5 12 2 10 76 . ## 20_Tag17604_Z-95_08 crw 0.5 10 1 9 79 . ## 20_Tag17604_Z-95_09 crw 0.5 8 2 6 171 . ## 20_Tag17604_Z-95_10 crw 0.5 8 1 7 39 . ## 20_Tag17604_Z-95_11 crw 0.5 12 0 12 35 . ## 20_Tag17604_Z-95_12 crw 0.5 11 0 11 18 . ## 20_Tag17604_Z-95_13 crw 0.5 6 0 6 35 . ## 20_Tag17604_Z-95_14 crw 0.5 16 1 15 38 . ## 20_Tag17604_Z-95_15 crw 0.5 12 1 11 33 . ## 20_Tag17604_Z-95_16 crw 0.5 13 0 13 38 . ## 20_Tag17604_Z-95_17 crw 0.5 41 4 37 88 . ## 20_Tag17644_Z-106_01 crw 0.5 36 3 33 97 . ## 20_Tag17677_Z-170 (2nd Parent)_01 crw 0.5 6 0 6 53 . ## 20_Tag17677_Z-170 (2nd Parent)_02 crw 0.5 113 7 106 277 . ## 20_Tag17677_Z-170 (2nd Parent)_03 crw 0.5 22 3 19 95 . ## 20_Tag17700_VM-13_01 crw 0.5 6 0 6 53 . ## 20_Tag17700_VM-13_02 crw 0.5 183 29 154 279 . ## 20_Tag17717_VM-8_01 crw 0.5 47 4 43 32 . ## 20_Tag17717_VM-8_03 crw 0.5 207 2 205 225 . ## 20_Tag17717_VM-8_05 crw 0.5 15 0 15 32 . ## 20_Tag40024_Z-178 (2nd Parent)_01 crw 0.5 49 8 41 40 . ## 20_Tag40024_Z-178 (2nd Parent)_02 crw 0.5 46 11 35 37 . ## 20_Tag40024_Z-178 (2nd Parent)_03 crw 0.5 12 0 12 32 . ## 20_Tag40024_Z-178 (2nd Parent)_04 crw 0.5 26 0 26 35 . ## 20_Tag40024_Z-178 (2nd Parent)_05 crw 0.5 18 0 18 32 . ## 20_Tag40024_Z-178 (2nd Parent)_06 crw 0.5 15 0 15 34 . ## 20_Tag40024_Z-178 (2nd Parent)_08 crw 0.5 119 7 112 219 . ## 20_Tag40024_Z-178 (2nd Parent)_09 crw 0.5 13 0 13 37 . ## 20_Tag40024_Z-178 (2nd Parent)_10 crw 0.5 8 1 7 34 . ## 20_Tag40024_Z-178 (2nd Parent)_11 crw 0.5 12 1 11 37 . ## 20_Tag40024_Z-178 (2nd Parent)_12 crw 0.5 19 1 18 79 . ## 20_Tag40024_Z-178 (2nd Parent)_13 crw 0.5 8 0 8 26 . ## 20_Tag40024_Z-178 (2nd Parent)_14 crw 0.5 6 0 6 39 . ## 20_Tag40039_Z-15 (2nd Parent)_01 crw 0.5 41 3 38 37 . ## 20_Tag40039_Z-15 (2nd Parent)_02 crw 0.5 48 8 40 37 . ## 20_Tag40039_Z-15 (2nd Parent)_03 crw 0.5 31 1 30 38 . ## 20_Tag40039_Z-15 (2nd Parent)_04 crw 0.5 35 2 33 37 . ## 20_Tag40039_Z-15 (2nd Parent)_05 crw 0.5 36 0 36 36 . ## 20_Tag40039_Z-15 (2nd Parent)_06 crw 0.5 29 5 24 36 . ## 20_Tag40039_Z-15 (2nd Parent)_07 crw 0.5 22 1 21 36 . ## 20_Tag40039_Z-15 (2nd Parent)_08 crw 0.5 22 1 21 35 . ## 20_Tag40039_Z-15 (2nd Parent)_09 crw 0.5 39 7 32 83 . ## 20_Tag40039_Z-15 (2nd Parent)_10 crw 0.5 45 4 41 82 . ## 20_Tag40039_Z-15 (2nd Parent)_11 crw 0.5 53 10 43 82 . ## 20_Tag40039_Z-15 (2nd Parent)_12 crw 0.5 26 1 25 39 . ## 20_Tag40039_Z-15 (2nd Parent)_13 crw 0.5 119 12 107 276 . ## 20_Tag40073_Z-131 (2nd Parent)_01 crw 0.5 36 1 35 33 . ## 20_Tag40073_Z-131 (2nd Parent)_03 crw 0.5 27 3 24 31 . ## 20_Tag40073_Z-131 (2nd Parent)_05 crw 0.5 33 2 31 31 . ## 20_Tag40073_Z-131 (2nd Parent)_07 crw 0.5 19 0 19 29 . ## 20_Tag40073_Z-131 (2nd Parent)_08 crw 0.5 81 10 71 177 . ## 20_Tag40078_Z-178_01 crw 0.5 34 3 31 37 . ## 20_Tag40078_Z-178_02 crw 0.5 30 1 29 29 . ## 20_Tag40078_Z-178_03 crw 0.5 35 1 34 39 . ## 20_Tag40078_Z-178_04 crw 0.5 30 2 28 37 . ## 20_Tag40086_VM-3_01 crw 0.5 12 0 12 30 . ## 20_Tag40086_VM-3_03 crw 0.5 6 0 6 23 . ## 20_Tag40086_VM-3_08 crw 0.5 8 2 6 35 . ## 20_Tag40086_VM-3_11 crw 0.5 7 1 6 84 . ## 20_Tag40086_VM-3_12 crw 0.5 14 2 12 80 . ## 20_Tag40086_VM-3_13 crw 0.5 10 2 8 34 . ## 20_Tag40094_Z-131_01 crw 0.5 47 2 45 53 . ## 20_Tag40094_Z-131_02 crw 0.5 26 0 26 47 . ## 20_Tag40094_Z-131_03 crw 0.5 241 19 222 760 . ## 20_Tag40094_Z-131_04 crw 0.5 15 1 14 48 . ## 20_Tag40094_Z-131_05 crw 0.5 29 2 27 48 . ## 20_Tag40094_Z-131_06 crw 0.5 30 2 28 80 . ## 20_Tag40094_Z-131_07 crw 0.5 62 3 59 136 . ## 20_Tag40118_Z-175_01 crw 0.5 19 1 18 34 . ## 20_Tag40118_Z-175_02 crw 0.5 14 0 14 25 . ## 20_Tag40118_Z-175_03 crw 0.5 17 1 16 25 . ## 20_Tag40118_Z-175_04 crw 0.5 40 2 38 94 . ## 20_Tag40118_Z-175_05 crw 0.5 31 0 31 122 . ## 20_Tag40118_Z-175_06 crw 0.5 16 4 12 62 . ## 20_Tag40118_Z-175_07 crw 0.5 21 4 17 27 . ## 20_Tag40118_Z-175_08 crw 0.5 6 0 6 12 . ## 20_Tag40118_Z-175_09 crw 0.5 83 8 75 224 . ## 20_Tag40118_Z-175_10 crw 0.5 292 37 255 617 . ## 20_Tag40118_Z-175_11 crw 0.5 18 0 18 27 . ## 20_Tag40118_Z-175_12 crw 0.5 103 11 92 129 . ## 20_Tag40118_Z-175_13 crw 0.5 23 3 20 26 . ## 20_Tag40133_Z-1 (2nd Parent)_01 crw 0.5 174 11 163 192 . ## 20_Tag40133_Z-1 (2nd Parent)_02 crw 0.5 111 6 105 189 . ## 20_Tag40133_Z-1 (2nd Parent)_03 crw 0.5 37 0 37 76 . ## 20_Tag40133_Z-1 (2nd Parent)_04 crw 0.5 18 2 16 28 . ## 20_Tag40133_Z-1 (2nd Parent)_06 crw 0.5 14 3 11 23 . ## 20_Tag40133_Z-1 (2nd Parent)_07 crw 0.5 89 6 83 157 . ## 20_Tag40133_Z-1 (2nd Parent)_08 crw 0.5 178 14 164 322 . ## 20_Tag40138_VM-18_05 crw 0.5 24 0 24 85 . ## 20_Tag40138_VM-18_06 crw 0.5 17 2 15 38 . ## 20_Tag40138_VM-18_07 crw 0.5 34 4 30 84 . ## 20_Tag40138_VM-18_08 crw 0.5 49 1 48 81 . ## 20_Tag40138_VM-18_09 crw 0.5 37 1 36 89 . ## 20_Tag40138_VM-18_10 crw 0.5 13 0 13 34 . ## 20_Tag40138_VM-18_11 crw 0.5 66 5 61 178 . ## 20_Tag40138_VM-18_12 crw 0.5 25 4 21 46 . ## 20_Tag40138_VM-18_13 crw 0.5 23 2 21 77 . ## 20_Tag40193_Z-13 (2nd Parent)_01 crw 0.5 55 7 48 437 . ## 20_Tag40536_VM-8 (2nd Parent)_01 crw 0.5 300 21 279 534 . ## 20_Tag40536_VM-8 (2nd Parent)_02 crw 0.5 261 46 215 998 . ## 20_Tag40817_VM-12_01 crw 0.5 17 1 16 34 . ## 20_Tag40817_VM-12_02 crw 0.5 91 10 81 437 . ## 20_Tag40817_VM-12_03 crw 0.5 410 40 370 710 . ## 20_Tag40859_Z-179_01 crw 0.5 13 4 9 198 . ## 20_Tag41108_Z-95 (2nd Parent)_01 crw 0.5 88 6 82 82 . ## 20_Tag41108_Z-95 (2nd Parent)_02 crw 0.5 32 1 31 43 . ## 20_Tag41108_Z-95 (2nd Parent)_03 crw 0.5 40 5 35 36 . ## 20_Tag41108_Z-95 (2nd Parent)_04 crw 0.5 33 2 31 36 . ## 20_Tag41108_Z-95 (2nd Parent)_05 crw 0.5 22 0 22 35 . ## 20_Tag41108_Z-95 (2nd Parent)_06 crw 0.5 24 1 23 32 . ## 20_Tag41108_Z-95 (2nd Parent)_07 crw 0.5 16 1 15 35 . ## 20_Tag41108_Z-95 (2nd Parent)_08 crw 0.5 20 3 17 34 . ## 20_Tag41108_Z-95 (2nd Parent)_09 crw 0.5 19 5 14 37 . ## 20_Tag41108_Z-95 (2nd Parent)_10 crw 0.5 49 6 43 84 . ## 20_Tag41108_Z-95 (2nd Parent)_11 crw 0.5 21 2 19 38 . ## 20_Tag41108_Z-95 (2nd Parent)_12 crw 0.5 14 0 14 34 . ## 20_Tag41108_Z-95 (2nd Parent)_13 crw 0.5 30 5 25 138 . ## 20_Tag41108_Z-95 (2nd Parent)_14 crw 0.5 30 2 28 133 . ## 20_Tag41108_Z-95 (2nd Parent)_15 crw 0.5 11 2 9 34 . ## 20_Tag41108_Z-95 (2nd Parent)_16 crw 0.5 16 1 15 84 . ## 21_Tag41220_VR-1_01 crw 0.5 258 31 227 189 . ## 21_Tag41220_VR-1_02 crw 0.5 35 4 31 49 . ## 21_Tag41220_VR-1_03 crw 0.5 29 1 28 47 . ## 21_Tag41220_VR-1_04 crw 0.5 31 0 31 45 . ## 21_Tag41220_VR-1_05 crw 0.5 68 7 61 93 . ## 21_Tag41220_VR-1_06 crw 0.5 201 16 185 289 . ## 21_Tag41220_VR-1_07 crw 0.5 33 2 31 44 . ## 21_Tag41220_VR-1_08 crw 0.5 130 10 120 176 . ## 21_Tag41220_VR-1_09 crw 0.5 64 1 63 85 . ## 21_Tag41220_VR-1_10 crw 0.5 254 30 224 344 . ## 21_Tag41220_VR-1_11 crw 0.5 30 1 29 42 . ## 21_Tag41220_VR-1_12 crw 0.5 67 9 58 92 . ## 21_Tag41220_VR-1_13 crw 0.5 218 19 199 343 . ## 21_Tag41220_VR-1_14 crw 0.5 18 1 17 39 . ## 21_Tag41220_VR-1_15 crw 0.5 87 8 79 185 . ## 21_Tag41220_VR-1_16 crw 0.5 44 4 40 91 . ## 21_Tag41220_VR-1_17 crw 0.5 39 1 38 87 . ## 21_Tag41220_VR-1_18 crw 0.5 43 2 41 87 . ## 21_Tag41220_VR-1_19 crw 0.5 41 8 33 83 . ## converged AICc ## TRUE 834.2 ## TRUE 169.8 ## TRUE 1313.1 ## TRUE 1467.6 ## TRUE 351 ## TRUE 232.2 ## TRUE 310 ## TRUE 115.9 ## TRUE 288.4 ## TRUE 131.5 ## TRUE 407.7 ## TRUE 431.8 ## TRUE 510.8 ## TRUE 263.3 ## TRUE 232.9 ## TRUE 773.2 ## TRUE 536 ## TRUE 2064.4 ## TRUE 596.4 ## TRUE 319 ## TRUE 90.8 ## TRUE 127.1 ## TRUE 161.5 ## TRUE 291.1 ## TRUE 818 ## TRUE 300.8 ## TRUE 156.6 ## TRUE 1629.4 ## TRUE 156.8 ## TRUE 1219.5 ## TRUE 143.5 ## TRUE 375.4 ## TRUE 106.8 ## TRUE 252.9 ## TRUE 643.9 ## TRUE 66.6 ## TRUE 399.4 ## TRUE 913.3 ## TRUE 483.4 ## TRUE 283.6 ## TRUE 84.6 ## TRUE 119 ## TRUE 121.9 ## TRUE 187.8 ## TRUE 171 ## TRUE 110.4 ## TRUE 127.9 ## TRUE 138.4 ## TRUE 271.4 ## TRUE 185.2 ## TRUE 246 ## TRUE 186.8 ## TRUE 121.7 ## TRUE 134.5 ## TRUE 293.9 ## TRUE 436.5 ## TRUE 144.5 ## TRUE 168.9 ## TRUE 215 ## TRUE 138.3 ## TRUE 85.6 ## TRUE 491.9 ## TRUE 119.7 ## TRUE 93.4 ## TRUE 565.7 ## TRUE 509.6 ## TRUE 521.3 ## TRUE 246.6 ## TRUE 319.8 ## TRUE 354.9 ## TRUE 306.6 ## TRUE 418.4 ## TRUE 307.6 ## TRUE 1122.2 ## TRUE 343 ## TRUE 203.6 ## TRUE 260.7 ## TRUE 1112.1 ## TRUE 318.8 ## TRUE 1399.3 ## TRUE 472.7 ## TRUE 320.9 ## TRUE 114.7 ## TRUE 4681.8 ## TRUE 99 ## TRUE -9.2 ## TRUE 290.9 ## TRUE 620.1 ## TRUE 297.2 ## TRUE 235.7 ## TRUE 274.7 ## TRUE 1058.1 ## TRUE 239.9 ## TRUE 303.3 ## TRUE 524 ## TRUE 151.5 ## TRUE 66.1 ## TRUE 66.3 ## TRUE 112.6 ## TRUE 601.5 ## TRUE 95.9 ## TRUE 179.7 ## TRUE 152.1 ## TRUE 25.7 ## TRUE 171.8 ## TRUE 1179 ## TRUE 1083.4 ## TRUE 252.6 ## TRUE 1458.4 ## TRUE 643.9 ## TRUE 377.5 ## TRUE 237.8 ## TRUE 275.3 ## TRUE 322.3 ## TRUE 319.3 ## TRUE 300.1 ## TRUE 304.4 ## TRUE 314.6 ## TRUE 283.3 ## TRUE 336.5 ## TRUE 156.7 ## TRUE 210.4 ## TRUE 213.8 ## TRUE 2526.9 ## TRUE 230.1 ## TRUE 198.4 ## TRUE 217 ## TRUE 236.1 ## TRUE 3236 ## TRUE 225.2 ## TRUE 106.7 ## TRUE 86.5 ## TRUE 407.6 ## TRUE 268.4 ## TRUE 247.5 ## TRUE 505.5 ## TRUE 196.5 ## TRUE 170.3 ## TRUE 358.3 ## TRUE 142.5 ## TRUE 97.7 ## TRUE 124.9 ## TRUE 82.2 ## TRUE 39 ## TRUE 296.3 ## TRUE 587.8 ## TRUE 159.3 ## TRUE 479.9 ## TRUE 245.9 ## TRUE 456.4 ## TRUE 318 ## TRUE 522.8 ## TRUE 298.5 ## TRUE 230.2 ## TRUE 218.8 ## TRUE 160 ## TRUE 136.2 ## TRUE 181.2 ## TRUE 177.9 ## TRUE 140.8 ## TRUE 127.3 ## TRUE 209.2 ## TRUE 171.2 ## TRUE 146.8 ## TRUE 255.6 ## TRUE 189.6 ## TRUE 212.4 ## TRUE 587.6 ## TRUE 534 ## TRUE 117.4 ## TRUE 1717.4 ## TRUE 235.6 ## TRUE 117.4 ## TRUE 2615.3 ## TRUE 420.6 ## TRUE 2813.7 ## TRUE 203 ## TRUE 434.3 ## TRUE 457 ## TRUE 184.5 ## TRUE 374.6 ## TRUE 253 ## TRUE 283.6 ## TRUE 1522.2 ## TRUE 216.1 ## TRUE 148.2 ## TRUE 184.6 ## TRUE 296.5 ## TRUE 155.9 ## TRUE 143 ## TRUE 492.5 ## TRUE 457.8 ## TRUE 430.4 ## TRUE 481.4 ## TRUE 433.5 ## TRUE 361.2 ## TRUE 351.7 ## TRUE 300.3 ## TRUE 561.3 ## TRUE 653.4 ## TRUE 662.6 ## TRUE 349.9 ## TRUE 1632.8 ## TRUE 397.4 ## TRUE 311 ## TRUE 447.4 ## TRUE 262.7 ## TRUE 1174 ## TRUE 369.6 ## TRUE 379.2 ## TRUE 475.3 ## TRUE 411.1 ## TRUE 186.9 ## TRUE 115.6 ## TRUE 146.8 ## TRUE 121.3 ## TRUE 254.8 ## TRUE 147.4 ## TRUE 545.8 ## TRUE 292.1 ## TRUE 3692.2 ## TRUE 223.2 ## TRUE 404.1 ## TRUE 462.8 ## TRUE 919.9 ## TRUE 239.9 ## TRUE 200 ## TRUE 233.7 ## TRUE 611.7 ## TRUE 559.7 ## TRUE 185.3 ## TRUE 246.7 ## TRUE 61.2 ## TRUE 1356.4 ## TRUE 4046.5 ## TRUE 269.5 ## TRUE 1314.9 ## TRUE 304.1 ## TRUE 2041.8 ## TRUE 1578.2 ## TRUE 493.6 ## TRUE 158.5 ## TRUE 109.6 ## TRUE 1374.2 ## TRUE 2769.1 ## TRUE 371 ## TRUE 237.8 ## TRUE 474.5 ## TRUE 638.8 ## TRUE 487.5 ## TRUE 219.2 ## TRUE 987.7 ## TRUE 330.8 ## TRUE 369.4 ## TRUE 722.9 ## TRUE 3945.1 ## TRUE 3871.9 ## TRUE 210.5 ## TRUE 1394.1 ## TRUE 5494.1 ## TRUE 171.4 ## TRUE 999.9 ## TRUE 374.1 ## TRUE 476.5 ## TRUE 376.3 ## TRUE 332.6 ## TRUE 336.6 ## TRUE 222.2 ## TRUE 297 ## TRUE 182.6 ## TRUE 658.2 ## TRUE 276.7 ## TRUE 227.4 ## TRUE 431.2 ## TRUE 502.5 ## TRUE 146.1 ## TRUE 279.6 ## TRUE 2689.9 ## TRUE 423.1 ## TRUE 408.9 ## TRUE 433.2 ## TRUE 783.7 ## TRUE 2672.2 ## TRUE 391.6 ## TRUE 1675.8 ## TRUE 646.7 ## TRUE 3167.1 ## TRUE 367.5 ## TRUE 859.8 ## TRUE 2903.7 ## TRUE 258.1 ## TRUE 1254.6 ## TRUE 659.9 ## TRUE 597.6 ## TRUE 616.7 ## TRUE 522.2 ## ## -------------- ## 19_Tag17600_Z-9_02 ## -------------- ## Parameter Estimate Std.Err ## D 357.9302 52.3482 ## . . . ## tau_x 7e-04 0.0225 ## tau_y 0.0049 0.023 ## ## -------------- ## 19_Tag17600_Z-9_03 ## -------------- ## Parameter Estimate Std.Err ## D 1.4005 0.4246 ## rho_o -0.9982 0.0071 ## tau_x 13.1966 2.8855 ## tau_y 1.1942 0.5569 ## ## -------------- ## 19_Tag17600_Z-9_04 ## -------------- ## Parameter Estimate Std.Err ## D 184.9513 19.5996 ## . . . ## tau_x 0.0059 0.0629 ## tau_y 0.0485 0.1054 ## ## -------------- ## 19_Tag17600_Z-9_05 ## -------------- ## Parameter Estimate Std.Err ## D 117.7715 11.1458 ## . . . ## tau_x 0.1032 0.1783 ## tau_y 0.0614 0.1539 ## ## -------------- ## 19_Tag17604_Z-7_01 ## -------------- ## Parameter Estimate Std.Err ## . . . ## . . . ## . . . ## . . . ## ## -------------- ## 19_Tag17604_Z-7_02 ## -------------- ## Parameter Estimate Std.Err ## D 94.9724 55.0083 ## rho_o -0.3614 0.5319 ## tau_x 30.0146 8.625 ## tau_y 10.446 9.0179 ## ## -------------- ## 19_Tag17604_Z-7_03 ## -------------- ## Parameter Estimate Std.Err ## D 391.1955 94.7037 ## . . . ## tau_x 3e-04 0.1681 ## tau_y 0.0455 0.2684 ## ## -------------- ## 19_Tag17604_Z-7_04 ## -------------- ## Parameter Estimate Std.Err ## D 11.9494 4.1811 ## . . . ## tau_x 0.024 0.0744 ## tau_y 0.0155 0.0716 ## ## -------------- ## 19_Tag17604_Z-7_05 ## -------------- ## Parameter Estimate Std.Err ## D 22.0933 5.5168 ## . . . ## tau_x 0.0049 0.0358 ## tau_y 0.0045 0.0356 ## ## -------------- ## 19_Tag17604_Z-7_07 ## -------------- ## Parameter Estimate Std.Err ## D 46.3167 17.3593 ## . . . ## tau_x 0.0012 0.0224 ## tau_y 0.0013 0.0224 ## ## -------------- ## 19_Tag17617_Z-4 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 88.5109 15.4527 ## . . . ## tau_x 0.0155 0.0326 ## tau_y 0.0198 0.0353 ## ## -------------- ## 19_Tag17617_Z-4 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 95.8774 17.1863 ## . . . ## tau_x 0.0144 0.0274 ## tau_y 0.0212 0.0328 ## ## -------------- ## 19_Tag17617_Z-4 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 97.714 16.7737 ## . . . ## tau_x 0.042 0.1284 ## tau_y 0.0375 0.1264 ## ## -------------- ## 19_Tag17617_Z-4 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## D 166.2203 39.9786 ## . . . ## tau_x 0.0526 0.2275 ## tau_y 0.0428 0.2169 ## ## -------------- ## 19_Tag17617_Z-4 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 139.4522 36.4847 ## . . . ## tau_x 0.0092 0.0244 ## tau_y 0.0127 0.0261 ## ## -------------- ## 19_Tag17644_Z-13_01 ## -------------- ## Parameter Estimate Std.Err ## D 92.3148 14.7236 ## . . . ## tau_x 25.2463 4.4691 ## . . . ## ## -------------- ## 19_Tag17644_Z-13_03 ## -------------- ## Parameter Estimate Std.Err ## D 167.916 26.5132 ## . . . ## tau_x 1e-04 0.0632 ## tau_y 0.0111 0.2914 ## ## -------------- ## 19_Tag17644_Z-13_04 ## -------------- ## Parameter Estimate Std.Err ## D 402.8799 36.7407 ## . . . ## tau_x 0.0033 0.0215 ## tau_y 0.0447 0.067 ## ## -------------- ## 19_Tag17652_Z-2_01 ## -------------- ## Parameter Estimate Std.Err ## D 36.5054 12.8353 ## rho_o -0.4383 0.1917 ## tau_x 21.3233 3.986 ## tau_y 20.0239 3.8972 ## ## -------------- ## 19_Tag17652_Z-2_02 ## -------------- ## Parameter Estimate Std.Err ## D 249.9652 52.3278 ## . . . ## tau_x 0.069 0.0979 ## tau_y 0.0439 0.0701 ## ## -------------- ## 19_Tag17652_Z-2_03 ## -------------- ## Parameter Estimate Std.Err ## D 35.0025 13.2803 ## rho_o 0.9963 0.0015 ## tau_x 5.7735 3.1847 ## . . . ## ## -------------- ## 19_Tag17652_Z-2_04 ## -------------- ## Parameter Estimate Std.Err ## D 2.8958 2.075 ## rho_o 0.1591 0.3568 ## tau_x 6.0359 1.6532 ## tau_y 10.3519 2.842 ## ## -------------- ## 19_Tag17652_Z-2_06 ## -------------- ## Parameter Estimate Std.Err ## D 14.2591 3.7134 ## . . . ## tau_x 0.0211 0.034 ## tau_y 0.0068 0.026 ## ## -------------- ## 19_Tag17652_Z-2_08 ## -------------- ## Parameter Estimate Std.Err ## D 286.2218 66.9242 ## . . . ## tau_x 0 0.0744 ## tau_y 0.0026 0.0835 ## ## -------------- ## 19_Tag17652_Z-2_09 ## -------------- ## Parameter Estimate Std.Err ## D 126.9906 16.7004 ## . . . ## tau_x 0.0219 0.0492 ## tau_y 0.0225 0.0487 ## ## -------------- ## 19_Tag17652_Z-2_10 ## -------------- ## Parameter Estimate Std.Err ## D 226.4104 50.5828 ## . . . ## tau_x 0.0313 0.16 ## tau_y 0.0424 0.1626 ## ## -------------- ## 19_Tag17652_Z-2_11 ## -------------- ## Parameter Estimate Std.Err ## D 63.2924 19.584 ## . . . ## tau_x 0.0035 0.0226 ## tau_y 0.0054 0.023 ## ## -------------- ## 19_Tag17652_Z-2_12 ## -------------- ## Parameter Estimate Std.Err ## D 155.8094 15.6805 ## . . . ## tau_x 0.0464 0.2091 ## tau_y 0.0398 0.2068 ## ## -------------- ## 19_Tag17652_Z-2_13 ## -------------- ## Parameter Estimate Std.Err ## D 82.1905 25.9398 ## . . . ## tau_x 0.0011 0.1064 ## tau_y 0.0032 0.1092 ## ## -------------- ## 19_Tag17652_Z-2_14 ## -------------- ## Parameter Estimate Std.Err ## D 99.3214 11.4284 ## . . . ## tau_x 0.0156 0.0336 ## tau_y 0.0152 0.0334 ## ## -------------- ## 19_Tag17652_Z-2_15 ## -------------- ## Parameter Estimate Std.Err ## D 13.5415 3.8317 ## . . . ## tau_x 0.0116 0.0624 ## tau_y 0.0213 0.068 ## ## -------------- ## 19_Tag17704_Z-11_01 ## -------------- ## Parameter Estimate Std.Err ## D 296.9492 57.264 ## . . . ## tau_x 0.0183 0.2569 ## tau_y 0.1378 0.2715 ## ## -------------- ## 19_Tag17704_Z-11_02 ## -------------- ## Parameter Estimate Std.Err ## D 19.5601 8.218 ## rho_o -0.9982 0.0152 ## tau_x 15.9372 4.9049 ## tau_y 7.8808 2.791 ## ## -------------- ## 19_Tag17704_Z-11_03 ## -------------- ## Parameter Estimate Std.Err ## D 553.0038 141.4178 ## . . . ## tau_x 0 0.024 ## tau_y 0 0 ## ## -------------- ## 19_Tag17704_Z-11_05 ## -------------- ## Parameter Estimate Std.Err ## D 14.3215 2.2265 ## rho_o 0.6445 40.3243 ## tau_x 0.0092 0.0327 ## tau_y 0.0084 0.0327 ## ## -------------- ## 19_Tag17704_Z-11_06 ## -------------- ## Parameter Estimate Std.Err ## D 1.4087 0.4486 ## rho_o -0.1439 2567.0576 ## tau_x 5e-04 0.0237 ## tau_y 4e-04 0.0236 ## ## -------------- ## 19_Tag17704_Z-11_07 ## -------------- ## Parameter Estimate Std.Err ## D 97.3494 19.8621 ## . . . ## tau_x 0.0437 0.1951 ## tau_y 0.0488 0.1964 ## ## -------------- ## 19_Tag17704_Z-11_08 ## -------------- ## Parameter Estimate Std.Err ## D 174.1422 26.4944 ## rho_o 0.6814 7432.6653 ## tau_x 0.0012 0.0483 ## tau_y 6e-04 0.0483 ## ## -------------- ## 19_Tag40066_Z-14_01 ## -------------- ## Parameter Estimate Std.Err ## D 42.1258 12.1319 ## rho_o -0.4718 0.2466 ## tau_x 12.8331 2.9847 ## tau_y 10.3429 2.729 ## ## -------------- ## 19_Tag40066_Z-14_02 ## -------------- ## Parameter Estimate Std.Err ## D 13.4396 5.0346 ## rho_o 0.1772 0.3847 ## tau_x 4.5535 1.6881 ## tau_y 15.4554 3.0582 ## ## -------------- ## 19_Tag40066_Z-14_03 ## -------------- ## Parameter Estimate Std.Err ## D 5.3868 2.1987 ## . . . ## tau_x 0.0057 0.0231 ## tau_y 0.0019 0.0224 ## ## -------------- ## 19_Tag40066_Z-14_04 ## -------------- ## Parameter Estimate Std.Err ## D 57.2413 20.0427 ## rho_o 0.278 542.7903 ## tau_x 0.0057 0.1166 ## tau_y 9e-04 0.1347 ## ## -------------- ## 19_Tag40066_Z-14_05 ## -------------- ## Parameter Estimate Std.Err ## D 80.8306 34.3358 ## . . . ## tau_x 0.0019 0.0271 ## tau_y 4e-04 0.027 ## ## -------------- ## 19_Tag40066_Z-14_06 ## -------------- ## Parameter Estimate Std.Err ## D 25.675 6.9994 ## . . . ## tau_x 0.0241 0.0822 ## tau_y 0.0377 0.0863 ## ## -------------- ## 19_Tag40066_Z-14_07 ## -------------- ## Parameter Estimate Std.Err ## D 115.8374 35.0161 ## . . . ## tau_x 0.0189 0.0483 ## tau_y 0.016 0.0469 ## ## -------------- ## 19_Tag40066_Z-14_08 ## -------------- ## Parameter Estimate Std.Err ## D 18.7117 7.1332 ## . . . ## tau_x 0.0071 0.0471 ## tau_y 0.0037 0.0444 ## ## -------------- ## 19_Tag40066_Z-14_09 ## -------------- ## Parameter Estimate Std.Err ## D 4.8204 1.7157 ## . . . ## tau_x 0.0099 0.0399 ## tau_y 0.008 0.0394 ## ## -------------- ## 19_Tag40066_Z-14_10 ## -------------- ## Parameter Estimate Std.Err ## D 8.5876 3.9087 ## . . . ## tau_x 0.0085 0.0294 ## tau_y 0.0085 0.0294 ## ## -------------- ## 19_Tag40066_Z-14_12 ## -------------- ## Parameter Estimate Std.Err ## D 129.0173 34.8894 ## rho_o -0.6707 805.9507 ## tau_x 0.0011 0.0244 ## tau_y 8e-04 0.0244 ## ## -------------- ## 19_Tag40069_Z-6_01 ## -------------- ## Parameter Estimate Std.Err ## D 30.0987 7.7411 ## . . . ## tau_x 0.0305 0.0513 ## tau_y 0.0271 0.0485 ## ## -------------- ## 19_Tag40069_Z-6_02 ## -------------- ## Parameter Estimate Std.Err ## D 41.5104 9.3977 ## . . . ## tau_x 0.0368 0.062 ## tau_y 0.0352 0.0605 ## ## -------------- ## 19_Tag40069_Z-6_03 ## -------------- ## Parameter Estimate Std.Err ## D 69.2744 18.793 ## . . . ## tau_x 0.0402 0.099 ## tau_y 0.0415 0.1006 ## ## -------------- ## 19_Tag40069_Z-6_04 ## -------------- ## Parameter Estimate Std.Err ## D 8.3893 2.4788 ## . . . ## tau_x 0.0088 0.0266 ## tau_y 0.0068 0.0259 ## ## -------------- ## 19_Tag40069_Z-6_05 ## -------------- ## Parameter Estimate Std.Err ## D 6.0143 1.7395 ## . . . ## tau_x 0.0114 0.0263 ## tau_y 0.0113 0.0263 ## ## -------------- ## 19_Tag40069_Z-6_06 ## -------------- ## Parameter Estimate Std.Err ## D 29.3524 6.2564 ## . . . ## tau_x 0.0469 0.1215 ## tau_y 0.0532 0.1295 ## ## -------------- ## 19_Tag40069_Z-6_08 ## -------------- ## Parameter Estimate Std.Err ## D 89.3775 17.2063 ## . . . ## tau_x 0.0514 0.1812 ## tau_y 0.0478 0.1757 ## ## -------------- ## 19_Tag40069_Z-6_09 ## -------------- ## Parameter Estimate Std.Err ## D 31.7211 10.0502 ## . . . ## tau_x 0.0035 0.0608 ## tau_y 0.0071 0.0618 ## ## -------------- ## 19_Tag40069_Z-6_10 ## -------------- ## Parameter Estimate Std.Err ## D 107.3593 33.784 ## . . . ## tau_x 0.0017 0.0715 ## tau_y 0.0017 0.0713 ## ## -------------- ## 19_Tag40069_Z-6_12 ## -------------- ## Parameter Estimate Std.Err ## D 105.3037 29.0259 ## rho_o -0.6976 1659.2987 ## tau_x 7e-04 0.149 ## tau_y 0.0039 0.1492 ## ## -------------- ## 19_Tag40069_Z-6_13 ## -------------- ## Parameter Estimate Std.Err ## D 19.1751 5.7968 ## . . . ## tau_x 0.005 0.0502 ## tau_y 0.0109 0.0525 ## ## -------------- ## 19_Tag40069_Z-6_14 ## -------------- ## Parameter Estimate Std.Err ## D 1.2704 0.3761 ## rho_o 0.2778 9143.9001 ## tau_x 0 0.0243 ## tau_y 5e-04 0.0238 ## ## -------------- ## 19_Tag40069_Z-6_15 ## -------------- ## Parameter Estimate Std.Err ## D 237.0365 45.4973 ## . . . ## tau_x 0.0192 0.0626 ## tau_y 0.0173 0.0619 ## ## -------------- ## 19_Tag40069_Z-6_16 ## -------------- ## Parameter Estimate Std.Err ## D 4.3228 1.26 ## . . . ## tau_x 0.0114 0.0333 ## tau_y 0.0091 0.033 ## ## -------------- ## 19_Tag40069_Z-6_18 ## -------------- ## Parameter Estimate Std.Err ## D 1.4341 0.6121 ## . . . ## tau_x 0.0063 0.0274 ## tau_y 0.0075 0.0278 ## ## -------------- ## 19_Tag40073_Z-1_01 ## -------------- ## Parameter Estimate Std.Err ## D 138.4244 54.3607 ## rho_o -0.6283 0.2208 ## tau_x 43.3276 10.9036 ## tau_y 13.5248 4.0772 ## ## -------------- ## 19_Tag40073_Z-1_02 ## -------------- ## Parameter Estimate Std.Err ## D 223.3195 66.2898 ## rho_o 0.1499 0.5059 ## tau_x 32.2744 8.3587 ## tau_y 12.2189 4.196 ## ## -------------- ## 19_Tag40073_Z-1_03 ## -------------- ## Parameter Estimate Std.Err ## D 198.7292 81.7644 ## rho_o 0.9 0.4387 ## tau_x 11.1274 5.9205 ## tau_y 30.9487 6.118 ## ## -------------- ## 19_Tag40073_Z-1_04 ## -------------- ## Parameter Estimate Std.Err ## D 438.5647 115.8146 ## rho_o -0.7991 7562.2982 ## . . . ## tau_y 0.0023 0.2091 ## ## -------------- ## 19_Tag40073_Z-1_05 ## -------------- ## Parameter Estimate Std.Err ## D 296.7957 65.9058 ## . . . ## tau_x 0.0132 0.0319 ## tau_y 0.0101 0.0305 ## ## -------------- ## 19_Tag40073_Z-1_06 ## -------------- ## Parameter Estimate Std.Err ## D 292.8458 60.9921 ## . . . ## tau_x 0.034 0.1294 ## tau_y 0.041 0.1316 ## ## -------------- ## 19_Tag40073_Z-1_07 ## -------------- ## Parameter Estimate Std.Err ## D 456.8777 106.8498 ## . . . ## tau_x 0 0.0759 ## tau_y 4e-04 0.0974 ## ## -------------- ## 19_Tag40073_Z-1_08 ## -------------- ## Parameter Estimate Std.Err ## D 435.351 83.4682 ## . . . ## tau_x 0.064 0.4816 ## tau_y 0.034 0.3817 ## ## -------------- ## 19_Tag40073_Z-1_09 ## -------------- ## Parameter Estimate Std.Err ## D 400.8626 92.0076 ## . . . ## tau_x 0 0.0334 ## tau_y 2e-04 0.0335 ## ## -------------- ## 19_Tag40073_Z-1_10 ## -------------- ## Parameter Estimate Std.Err ## D 211.8875 25.3111 ## . . . ## tau_x 0.0367 0.1437 ## tau_y 0.0319 0.132 ## ## -------------- ## 19_Tag40073_Z-1_11 ## -------------- ## Parameter Estimate Std.Err ## D 174.4777 35.1204 ## . . . ## tau_x 0.051 0.2086 ## tau_y 0.0419 0.1994 ## ## -------------- ## 19_Tag40073_Z-1_12 ## -------------- ## Parameter Estimate Std.Err ## D 38.6438 9.3876 ## . . . ## tau_x 0.0111 0.0396 ## tau_y 0.0052 0.0375 ## ## -------------- ## 19_Tag40073_Z-1_13 ## -------------- ## Parameter Estimate Std.Err ## D 246.7785 61.4635 ## . . . ## tau_x 0.0525 0.316 ## tau_y 0.0447 0.2924 ## ## -------------- ## 19_Tag40073_Z-1_14 ## -------------- ## Parameter Estimate Std.Err ## D 186.9568 22.0448 ## rho_o -0.2042 58.9885 ## tau_x 0.0583 0.3531 ## tau_y 0.0522 0.3055 ## ## -------------- ## 19_Tag40073_Z-1_15 ## -------------- ## Parameter Estimate Std.Err ## D 407.6603 94.1459 ## . . . ## tau_x 0.0212 0.0536 ## tau_y 0.0154 0.0513 ## ## -------------- ## 19_Tag40073_Z-1_16 ## -------------- ## Parameter Estimate Std.Err ## D 183.366 19.3934 ## . . . ## tau_x 0.038 0.1781 ## tau_y 0.05 0.1784 ## ## -------------- ## 19_Tag40078_Z-3 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 9.6497 4.2126 ## rho_o -0.722 0.1088 ## tau_x 24.1999 3.8873 ## tau_y 11.9091 2.1988 ## ## -------------- ## 19_Tag40086_Z-11 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 284.8668 60.9869 ## . . . ## tau_x 1e-04 0.0296 ## tau_y 0.0045 0.031 ## ## -------------- ## 19_Tag40086_Z-11 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 265.4341 93.389 ## . . . ## tau_x 5e-04 0.0225 ## tau_y 0.0013 0.0225 ## ## -------------- ## 19_Tag40086_Z-11 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 143.9854 8.7812 ## . . . ## tau_x 9e-04 0.1347 ## tau_y 0.1158 0.2619 ## ## -------------- ## 19_Tag40094_Z-16_01 ## -------------- ## Parameter Estimate Std.Err ## D 0.048 0.0493 ## rho_o 0.9332 0.0743 ## tau_x 18.4527 5.8747 ## tau_y 18.6315 6.2676 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 0.1962 0.0794 ## . . . ## tau_x 0.005 0.0229 ## tau_y 0.0055 0.0231 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 239.5316 51.5779 ## . . . ## tau_x 0.0214 0.0461 ## tau_y 0.0016 0.0399 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 35.7564 16.8261 ## rho_o -0.0405 0.2435 ## tau_x 38.7301 7.5698 ## tau_y 21.8172 4.8777 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## . . . ## . . . ## . . . ## tau_y 39.7542 9.1307 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 758.7265 203.0865 ## rho_o -0.6498 146.8704 ## . . . ## tau_y 0.1586 0.4176 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_06 ## -------------- ## Parameter Estimate Std.Err ## D 12.0463 7.8434 ## rho_o 0.0693 0.3102 ## tau_x 30.8144 7.8111 ## tau_y 40.5926 8.5143 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_07 ## -------------- ## Parameter Estimate Std.Err ## D 166.03 18.375 ## . . . ## tau_x 0.0457 0.0725 ## tau_y 0.0024 0.0502 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 31.1102 17.0917 ## rho_o -0.6145 0.2656 ## tau_x 35.646 9.6077 ## tau_y 23.628 6.4031 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_09 ## -------------- ## Parameter Estimate Std.Err ## D 802.0764 190.3635 ## rho_o 0.8694 3.955 ## tau_x 0.0263 0.0787 ## tau_y 0.045 0.0838 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_10 ## -------------- ## Parameter Estimate Std.Err ## D 256.3812 43.0693 ## . . . ## tau_x 0.055 0.0916 ## tau_y 0.0036 0.07 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_13 ## -------------- ## Parameter Estimate Std.Err ## D 260.3931 105.8716 ## . . . ## tau_x 0.0365 0.1414 ## tau_y 0.0268 0.1388 ## ## -------------- ## 19_Tag40118_Z-2 (2nd Parent)_14 ## -------------- ## Parameter Estimate Std.Err ## D 0.4418 0.2408 ## . . . ## tau_x 0.0062 0.0184 ## tau_y 2.1343 1.3996 ## ## -------------- ## 19_Tag40133_Z-15_01 ## -------------- ## Parameter Estimate Std.Err ## D 0.3045 0.4027 ## rho_o 0.8599 0.1009 ## tau_x 17.2898 4.4795 ## tau_y 6.0113 1.6917 ## ## -------------- ## 19_Tag40133_Z-15_02 ## -------------- ## Parameter Estimate Std.Err ## D 56.1402 22.7557 ## rho_o 0.9749 10.1475 ## tau_x 0.0046 0.0477 ## tau_y 0.0147 0.0489 ## ## -------------- ## 19_Tag40133_Z-15_03 ## -------------- ## Parameter Estimate Std.Err ## D 374.4768 65.5989 ## . . . ## tau_x 0.0423 0.1212 ## tau_y 0.0287 0.1167 ## ## -------------- ## 19_Tag40133_Z-15_06 ## -------------- ## Parameter Estimate Std.Err ## D 2.8599 1.2477 ## . . . ## tau_x 0.0084 0.0261 ## tau_y 0.0058 0.0253 ## ## -------------- ## 19_Tag40133_Z-15_08 ## -------------- ## Parameter Estimate Std.Err ## D 138.5758 39.9352 ## . . . ## tau_x 0.0578 0.2166 ## tau_y 0.0536 0.2152 ## ## -------------- ## 19_Tag40133_Z-15_10 ## -------------- ## Parameter Estimate Std.Err ## D 401.2721 163.2287 ## rho_o -0.9576 4460.3963 ## tau_x 7e-04 0.2653 ## tau_y 4e-04 0.2514 ## ## -------------- ## 19_Tag40133_Z-15_11 ## -------------- ## Parameter Estimate Std.Err ## D 381.3797 190.0678 ## . . . ## tau_x 3e-04 0.0838 ## tau_y 3e-04 0.0848 ## ## -------------- ## 19_Tag40138_Z-17_01 ## -------------- ## Parameter Estimate Std.Err ## D 18.6727 4.6289 ## . . . ## tau_x 0.0022 0.0318 ## tau_y 0.0694 0.099 ## ## -------------- ## 19_Tag40138_Z-17_03 ## -------------- ## Parameter Estimate Std.Err ## D 75.9353 7.7878 ## . . . ## tau_x 0.0267 0.1438 ## tau_y 0.0875 0.1669 ## ## -------------- ## 19_Tag40138_Z-17_04 ## -------------- ## Parameter Estimate Std.Err ## D 110.068 14.3214 ## . . . ## tau_x 0.0338 0.0891 ## tau_y 0.0282 0.0867 ## ## -------------- ## 19_Tag40138_Z-17_05 ## -------------- ## Parameter Estimate Std.Err ## D 118.1348 31.5101 ## . . . ## tau_x 0.0174 0.052 ## tau_y 0.018 0.0518 ## ## -------------- ## 19_Tag40138_Z-17_06 ## -------------- ## Parameter Estimate Std.Err ## D 76.0489 8.316 ## . . . ## tau_x 0.0179 0.0444 ## tau_y 0.0176 0.0446 ## ## -------------- ## 19_Tag40170_Z-12_01 ## -------------- ## Parameter Estimate Std.Err ## D 49.9337 12.6457 ## rho_o 0.2687 0.2365 ## tau_x 17.8487 2.7001 ## tau_y 10.2675 1.9991 ## ## -------------- ## 19_Tag40170_Z-12_02 ## -------------- ## Parameter Estimate Std.Err ## D 24.457 14.4565 ## rho_o 0.5177 0.2506 ## tau_x 7.7639 2.5931 ## tau_y 7.4463 3.5163 ## ## -------------- ## 19_Tag40170_Z-12_04 ## -------------- ## Parameter Estimate Std.Err ## D 31.4732 7.0075 ## . . . ## tau_x 0.1841 0.2803 ## tau_y 0.0198 0.0955 ## ## -------------- ## 19_Tag40170_Z-12_05 ## -------------- ## Parameter Estimate Std.Err ## D 46.9649 9.6866 ## . . . ## tau_x 0.1447 0.2206 ## tau_y 0.0725 0.163 ## ## -------------- ## 19_Tag40170_Z-12_06 ## -------------- ## Parameter Estimate Std.Err ## D 188.8636 40.2385 ## rho_o -0.2263 5108.7476 ## tau_x 2e-04 0.206 ## tau_y 0.0141 0.1738 ## ## -------------- ## 19_Tag40170_Z-12_07 ## -------------- ## Parameter Estimate Std.Err ## D 181.7097 38.6987 ## . . . ## tau_x 0.0018 0.1066 ## tau_y 0.0183 0.1208 ## ## -------------- ## 19_Tag40170_Z-12_08 ## -------------- ## Parameter Estimate Std.Err ## D 85.2337 17.5343 ## . . . ## tau_x 0.0301 0.083 ## tau_y 0.0332 0.0857 ## ## -------------- ## 19_Tag40170_Z-12_09 ## -------------- ## Parameter Estimate Std.Err ## D 143.9605 30.6801 ## rho_o -0.0666 12837.8186 ## tau_x 3e-04 0.4055 ## tau_y 0.0072 0.0946 ## ## -------------- ## 19_Tag40170_Z-12_10 ## -------------- ## Parameter Estimate Std.Err ## D 121.9424 25.4072 ## . . . ## tau_x 0.002 0.0368 ## tau_y 0.0128 0.0882 ## ## -------------- ## 19_Tag40170_Z-12_11 ## -------------- ## Parameter Estimate Std.Err ## D 55.2567 12.0914 ## . . . ## tau_x 7e-04 0.0379 ## tau_y 0.0042 0.0382 ## ## -------------- ## 19_Tag40170_Z-12_12 ## -------------- ## Parameter Estimate Std.Err ## D 312.809 71.3359 ## . . . ## tau_x 0.0125 0.0298 ## tau_y 0.0096 0.0286 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 0.1657 0.1029 ## rho_o 0.0191 0.3416 ## tau_x 6.6642 1.5843 ## tau_y 30.4723 6.2691 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 44.8392 10.2766 ## rho_o 0.9766 4.5363 ## tau_x 0.026 0.0809 ## tau_y 0.0165 0.0735 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## D 149.3585 37.1297 ## rho_o -0.595 263.0916 ## tau_x 0.0016 0.1855 ## tau_y 0.0275 0.1727 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 95.6141 13.7589 ## rho_o 0.3727 0.1203 ## tau_x 28.1971 2.7546 ## tau_y 31.9119 3.0968 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_06 ## -------------- ## Parameter Estimate Std.Err ## D 143.9601 37.3549 ## . . . ## tau_x 0.0093 0.025 ## tau_y 0.0118 0.0262 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_07 ## -------------- ## Parameter Estimate Std.Err ## D 1.7493 0.8803 ## rho_o -0.4923 0.2396 ## tau_x 10.2885 2.9251 ## tau_y 28.4702 5.6362 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 5.9916 1.849 ## . . . ## tau_x 39.0953 8.4843 ## . . . ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_09 ## -------------- ## Parameter Estimate Std.Err ## D 24.9683 9.5519 ## rho_o -0.3082 0.4184 ## tau_x 13.1946 3.8855 ## tau_y 30.1245 8.0651 ## ## -------------- ## 19_Tag40177_Z-17 (2nd Parent)_10 ## -------------- ## Parameter Estimate Std.Err ## D 116.1311 15.2164 ## rho_o -0.0661 0.1143 ## tau_x 28.8696 2.6153 ## tau_y 30.2792 2.8299 ## ## -------------- ## 19_Tag40182_Z-4_01 ## -------------- ## Parameter Estimate Std.Err ## D 125.7093 31.6788 ## . . . ## tau_x 0.0335 0.0674 ## tau_y 0.0232 0.0622 ## ## -------------- ## 19_Tag40182_Z-4_02 ## -------------- ## Parameter Estimate Std.Err ## D 277.115 104.7945 ## . . . ## tau_x 1e-04 0.0561 ## tau_y 0.0011 0.0629 ## ## -------------- ## 19_Tag40182_Z-4_03 ## -------------- ## Parameter Estimate Std.Err ## D 24.3221 9.96 ## rho_o 0.8685 108.6377 ## tau_x 0.0017 0.0532 ## tau_y 0.0158 0.0544 ## ## -------------- ## 19_Tag40182_Z-4_04 ## -------------- ## Parameter Estimate Std.Err ## D 19.0477 3.3371 ## . . . ## tau_x 0.0396 0.0709 ## tau_y 0.0355 0.0681 ## ## -------------- ## 19_Tag40182_Z-4_05 ## -------------- ## Parameter Estimate Std.Err ## D 71.8642 17.0562 ## . . . ## tau_x 0.0328 0.1062 ## tau_y 0.0381 0.1081 ## ## -------------- ## 19_Tag40182_Z-4_06 ## -------------- ## Parameter Estimate Std.Err ## D 12.064 2.7767 ## . . . ## tau_x 0.0118 0.0392 ## tau_y 0.0145 0.0403 ## ## -------------- ## 19_Tag40182_Z-4_07 ## -------------- ## Parameter Estimate Std.Err ## D 139.3244 25.9949 ## . . . ## tau_x 0.0116 0.0257 ## tau_y 0.0095 0.0247 ## ## -------------- ## 19_Tag40182_Z-4_09 ## -------------- ## Parameter Estimate Std.Err ## D 80.9065 23.4289 ## . . . ## tau_x 0.0371 0.1318 ## tau_y 0.0325 0.1304 ## ## -------------- ## 19_Tag40182_Z-4_10 ## -------------- ## Parameter Estimate Std.Err ## D 40.7693 11.7551 ## . . . ## tau_x 0.0023 0.0621 ## tau_y 0.0071 0.0635 ## ## -------------- ## 19_Tag40182_Z-4_11 ## -------------- ## Parameter Estimate Std.Err ## D 270.5402 59.8884 ## . . . ## tau_x 0.0379 0.2854 ## tau_y 0.0473 0.2869 ## ## -------------- ## 19_Tag40182_Z-4_12 ## -------------- ## Parameter Estimate Std.Err ## D 33.6387 10.7388 ## . . . ## tau_x 0.0024 0.0328 ## tau_y 0.0025 0.0329 ## ## -------------- ## 19_Tag40182_Z-4_13 ## -------------- ## Parameter Estimate Std.Err ## D 6.4177 2.5808 ## . . . ## tau_x 0.0081 0.0257 ## tau_y 0.0087 0.0259 ## ## -------------- ## 19_Tag40182_Z-4_14 ## -------------- ## Parameter Estimate Std.Err ## D 49.0759 17.3656 ## rho_o -0.5052 299.3058 ## tau_x 0.0012 0.0386 ## tau_y 0.0019 0.039 ## ## -------------- ## 19_Tag40182_Z-4_15 ## -------------- ## Parameter Estimate Std.Err ## D 1.1472 0.4147 ## . . . ## tau_x 0.0091 0.0324 ## tau_y 0.0069 0.0304 ## ## -------------- ## 20_Tag17600_Z-170_01 ## -------------- ## Parameter Estimate Std.Err ## D 1.426 0.4756 ## . . . ## tau_x 3.2864 1.2047 ## tau_y 2.6309 1.0187 ## ## -------------- ## 20_Tag17600_Z-170_02 ## -------------- ## Parameter Estimate Std.Err ## D 115.7025 25.3297 ## . . . ## tau_x 0.0162 0.0303 ## tau_y 0.0158 0.03 ## ## -------------- ## 20_Tag17600_Z-170_03 ## -------------- ## Parameter Estimate Std.Err ## D 296.5539 49.2962 ## . . . ## tau_x 0.0047 0.0783 ## . . . ## ## -------------- ## 20_Tag17600_Z-170_04 ## -------------- ## Parameter Estimate Std.Err ## D 494.7693 156.1079 ## . . . ## tau_x 0 0.0017 ## tau_y 0.013 0.3617 ## ## -------------- ## 20_Tag17600_Z-170_05 ## -------------- ## Parameter Estimate Std.Err ## D 145.9768 24.8101 ## . . . ## tau_x 0.0043 0.0651 ## tau_y 0.0294 0.072 ## ## -------------- ## 20_Tag17600_Z-170_06 ## -------------- ## Parameter Estimate Std.Err ## D 1013.632 267.2594 ## . . . ## tau_x 0.0181 0.3219 ## tau_y 0.1718 0.5857 ## ## -------------- ## 20_Tag17600_Z-170_07 ## -------------- ## Parameter Estimate Std.Err ## D 3.6866 12.7867 ## rho_o -0.6353 0.2661 ## tau_x 112.181 56.7008 ## tau_y 98.0478 53.1628 ## ## -------------- ## 20_Tag17600_Z-170_08 ## -------------- ## Parameter Estimate Std.Err ## D 733.0675 167.314 ## rho_o -0.7974 60.0055 ## tau_x 0.0164 0.124 ## tau_y 0.0198 0.1243 ## ## -------------- ## 20_Tag17600_Z-170_09 ## -------------- ## Parameter Estimate Std.Err ## D 319.6958 58.1196 ## rho_o -0.1271 176827.4855 ## tau_x 0 0.156 ## tau_y 1e-04 0.3049 ## ## -------------- ## 20_Tag17604_Z-95_01 ## -------------- ## Parameter Estimate Std.Err ## D 260.3956 52.7297 ## . . . ## tau_x 0.0141 0.0355 ## tau_y 0.0167 0.0367 ## ## -------------- ## 20_Tag17604_Z-95_03 ## -------------- ## Parameter Estimate Std.Err ## D 228.5685 58.8795 ## rho_o -0.2213 164.1271 ## . . . ## tau_y 0.0043 0.1256 ## ## -------------- ## 20_Tag17604_Z-95_04 ## -------------- ## Parameter Estimate Std.Err ## D 218.5215 59.6664 ## . . . ## tau_x 0.0223 0.0329 ## tau_y 0.0565 0.093 ## ## -------------- ## 20_Tag17604_Z-95_05 ## -------------- ## Parameter Estimate Std.Err ## D 275.7198 79.6136 ## . . . ## tau_x 0.0213 0.0846 ## tau_y 0.0127 0.0826 ## ## -------------- ## 20_Tag17604_Z-95_06 ## -------------- ## Parameter Estimate Std.Err ## D 537.7456 218.7571 ## . . . ## tau_x 6e-04 0.0458 ## tau_y 1e-04 0.0432 ## ## -------------- ## 20_Tag17604_Z-95_07 ## -------------- ## Parameter Estimate Std.Err ## D 287.7892 90.7858 ## rho_o -0.4984 2129.1572 ## . . . ## tau_y 0.0152 0.2807 ## ## -------------- ## 20_Tag17604_Z-95_08 ## -------------- ## Parameter Estimate Std.Err ## D 301.2868 146.1341 ## rho_o 0.8027 6240.4805 ## tau_x 0 0.1949 ## tau_y 0.0015 0.1215 ## ## -------------- ## 20_Tag17604_Z-95_09 ## -------------- ## Parameter Estimate Std.Err ## D 0.9596 0.4096 ## . . . ## tau_x 0.0023 0.0268 ## tau_y 0.0023 0.0268 ## ## -------------- ## 20_Tag17604_Z-95_10 ## -------------- ## Parameter Estimate Std.Err ## D 137.1174 51.7768 ## rho_o 0.528 29221.1052 ## tau_x 1e-04 0.1135 ## tau_y 0.0027 0.1134 ## ## -------------- ## 20_Tag17604_Z-95_11 ## -------------- ## Parameter Estimate Std.Err ## D 626.7368 181.5341 ## . . . ## tau_x 0.0149 0.0414 ## tau_y 0.0115 0.04 ## ## -------------- ## 20_Tag17604_Z-95_12 ## -------------- ## Parameter Estimate Std.Err ## D 131.2088 55.8211 ## . . . ## tau_x 77.6084 23.5816 ## . . . ## ## -------------- ## 20_Tag17604_Z-95_13 ## -------------- ## Parameter Estimate Std.Err ## D 166.5693 110.6504 ## rho_o -0.0331 0.5616 ## tau_x 60.3086 22.4905 ## tau_y 31.4424 13.769 ## ## -------------- ## 20_Tag17604_Z-95_14 ## -------------- ## Parameter Estimate Std.Err ## D 276.5236 90.344 ## . . . ## tau_x 75.7015 23.1327 ## tau_y 5e-04 0.0328 ## ## -------------- ## 20_Tag17604_Z-95_15 ## -------------- ## Parameter Estimate Std.Err ## D 291.4771 110.0642 ## . . . ## tau_x 58.9856 24.8713 ## . . . ## ## -------------- ## 20_Tag17604_Z-95_16 ## -------------- ## Parameter Estimate Std.Err ## D 508.7253 140.755 ## rho_o -0.9885 122.8177 ## tau_x 0 1e-04 ## tau_y 1e-04 0.2531 ## ## -------------- ## 20_Tag17604_Z-95_17 ## -------------- ## Parameter Estimate Std.Err ## D 38.8293 12.3441 ## rho_o -0.8549 0.0705 ## tau_x 114.8782 18.365 ## tau_y 33.2823 6.8213 ## ## -------------- ## 20_Tag17644_Z-106_01 ## -------------- ## Parameter Estimate Std.Err ## D 344.9462 60.2061 ## rho_o -0.376 198.2165 ## tau_x 0.0031 0.1404 ## tau_y 0.0506 0.1212 ## ## -------------- ## 20_Tag17677_Z-170 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 75.4445 35.3476 ## . . . ## tau_x 0.0114 0.0252 ## tau_y 0.0111 0.0251 ## ## -------------- ## 20_Tag17677_Z-170 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 462.0832 50.8035 ## . . . ## tau_x 0.0139 0.0288 ## tau_y 8.8769 5.8386 ## ## -------------- ## 20_Tag17677_Z-170 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 33.2837 10.5232 ## . . . ## tau_x 36.8459 8.3916 ## tau_y 0.0337 0.0478 ## ## -------------- ## 20_Tag17700_VM-13_01 ## -------------- ## Parameter Estimate Std.Err ## D 75.4445 35.3476 ## . . . ## tau_x 0.0114 0.0252 ## tau_y 0.0111 0.0251 ## ## -------------- ## 20_Tag17700_VM-13_02 ## -------------- ## Parameter Estimate Std.Err ## D 946.3604 93.6694 ## . . . ## tau_x 0.0016 0.0275 ## tau_y 19.9758 7.162 ## ## -------------- ## 20_Tag17717_VM-8_01 ## -------------- ## Parameter Estimate Std.Err ## D 64.853 48.4544 ## rho_o -0.9462 1.3356 ## tau_x 10.191 3.7379 ## tau_y 5.2387 5.4931 ## ## -------------- ## 20_Tag17717_VM-8_03 ## -------------- ## Parameter Estimate Std.Err ## D 262.3201 18.3067 ## . . . ## tau_x 0.0445 0.1376 ## tau_y 0.0347 0.1345 ## ## -------------- ## 20_Tag17717_VM-8_05 ## -------------- ## Parameter Estimate Std.Err ## D 381.7849 98.495 ## . . . ## tau_x 0.005 0.1087 ## tau_y 0.0114 0.1092 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 35.896 10.4834 ## rho_o -0.7144 0.1444 ## tau_x 14.2262 2.8609 ## tau_y 12.0754 2.5037 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 99.8427 46.8876 ## rho_o -0.367 0.2801 ## tau_x 21.6573 6.1704 ## tau_y 20.4684 6.1723 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 155.5059 58.4359 ## rho_o 0.9982 0.0119 ## tau_x 39.4785 12.6545 ## tau_y 16.7033 7.813 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## D 84.5664 30.1942 ## rho_o 0.0589 0.2954 ## tau_x 32.4074 6.911 ## tau_y 31.7158 6.6657 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 55.7985 21.193 ## rho_o -0.382 0.3715 ## tau_x 20.6518 6.6954 ## tau_y 19.5069 5.8559 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_06 ## -------------- ## Parameter Estimate Std.Err ## . . . ## rho_o 0.2473 0.2653 ## tau_x 192.0332 43.2524 ## tau_y 215.0743 36.5567 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 202.4907 19.1535 ## rho_o -0.178 11.7499 ## tau_x 0.1482 0.2654 ## . . . ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_09 ## -------------- ## Parameter Estimate Std.Err ## D 789.1964 223.112 ## . . . ## tau_x 0.0031 0.0268 ## tau_y 0.0021 0.0267 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_10 ## -------------- ## Parameter Estimate Std.Err ## D 405.6492 167.4275 ## rho_o -0.9941 0.0155 ## tau_x 64.0506 23.9418 ## . . . ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_11 ## -------------- ## Parameter Estimate Std.Err ## D 658.6681 198.2624 ## . . . ## tau_x 7e-04 0.3064 ## tau_y 0.0037 0.342 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_12 ## -------------- ## Parameter Estimate Std.Err ## D 173.2172 76.1159 ## rho_o -0.5816 0.6219 ## tau_x 29.4599 9.3456 ## tau_y 10.3692 6.8269 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_13 ## -------------- ## Parameter Estimate Std.Err ## D 310.9377 136.7044 ## . . . ## tau_x 78.6428 36.2272 ## tau_y 0.0859 0.3723 ## ## -------------- ## 20_Tag40024_Z-178 (2nd Parent)_14 ## -------------- ## Parameter Estimate Std.Err ## D 614.9623 346.7467 ## rho_o -0.9666 5354.9743 ## tau_x 2e-04 0.028 ## tau_y 0 0.0281 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 122.0708 41.9559 ## rho_o -0.0483 0.3356 ## tau_x 20.2397 4.648 ## tau_y 17.4172 5.7737 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 55.9372 16.0551 ## rho_o -0.8716 0.0843 ## tau_x 21.3216 3.4589 ## tau_y 16.9902 3.3265 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 128.6754 40.93 ## rho_o -0.4536 0.2951 ## tau_x 38.7726 8.2471 ## tau_y 18.8278 4.233 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## D 154.9975 53.7371 ## rho_o -0.651 0.1769 ## tau_x 53.1191 9.895 ## tau_y 27.0942 6.6741 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 218.2741 36.2973 ## . . . ## tau_x 0.0337 0.1083 ## tau_y 0.0024 0.103 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_06 ## -------------- ## Parameter Estimate Std.Err ## D 471.58 106.9922 ## . . . ## tau_x 0.0172 0.1794 ## tau_y 0.0967 0.2 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_07 ## -------------- ## Parameter Estimate Std.Err ## D 451.3552 97.6788 ## . . . ## tau_x 0 0.3952 ## tau_y 0.001 0.4061 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 137.6213 29.8481 ## . . . ## tau_x 0.044 0.1261 ## tau_y 0.0294 0.1043 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_09 ## -------------- ## Parameter Estimate Std.Err ## D 308.0429 54.1835 ## . . . ## tau_x 0 0.0099 ## tau_y 0.0029 0.0813 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_10 ## -------------- ## Parameter Estimate Std.Err ## D 203.8806 31.9876 ## . . . ## tau_x 0.0168 0.0377 ## tau_y 0.013 0.0356 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_11 ## -------------- ## Parameter Estimate Std.Err ## D 323.6041 49.3349 ## . . . ## tau_x 0.05 0.1348 ## tau_y 0.0476 0.1357 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_12 ## -------------- ## Parameter Estimate Std.Err ## D 83.743 23.5018 ## rho_o -0.5316 0.2749 ## tau_x 22.5507 5.7114 ## tau_y 21.17 5.2908 ## ## -------------- ## 20_Tag40039_Z-15 (2nd Parent)_13 ## -------------- ## Parameter Estimate Std.Err ## D 264.4288 24.5753 ## . . . ## tau_x 0.0187 0.055 ## . . . ## ## -------------- ## 20_Tag40073_Z-131 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 170.8414 29.0441 ## . . . ## tau_x 0.0113 0.0635 ## tau_y 0.0275 0.0663 ## ## -------------- ## 20_Tag40073_Z-131 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 38.4895 14.2744 ## rho_o -0.8155 0.1209 ## tau_x 29.0526 7.1339 ## tau_y 21.9719 6.114 ## ## -------------- ## 20_Tag40073_Z-131 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 184.5211 67.7317 ## rho_o 0.462 0.3395 ## tau_x 20.6599 4.581 ## tau_y 41.833 11.2308 ## ## -------------- ## 20_Tag40073_Z-131 (2nd Parent)_07 ## -------------- ## Parameter Estimate Std.Err ## D 66.751 22.8846 ## rho_o -0.3271 0.3976 ## tau_x 18.3939 5.3155 ## tau_y 18.3901 6.5341 ## ## -------------- ## 20_Tag40073_Z-131 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 292.5281 34.6315 ## . . . ## tau_x 0 0.2135 ## tau_y 0 0.214 ## ## -------------- ## 20_Tag40078_Z-178_01 ## -------------- ## Parameter Estimate Std.Err ## D 189.7379 35.6259 ## . . . ## tau_x 0.0219 0.0379 ## tau_y 0.0181 0.0354 ## ## -------------- ## 20_Tag40078_Z-178_02 ## -------------- ## Parameter Estimate Std.Err ## D 375.4881 69.9234 ## . . . ## tau_x 0.0913 0.1942 ## tau_y 0.0018 0.1629 ## ## -------------- ## 20_Tag40078_Z-178_03 ## -------------- ## Parameter Estimate Std.Err ## D 130.2362 52.0591 ## rho_o 0.6172 0.2283 ## tau_x 37.4132 10.1275 ## tau_y 18.1568 6.1284 ## ## -------------- ## 20_Tag40078_Z-178_04 ## -------------- ## Parameter Estimate Std.Err ## D 475.0246 89.4321 ## . . . ## tau_x 0.0756 0.257 ## tau_y 2e-04 0.163 ## ## -------------- ## 20_Tag40086_VM-3_01 ## -------------- ## Parameter Estimate Std.Err ## D 258.3993 77.0221 ## . . . ## tau_x 1e-04 0.0238 ## tau_y 9e-04 0.0239 ## ## -------------- ## 20_Tag40086_VM-3_03 ## -------------- ## Parameter Estimate Std.Err ## D 29.8744 12.1493 ## rho_o -0.2515 221.277 ## tau_x 0.0024 0.0513 ## tau_y 0.0025 0.0504 ## ## -------------- ## 20_Tag40086_VM-3_08 ## -------------- ## Parameter Estimate Std.Err ## D 131.6125 53.0524 ## . . . ## tau_x 0.0023 0.2129 ## tau_y 0.002 0.2102 ## ## -------------- ## 20_Tag40086_VM-3_11 ## -------------- ## Parameter Estimate Std.Err ## D 7.9405 3.7102 ## . . . ## tau_x 0.0104 0.0296 ## tau_y 0.0117 0.0302 ## ## -------------- ## 20_Tag40086_VM-3_12 ## -------------- ## Parameter Estimate Std.Err ## D 392.1474 111.7716 ## rho_o 0.5279 119.6515 ## tau_x 0.0453 0.3686 ## tau_y 0.047 0.3706 ## ## -------------- ## 20_Tag40086_VM-3_13 ## -------------- ## Parameter Estimate Std.Err ## D 169.1546 59.6891 ## . . . ## tau_x 0.0016 0.1752 ## tau_y 0.001 0.1801 ## ## -------------- ## 20_Tag40094_Z-131_01 ## -------------- ## Parameter Estimate Std.Err ## D 38.0577 13.2206 ## rho_o -0.0448 0.237 ## tau_x 24.1085 3.9557 ## tau_y 15.5299 3.3019 ## ## -------------- ## 20_Tag40094_Z-131_02 ## -------------- ## Parameter Estimate Std.Err ## D 51.206 10.2498 ## . . . ## tau_x 0.023 0.059 ## tau_y 0.0177 0.057 ## ## -------------- ## 20_Tag40094_Z-131_03 ## -------------- ## Parameter Estimate Std.Err ## D 315.1624 21.072 ## . . . ## tau_x 0.0208 0.0766 ## tau_y 0.0145 0.073 ## ## -------------- ## 20_Tag40094_Z-131_04 ## -------------- ## Parameter Estimate Std.Err ## D 259.4144 68.9771 ## . . . ## tau_x 0 0.0094 ## tau_y 0.0477 0.2864 ## ## -------------- ## 20_Tag40094_Z-131_05 ## -------------- ## Parameter Estimate Std.Err ## D 157.544 49.0685 ## rho_o -0.9367 0.0931 ## tau_x 34.2245 8.005 ## tau_y 27.9879 6.9621 ## ## -------------- ## 20_Tag40094_Z-131_06 ## -------------- ## Parameter Estimate Std.Err ## D 392.9747 73.9425 ## . . . ## tau_x 0.2645 0.4629 ## tau_y 0.0087 0.4698 ## ## -------------- ## 20_Tag40094_Z-131_07 ## -------------- ## Parameter Estimate Std.Err ## D 126.3106 25.3924 ## rho_o -0.3488 0.2546 ## tau_x 35.3302 6.3087 ## tau_y 16.8354 4.0291 ## ## -------------- ## 20_Tag40118_Z-175_01 ## -------------- ## Parameter Estimate Std.Err ## D 170.003 40.1076 ## rho_o -0.6746 79.4267 ## . . . ## tau_y 0.0091 0.0529 ## ## -------------- ## 20_Tag40118_Z-175_02 ## -------------- ## Parameter Estimate Std.Err ## D 366.0772 101.8279 ## rho_o -0.2232 491208.6376 ## tau_x 0 0.0225 ## tau_y 1e-04 0.0225 ## ## -------------- ## 20_Tag40118_Z-175_03 ## -------------- ## Parameter Estimate Std.Err ## D 258.1958 64.5391 ## . . . ## tau_x 0.058 0.2346 ## tau_y 0.0343 0.1801 ## ## -------------- ## 20_Tag40118_Z-175_04 ## -------------- ## Parameter Estimate Std.Err ## D 380.9481 61.1444 ## . . . ## tau_x 0.036 0.188 ## tau_y 0.0377 0.1926 ## ## -------------- ## 20_Tag40118_Z-175_05 ## -------------- ## Parameter Estimate Std.Err ## D 327.4559 58.6717 ## rho_o 0.9472 6097.2373 ## tau_x 0 0.0722 ## tau_y 0 0.0532 ## ## -------------- ## 20_Tag40118_Z-175_06 ## -------------- ## Parameter Estimate Std.Err ## D 29.4964 8.5027 ## . . . ## tau_x 0.0063 0.0813 ## tau_y 0.0179 0.0833 ## ## -------------- ## 20_Tag40118_Z-175_07 ## -------------- ## Parameter Estimate Std.Err ## D 56.4428 16.9629 ## . . . ## tau_x 89.4529 18.6272 ## tau_y 0.0037 0.036 ## ## -------------- ## 20_Tag40118_Z-175_08 ## -------------- ## Parameter Estimate Std.Err ## D 0.0274 0.0515 ## rho_o 0.9982 0.0047 ## tau_x 5.9334 2.1294 ## tau_y 12.6549 5.1724 ## ## -------------- ## 20_Tag40118_Z-175_09 ## -------------- ## Parameter Estimate Std.Err ## D 245.9255 28.3038 ## . . . ## tau_x 0.0336 0.1899 ## tau_y 0.0387 0.188 ## ## -------------- ## 20_Tag40118_Z-175_10 ## -------------- ## Parameter Estimate Std.Err ## D 291.9839 18.3843 ## . . . ## tau_x 0.0546 0.089 ## tau_y 0.0034 0.0222 ## ## -------------- ## 20_Tag40118_Z-175_11 ## -------------- ## Parameter Estimate Std.Err ## D 439.0069 103.5195 ## . . . ## tau_x 0 0.0316 ## tau_y 0 0.0309 ## ## -------------- ## 20_Tag40118_Z-175_12 ## -------------- ## Parameter Estimate Std.Err ## D 329.8641 34.3746 ## rho_o -0.391 57.7399 ## tau_x 0.004 0.0597 ## tau_y 0.0111 0.0566 ## ## -------------- ## 20_Tag40118_Z-175_13 ## -------------- ## Parameter Estimate Std.Err ## D 940.8592 210.4412 ## . . . ## tau_x 0.0091 0.0449 ## tau_y 0.0223 0.0499 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 211.3547 16.47 ## . . . ## tau_x 0.0553 0.5976 ## tau_y 0.0623 0.2678 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 155.9506 15.12 ## . . . ## tau_x 0.0208 0.0485 ## tau_y 0.0215 0.0486 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 67.5103 11.0498 ## . . . ## tau_x 0.0591 0.1341 ## tau_y 0.0332 0.0894 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## D 15.1218 3.9293 ## . . . ## tau_x 0.0609 0.1056 ## tau_y 0.0589 0.1029 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_06 ## -------------- ## Parameter Estimate Std.Err ## D 13.9218 4.4561 ## . . . ## tau_x 0.0466 0.0917 ## tau_y 0.031 0.0838 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_07 ## -------------- ## Parameter Estimate Std.Err ## D 302.0871 32.9974 ## . . . ## tau_x 0.0449 0.3227 ## tau_y 0.0491 0.3234 ## ## -------------- ## 20_Tag40133_Z-1 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 342.2612 26.5213 ## . . . ## tau_x 0.0628 0.2738 ## tau_y 0.0329 0.2674 ## ## -------------- ## 20_Tag40138_VM-18_05 ## -------------- ## Parameter Estimate Std.Err ## D 536.6933 109.6678 ## rho_o -0.3569 79.7304 ## tau_x 0.3152 0.6043 ## . . . ## ## -------------- ## 20_Tag40138_VM-18_06 ## -------------- ## Parameter Estimate Std.Err ## D 190.6259 64.3944 ## . . . ## tau_x 55.7218 19.4425 ## tau_y 0.0247 0.1179 ## ## -------------- ## 20_Tag40138_VM-18_07 ## -------------- ## Parameter Estimate Std.Err ## D 440.404 79.9892 ## rho_o -0.7645 33.913 ## tau_x 0.0042 0.0296 ## tau_y 0.0067 0.0297 ## ## -------------- ## 20_Tag40138_VM-18_08 ## -------------- ## Parameter Estimate Std.Err ## D 249.841 36.0628 ## . . . ## tau_x 0.0512 0.1519 ## tau_y 0.0499 0.1468 ## ## -------------- ## 20_Tag40138_VM-18_09 ## -------------- ## Parameter Estimate Std.Err ## D 78.9367 17.5148 ## rho_o -0.9982 0.0097 ## tau_x 32.7048 6.3053 ## tau_y 10.9325 3.1928 ## ## -------------- ## 20_Tag40138_VM-18_10 ## -------------- ## Parameter Estimate Std.Err ## D 235.9616 85.9639 ## . . . ## tau_x 53.7227 22.1473 ## tau_y 0.1287 0.4072 ## ## -------------- ## 20_Tag40138_VM-18_11 ## -------------- ## Parameter Estimate Std.Err ## D 103.4619 22.4203 ## rho_o -0.1308 0.2326 ## tau_x 43.5437 7.1051 ## tau_y 25.9182 4.6146 ## ## -------------- ## 20_Tag40138_VM-18_12 ## -------------- ## Parameter Estimate Std.Err ## D 458.2436 99.6725 ## . . . ## tau_x 0.0576 0.2813 ## tau_y 1e-04 0.2408 ## ## -------------- ## 20_Tag40138_VM-18_13 ## -------------- ## Parameter Estimate Std.Err ## D 637.9438 138.1871 ## . . . ## tau_x 0.1941 0.484 ## tau_y 0 0.0211 ## ## -------------- ## 20_Tag40193_Z-13 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 15.9925 2.2822 ## . . . ## tau_x 0.0099 0.0684 ## tau_y 0.0154 0.0684 ## ## -------------- ## 20_Tag40536_VM-8 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 119.1034 7.1701 ## . . . ## tau_x 0.0249 0.0388 ## tau_y 0.0222 0.0365 ## ## -------------- ## 20_Tag40536_VM-8 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 111.632 7.5921 ## . . . ## tau_x 0.0377 0.1162 ## tau_y 0.0294 0.1023 ## ## -------------- ## 20_Tag40817_VM-12_01 ## -------------- ## Parameter Estimate Std.Err ## D 16.0597 6.9588 ## rho_o -0.9671 0.0321 ## tau_x 41.1438 11.6483 ## tau_y 23.0499 6.7097 ## ## -------------- ## 20_Tag40817_VM-12_02 ## -------------- ## Parameter Estimate Std.Err ## D 5.257 2.2889 ## rho_o -0.6422 0.0934 ## tau_x 97.3216 12.1523 ## tau_y 73.4452 14.6172 ## ## -------------- ## 20_Tag40817_VM-12_03 ## -------------- ## Parameter Estimate Std.Err ## D 89.1274 12.0553 ## rho_o -0.377 0.0785 ## tau_x 48.6232 3.3857 ## tau_y 27.1174 2.1429 ## ## -------------- ## 20_Tag40859_Z-179_01 ## -------------- ## Parameter Estimate Std.Err ## D 127.7951 42.4651 ## . . . ## tau_x 0.0256 0.1455 ## tau_y 0.001 0.1432 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_01 ## -------------- ## Parameter Estimate Std.Err ## D 278.1036 31.3065 ## . . . ## tau_x 0.1063 0.1888 ## tau_y 0.0098 0.0372 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_02 ## -------------- ## Parameter Estimate Std.Err ## D 13.2682 4.7253 ## rho_o 0.2899 0.2493 ## tau_x 25.3023 4.704 ## tau_y 17.8872 3.0472 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_03 ## -------------- ## Parameter Estimate Std.Err ## D 463.6626 81.6864 ## . . . ## tau_x 0.0156 0.0254 ## tau_y 0.0388 0.0548 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_04 ## -------------- ## Parameter Estimate Std.Err ## D 207.3715 39.1451 ## . . . ## tau_x 0.0244 0.0247 ## tau_y 0.0207 0.0171 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_05 ## -------------- ## Parameter Estimate Std.Err ## D 421.7782 89.9468 ## . . . ## tau_x 0.0062 0.2116 ## tau_y 0.0674 0.2227 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_06 ## -------------- ## Parameter Estimate Std.Err ## D 344.1174 71.499 ## . . . ## tau_x 0.0461 0.1834 ## tau_y 0.0446 0.1905 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_07 ## -------------- ## Parameter Estimate Std.Err ## D 86.4453 22.3313 ## . . . ## tau_x 0.0398 0.1659 ## tau_y 0.0595 0.2206 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_08 ## -------------- ## Parameter Estimate Std.Err ## D 490.4048 118.2943 ## rho_o 0.8536 17540.0029 ## . . . ## tau_y 0.0045 0.3267 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_09 ## -------------- ## Parameter Estimate Std.Err ## D 26.719 7.1136 ## . . . ## tau_x 0.006 0.0937 ## tau_y 0.0163 0.0951 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_10 ## -------------- ## Parameter Estimate Std.Err ## D 162.5949 24.723 ## . . . ## tau_x 0.0267 0.0496 ## tau_y 0.0191 0.0453 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_11 ## -------------- ## Parameter Estimate Std.Err ## D 100.5776 23.087 ## . . . ## tau_x 0.051 0.1856 ## tau_y 0.0491 0.1847 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_12 ## -------------- ## Parameter Estimate Std.Err ## D 156.2962 41.1898 ## . . . ## tau_x 0.0395 0.2373 ## tau_y 0.0495 0.2724 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_13 ## -------------- ## Parameter Estimate Std.Err ## D 67.8497 13.5706 ## . . . ## tau_x 0.0012 0.0597 ## tau_y 0.0049 0.0666 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_14 ## -------------- ## Parameter Estimate Std.Err ## D 112.1669 21.1243 ## . . . ## tau_x 0.0558 0.2178 ## tau_y 0.043 0.1743 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_15 ## -------------- ## Parameter Estimate Std.Err ## D 105.9643 35.0628 ## . . . ## tau_x 3e-04 0.1469 ## tau_y 0.0047 0.1597 ## ## -------------- ## 20_Tag41108_Z-95 (2nd Parent)_16 ## -------------- ## Parameter Estimate Std.Err ## D 133.9505 35.7512 ## rho_o 0.6303 2463.2222 ## tau_x 9e-04 0.0225 ## tau_y 9e-04 0.0225 ## ## -------------- ## 21_Tag41220_VR-1_01 ## -------------- ## Parameter Estimate Std.Err ## D 93.7032 14.1319 ## rho_o 0.0641 0.132 ## tau_x 21.87 2.1672 ## tau_y 11.8643 1.3012 ## ## -------------- ## 21_Tag41220_VR-1_02 ## -------------- ## Parameter Estimate Std.Err ## D 137.0576 24.7721 ## rho_o 0.7776 101.9904 ## tau_x 0.0013 0.0228 ## tau_y 0.0055 0.0231 ## ## -------------- ## 21_Tag41220_VR-1_03 ## -------------- ## Parameter Estimate Std.Err ## D 193.6406 36.6811 ## . . . ## tau_x 0.0305 0.086 ## tau_y 0.0238 0.0821 ## ## -------------- ## 21_Tag41220_VR-1_04 ## -------------- ## Parameter Estimate Std.Err ## D 161.0206 28.8223 ## . . . ## tau_x 0.0331 0.0679 ## tau_y 0.0245 0.0622 ## ## -------------- ## 21_Tag41220_VR-1_05 ## -------------- ## Parameter Estimate Std.Err ## D 71.719 9.2131 ## . . . ## tau_x 6e-04 0.0269 ## tau_y 0.0057 0.0284 ## ## -------------- ## 21_Tag41220_VR-1_06 ## -------------- ## Parameter Estimate Std.Err ## D 141.0731 10.3774 ## . . . ## tau_x 0.0368 0.0583 ## tau_y 0.0247 0.0489 ## ## -------------- ## 21_Tag41220_VR-1_07 ## -------------- ## Parameter Estimate Std.Err ## D 77.5548 13.9711 ## . . . ## tau_x 0.0637 0.1509 ## tau_y 0.0633 0.1512 ## ## -------------- ## 21_Tag41220_VR-1_08 ## -------------- ## Parameter Estimate Std.Err ## D 123.2679 11.2336 ## . . . ## tau_x 0.0493 0.1609 ## tau_y 0.0429 0.1507 ## ## -------------- ## 21_Tag41220_VR-1_09 ## -------------- ## Parameter Estimate Std.Err ## D 27.1503 3.6334 ## . . . ## tau_x 0.0259 0.0391 ## tau_y 0.0238 0.0371 ## ## -------------- ## 21_Tag41220_VR-1_10 ## -------------- ## Parameter Estimate Std.Err ## D 121.2109 8.1073 ## . . . ## tau_x 0.0271 0.0487 ## tau_y 0.0239 0.0466 ## ## -------------- ## 21_Tag41220_VR-1_11 ## -------------- ## Parameter Estimate Std.Err ## D 77.684 14.4139 ## . . . ## tau_x 0.0664 0.188 ## tau_y 0.0684 0.1908 ## ## -------------- ## 21_Tag41220_VR-1_12 ## -------------- ## Parameter Estimate Std.Err ## D 168.4522 21.9345 ## . . . ## tau_x 4e-04 0.2123 ## tau_y 0.0545 0.2549 ## ## -------------- ## 21_Tag41220_VR-1_13 ## -------------- ## Parameter Estimate Std.Err ## D 112.0295 7.9425 ## . . . ## tau_x 0.0362 0.084 ## tau_y 0.0336 0.0829 ## ## -------------- ## 21_Tag41220_VR-1_14 ## -------------- ## Parameter Estimate Std.Err ## D 113.1698 27.7078 ## . . . ## tau_x 0.0163 0.0361 ## tau_y 0.0141 0.0353 ## ## -------------- ## 21_Tag41220_VR-1_15 ## -------------- ## Parameter Estimate Std.Err ## D 91.0206 10.2293 ## . . . ## tau_x 0.0389 0.1173 ## tau_y 0.0339 0.1029 ## ## -------------- ## 21_Tag41220_VR-1_16 ## -------------- ## Parameter Estimate Std.Err ## D 153.7017 24.4289 ## . . . ## tau_x 0.0173 0.0412 ## tau_y 0.0142 0.0398 ## ## -------------- ## 21_Tag41220_VR-1_17 ## -------------- ## Parameter Estimate Std.Err ## D 104.4452 16.9216 ## . . . ## tau_x 0.021 0.0642 ## tau_y 0.0209 0.0646 ## ## -------------- ## 21_Tag41220_VR-1_18 ## -------------- ## Parameter Estimate Std.Err ## D 81.5228 12.7412 ## . . . ## tau_x 0.0279 0.1008 ## tau_y 0.0405 0.1267 ## ## -------------- ## 21_Tag41220_VR-1_19 ## -------------- ## Parameter Estimate Std.Err ## D 86.4333 15.0484 ## . . . ## tau_x 0.0441 0.1637 ## tau_y 0.0494 0.1724 &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; &quot;STEP 9: Reroute tracks that went overland back via the sea&quot; ## [1] &quot;STEP 9: Reroute tracks that went overland back via the sea&quot; &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## [1] &quot;~~~~~~~~~~~~~~~~~~~~~~~&quot; ## NOTE: This will reroute the point locations only! So if you have a very detailed ## coastline, then it may appear the animals still move over land when plotting lines ## between points. The success of the analysis is also dependent on the underlying ## basemap used. The natural earth map (used by default) is good, but not very finely ## detailed. i.e. resolution could be higher ## reroute the track using the predicted values of the previously fitted model fit.reroute.all &lt;- route_path(fit_alltrack, what = &quot;predicted&quot;, map_scale = 10, dist = 10000, append = T) ## data.frame of rerouted values ## NOTE: Some of these locations may not be ecologically realistic anymore ## i.e. if you were to recalculate travel speeds, they may be unrealistic ## must consider trade-off of approach accordingly floc.predicted.reroute &lt;- grab(fit.reroute, what = &quot;rerouted&quot;) ## review data head(data.frame(floc.predicted),2) ## id date lon lat x y ## 1 20_Tag40118_Z-175_10 2020-05-23 00:41:00 16.87376 42.7756 1878.379 5248.852 ## 2 20_Tag40118_Z-175_10 2020-05-23 01:11:00 16.91179 42.7981 1882.612 5252.251 ## x.se y.se u v u.se v.se ## 1 9.999991e-06 9.999951e-06 2.630553e-12 2.092932e-12 0.000010 0.000010 ## 2 4.504251e+00 4.504241e+00 8.475094e+00 6.806618e+00 9.018513 9.018501 ## s s.se ## 1 1.281909e-311 NA ## 2 1.085795e+01 NA head(data.frame(floc.predicted.reroute),2) ## id date lon lat x y ## 1 20_Tag40118_Z-175_10 2020-05-23 01:11:00 16.91179 42.79810 1882.612 5252.251 ## 2 20_Tag40118_Z-175_10 2020-05-23 01:41:00 16.95701 42.82535 1887.646 5256.372 ## x.se y.se ## 1 4.504251 4.504241 ## 2 3.176432 3.176422 "],["track2kba-guidance.html", "6 Track2KBA Guidance 6.1 Load packages 6.2 Download example data and format 6.3 Quick plot all data 6.4 tripSplit() 6.5 tripSummary() 6.6 projectTracks() 6.7 estSpaceUse() 6.8 Review smoothing 6.9 repAssess() 6.10 findSite()", " 6 Track2KBA Guidance This tutorial uses the example data for Masked Boobies associated with the track2KBA GitHub account: https://github.com/BirdLifeInternational/track2kba Supported by the manuscript: Beal et al. (2021). track2KBA: An R package for identifying important sites for biodiversity from tracking data. Methods in Ecology and Evolution. The tutorial aims to further explain what the functions are doing and acts as a guide for inexperienced users. Users should consult this tutorial in conjunction with the 2021 manuscript, supplementary material and GitHub account. While track2KBA is designed to allow minimal input from the user, users should understand the consequence of choices to input parameters while using the functions provided within track2KBA. What does this tutorial cover: Overview of the Track2KBA R package Summary of the Track2KBA scientific paper https://doi.org/10.1111/2041-210X.13713 Incorporating further details from the Track2KBA paper supplementary material Incorporating details from the supporting Track2KBA GitHub tutorial https://github.com/BirdLifeInternational/track2kba Output(s) from this script, can be used to: assess data against relevant criteria, such as: IBA criteria: http://datazone.birdlife.org/site/ibacriteria KBA criteria: https://www.keybiodiversityareas.org/working-with-kbas/proposing-updating/criteria or, for identification of sites from animal tracking data to be used in alternate spatial planning exercises. This analysis was performed in R version 4.2.2 (2022-10-31 ucrt) This document was last updated on 2023-05-09 6.1 Load packages Load required R packages: If the packages fail to load, you will need to install the relevant packages. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Load libraries -------------------------------------------------------------- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ library(track2KBA) library(tidyverse) library(readxl) library(sf) library(xlsx) library(sp) library(gridExtra) library(viridis) Before you use track2KBA to identify a final site for assessmenent you must consider the following: The dataGroup: Does your data sufficiently represent a unique dataGroup? See guidance. Cleaned data: Has your tracking data been cleaned sufficiently? I.e. have you removed likely incorrect locations from your tracking data? Regularised data: Does your tracking data represent locations evenly sampled in time? To regularise your tracking data so locations are evenly sampled in time, you may need to interpolate your tracking data. The typical options we consider are interpolation via linear interpolation, or the more advanced method of interpolation via “CRAWL”. Load example data available with the manuscript Example data from Masked Boobies during the breeding period. Birds during this time are typically exhibiting central place foraging behaviour. Consider: How should your data be formatted? You should have a dataframe which has at least five columns relating to: “ID” of the animal(s) you tracked further details tbc 6.2 Download example data and format ## Load the data data(boobies) ## view the first two rows of the data head(boobies,2) ## track_id date_gmt time_gmt longitude latitude lon_colony lat_colony ## 1 69302 2012-07-22 04:17:15 -5.72638 -16.00711 -5.73 -16.01 ## 2 69302 2012-07-22 04:28:57 -5.72642 -16.00716 -5.73 -16.01 ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## track2KBA::formatFields() ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Format the key data fields to the standard used in track2KBA dataGroup &lt;- formatFields( dataGroup = boobies, fieldID = &quot;track_id&quot;, fieldDate = &quot;date_gmt&quot;, fieldTime = &quot;time_gmt&quot;, fieldLon = &quot;longitude&quot;, fieldLat = &quot;latitude&quot; ) ## review the outputs - first what the new data looks like head(dataGroup,2) ## ID date_gmt time_gmt Longitude Latitude lon_colony lat_colony ## 1 69302 2012-07-22 04:17:15 -5.72638 -16.00711 -5.73 -16.01 ## 2 69302 2012-07-22 04:28:57 -5.72642 -16.00716 -5.73 -16.01 ## DateTime ## 1 2012-07-22 04:17:15 ## 2 2012-07-22 04:28:57 ## review the outputs - then details of each column (i.e. vector) class str(dataGroup) ## &#39;data.frame&#39;: 178006 obs. of 8 variables: ## $ ID : chr &quot;69302&quot; &quot;69302&quot; &quot;69302&quot; &quot;69302&quot; ... ## $ date_gmt : chr &quot;2012-07-22&quot; &quot;2012-07-22&quot; &quot;2012-07-21&quot; &quot;2012-07-21&quot; ... ## $ time_gmt : chr &quot;04:17:15&quot; &quot;04:28:57&quot; &quot;13:04:33&quot; &quot;13:18:24&quot; ... ## $ Longitude : num -5.73 -5.73 -5.73 -5.73 -5.73 ... ## $ Latitude : num -16 -16 -16 -16 -16 ... ## $ lon_colony: num -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 ... ## $ lat_colony: num -16 -16 -16 -16 -16 ... ## $ DateTime : POSIXct, format: &quot;2012-07-22 04:17:15&quot; &quot;2012-07-22 04:28:57&quot; ... ## - attr(*, &quot;.internal.selfref&quot;)=&lt;externalptr&gt; 6.3 Quick plot all data Simple plot of all the data for a quick review: ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## view all data ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## quick plot of all data for a quick overview dataGroup.plot &lt;- st_as_sf(dataGroup, coords = c(&quot;Longitude&quot;, &quot;Latitude&quot;), crs=4326) # 4326 = geographic WGS84 plot(st_geometry(dataGroup.plot), cex = 0.5, pch = 1) ## number of datapoints nrow(dataGroup) ## [1] 178006 6.4 tripSplit() Set up some of the input parameters needed for the tripSplit() function ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Define colony ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## example relates to a seabird during the breeding season, when the species ## is known to be a central place forager, therefore, define the colony position colony &lt;- dataGroup %&gt;% summarise( Longitude = first(Longitude), Latitude = first(Latitude) ) The tripSplit() function If your data does not relate to a central place forager (CPF), OR a time when an animal may be exhibiting central place foraging behaviours, then skip this section and those relating to CPF data This step is often very useful to help automate the removal of location points on land, or near the vicinty of a colony. We don’t want these extra points to bias our interpretation of the data. ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## tripSplit() ---- ## Input is a &#39;data.frame&#39; of tracking data and the central-place location. ## Output is a &#39;SpatialPointsDataFrame&#39;. trips &lt;- tripSplit( dataGroup = dataGroup, colony = colony, innerBuff = 3, # km - defines distance an animal must travel to count as trip started returnBuff = 10, # km - defines distance an animal must be from the colony to have returned and thus completed a trip duration = 1, # hours - defines time an animal must have travelled away from the colony to count as a trip. helps remove glitches in data or very short trips that were likely not foraging trips. rmNonTrip = TRUE # If true - points not associated with a trip will be removed ) ## Review data after tripSplit() head(trips,2) ## coordinates ID date_gmt time_gmt Longitude Latitude ## 706 (-5.69104, -16.0065) 69302 2012-07-22 07:52:11 -5.69104 -16.00650 ## 707 (-5.68132, -16.001) 69302 2012-07-22 07:53:50 -5.68132 -16.00096 ## lon_colony lat_colony DateTime tripID X Y ## 706 -5.73 -16.01 2012-07-22 07:52:11 69302_01 -5.69104 -16.00650 ## 707 -5.73 -16.01 2012-07-22 07:53:50 69302_01 -5.68132 -16.00096 ## Returns StartsOut ColDist ## 706 Yes 3783.071 ## 707 Yes 4870.651 ## Coordinate Reference System (CRS) arguments: +proj=longlat +datum=WGS84 ## +no_defs ## Assess number of points associated with a trip ## Yes: indicates a point is associated with a trip ## No: not associated with a trip ## If you specified rmNonTrip = FALSE above, then you will also get points (data) relating to the locations that would be filtered out from the tripSplit function table(trips$Returns) ## ## No Yes ## 1733 26717 ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## mapTrips() ---- ## view data after splitting into trips ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## plot quick overview of trips recorded for individual birds mapTrips(trips = trips, colony = colony) 6.5 tripSummary() Summarise the tracking data using the tripSummary() function: ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Filter and summary of number of trips after splitting tracks ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## Before summarizing the trip movements, using tripSummary(). ## First, we can filter out data from trips that did not return to the vicinity ## of the colony (i.e. within returnBuff), so they don&#39;t skew the estimates. ## Let&#39;s also check how many trips we record as Yes vs. No before filtering ## Instead of looking at points associated with an invidual trip, looked at how ## many uniqu trips you have across all individuals. i.e. the total number of trips ## represented by each time an animal departed and returned to the colony ## summarise the data totalTripsAll &lt;- data.frame(trips) %&gt;% group_by(tripID, Returns) %&gt;% summarise(count = n()) %&gt;% data.frame(.) ## inspect the total number of unique trips table(totalTripsAll$Returns) ## ## No Yes ## 2 213 ## Filter to only include trips that return trips &lt;- subset(trips, trips$Returns == &quot;Yes&quot; ) ## review that you have only chosen trips that return totalTripsYes &lt;- data.frame(trips) %&gt;% group_by(tripID, Returns) %&gt;% summarise(count = n()) %&gt;% data.frame(.) ## inspect total number of unique trips table(totalTripsYes$Returns) ## ## Yes ## 213 ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## tripSummary() ---- ## Rough summary of tracking data for complete trips ---- ## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ sumTrips &lt;- tripSummary(trips = trips, colony = colony) ## Check you only have complete trips here (if that is what you are aiming for) table(sumTrips$complete) ## ## complete trip ## 213 ## filter for only complete trips if needed #sumTrips &lt;- sumTrips %&gt;% dplyr::filter(complete= &quot;complete trip&quot;) ## view output head(sumTrips ,10) ## # A tibble: 10 × 10 ## # Groups: ID [4] ## ID tripID n_locs departure return durat…¹ total…² ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dttm&gt; &lt;dttm&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 69302 69302_01 274 2012-07-22 07:52:11 2012-07-22 16:11:03 8.31 207. ## 2 69302 69302_02 124 2012-07-23 12:26:22 2012-07-23 15:54:05 3.46 111. ## 3 69302 69302_03 138 2012-07-25 08:30:53 2012-07-25 12:22:53 3.87 116. ## 4 69305 69305_01 71 2013-08-22 13:08:15 2013-08-22 15:10:59 2.05 91.6 ## 5 69306 69306_01 37 2014-01-06 16:28:42 2014-01-06 17:32:11 1.06 46.2 ## 6 69306 69306_02 83 2014-01-07 14:48:24 2014-01-07 17:10:21 2.37 114. ## 7 69306 69306_03 129 2014-01-08 14:25:11 2014-01-08 17:55:22 3.50 143. ## 8 69306 69306_04 50 2014-01-08 18:08:32 2014-01-08 19:30:40 1.37 56.1 ## 9 69306 69306_05 155 2014-01-09 14:47:04 2014-01-09 19:21:32 4.57 161. ## 10 69307 69307_01 133 2014-01-06 14:04:22 2014-01-06 17:53:01 3.81 144. ## # … with 3 more variables: max_dist &lt;dbl&gt;, direction &lt;dbl&gt;, complete &lt;chr&gt;, and ## # abbreviated variable names ¹​duration, ²​total_dist ## view unique individual ID unique(sumTrips$ID) ## [1] &quot;69302&quot; &quot;69305&quot; &quot;69306&quot; &quot;69307&quot; &quot;69308&quot; &quot;69309&quot; &quot;69310&quot; &quot;69311&quot; &quot;69312&quot; ## [10] &quot;69313&quot; &quot;69314&quot; &quot;69315&quot; &quot;69316&quot; &quot;69317&quot; &quot;69319&quot; &quot;69320&quot; &quot;69321&quot; &quot;69322&quot; ## [19] &quot;69323&quot; &quot;69324&quot; &quot;69325&quot; &quot;69326&quot; &quot;69327&quot; &quot;69328&quot; &quot;69329&quot; &quot;69330&quot; &quot;69331&quot; ## [28] &quot;69332&quot; &quot;69333&quot; &quot;69334&quot; &quot;69335&quot; &quot;69336&quot; &quot;69337&quot; &quot;69338&quot; &quot;69339&quot; &quot;69340&quot; ## [37] &quot;69341&quot; &quot;69342&quot; &quot;69343&quot; &quot;69344&quot; ## number of individuals with tracking data length(unique(sumTrips$ID)) ## [1] 40 ## number of unique trips from all individuals length(unique(sumTrips$tripID)) ## [1] 213 6.6 projectTracks() track2KBA uses Kernel Density Estimation (KDE) to produce space use estimates for each individual track. In order for these to be accurate, we need to transform the tracking data to an equal-area projection. ## review your input data head(data.frame(trips),2) ## ID date_gmt time_gmt Longitude Latitude lon_colony lat_colony ## 706 69302 2012-07-22 07:52:11 -5.69104 -16.00650 -5.73 -16.01 ## 707 69302 2012-07-22 07:53:50 -5.68132 -16.00096 -5.73 -16.01 ## DateTime tripID X Y Returns StartsOut ColDist ## 706 2012-07-22 07:52:11 69302_01 -5.69104 -16.00650 Yes 3783.071 ## 707 2012-07-22 07:53:50 69302_01 -5.68132 -16.00096 Yes 4870.651 ## dataGroup.Longitude dataGroup.Latitude optional ## 706 -5.69104 -16.00650 TRUE ## 707 -5.68132 -16.00096 TRUE ## run the function tracks &lt;- projectTracks(dataGroup = trips, projType = &#39;azim&#39;, custom=TRUE ) class(tracks) ## [1] &quot;SpatialPointsDataFrame&quot; ## attr(,&quot;package&quot;) ## [1] &quot;sp&quot; str(tracks) ## Formal class &#39;SpatialPointsDataFrame&#39; [package &quot;sp&quot;] with 5 slots ## ..@ data :&#39;data.frame&#39;: 26717 obs. of 14 variables: ## .. ..$ ID : chr [1:26717] &quot;69302&quot; &quot;69302&quot; &quot;69302&quot; &quot;69302&quot; ... ## .. ..$ date_gmt : chr [1:26717] &quot;2012-07-22&quot; &quot;2012-07-22&quot; &quot;2012-07-22&quot; &quot;2012-07-22&quot; ... ## .. ..$ time_gmt : chr [1:26717] &quot;07:52:11&quot; &quot;07:53:50&quot; &quot;07:55:29&quot; &quot;07:57:08&quot; ... ## .. ..$ Longitude : num [1:26717] -5.69 -5.68 -5.67 -5.66 -5.65 ... ## .. ..$ Latitude : num [1:26717] -16 -16 -16 -16 -16 ... ## .. ..$ lon_colony: num [1:26717] -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 -5.73 ... ## .. ..$ lat_colony: num [1:26717] -16 -16 -16 -16 -16 ... ## .. ..$ DateTime : POSIXct[1:26717], format: &quot;2012-07-22 07:52:11&quot; &quot;2012-07-22 07:53:50&quot; ... ## .. ..$ tripID : chr [1:26717] &quot;69302_01&quot; &quot;69302_01&quot; &quot;69302_01&quot; &quot;69302_01&quot; ... ## .. ..$ X : num [1:26717] -5.69 -5.68 -5.67 -5.66 -5.65 ... ## .. ..$ Y : num [1:26717] -16 -16 -16 -16 -16 ... ## .. ..$ Returns : chr [1:26717] &quot;Yes&quot; &quot;Yes&quot; &quot;Yes&quot; &quot;Yes&quot; ... ## .. ..$ StartsOut : chr [1:26717] &quot;&quot; &quot;&quot; &quot;&quot; &quot;&quot; ... ## .. ..$ ColDist : num [1:26717] 3783 4871 6407 7759 9007 ... ## ..@ coords.nrs : num(0) ## ..@ coords : num [1:26717, 1:2] -89305 -88267 -86835 -85672 -84723 ... ## .. ..- attr(*, &quot;dimnames&quot;)=List of 2 ## .. .. ..$ : NULL ## .. .. ..$ : chr [1:2] &quot;dataGroup.Longitude&quot; &quot;dataGroup.Latitude&quot; ## ..@ bbox : num [1:2, 1:2] -165053 -113911 -2549 39853 ## .. ..- attr(*, &quot;dimnames&quot;)=List of 2 ## .. .. ..$ : chr [1:2] &quot;dataGroup.Longitude&quot; &quot;dataGroup.Latitude&quot; ## .. .. ..$ : chr [1:2] &quot;min&quot; &quot;max&quot; ## ..@ proj4string:Formal class &#39;CRS&#39; [package &quot;sp&quot;] with 1 slot ## .. .. ..@ projargs: chr &quot;+proj=laea +lat_0=-15.5025687761751 +lon_0=-4.85666111798403 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs&quot; ## .. .. ..$ comment: chr &quot;PROJCRS[\\&quot;unknown\\&quot;,\\n BASEGEOGCRS[\\&quot;unknown\\&quot;,\\n DATUM[\\&quot;World Geodetic System 1984\\&quot;,\\n &quot;| __truncated__ ## compare input vs. output head(data.frame(trips),2) ## ID date_gmt time_gmt Longitude Latitude lon_colony lat_colony ## 706 69302 2012-07-22 07:52:11 -5.69104 -16.00650 -5.73 -16.01 ## 707 69302 2012-07-22 07:53:50 -5.68132 -16.00096 -5.73 -16.01 ## DateTime tripID X Y Returns StartsOut ColDist ## 706 2012-07-22 07:52:11 69302_01 -5.69104 -16.00650 Yes 3783.071 ## 707 2012-07-22 07:53:50 69302_01 -5.68132 -16.00096 Yes 4870.651 ## dataGroup.Longitude dataGroup.Latitude optional ## 706 -5.69104 -16.00650 TRUE ## 707 -5.68132 -16.00096 TRUE head(data.frame(tracks),2) ## ID date_gmt time_gmt Longitude Latitude lon_colony lat_colony ## 706 69302 2012-07-22 07:52:11 -5.69104 -16.00650 -5.73 -16.01 ## 707 69302 2012-07-22 07:53:50 -5.68132 -16.00096 -5.73 -16.01 ## DateTime tripID X Y Returns StartsOut ColDist ## 706 2012-07-22 07:52:11 69302_01 -5.69104 -16.00650 Yes 3783.071 ## 707 2012-07-22 07:53:50 69302_01 -5.68132 -16.00096 Yes 4870.651 ## dataGroup.Longitude dataGroup.Latitude optional ## 706 -89304.69 -55936.88 TRUE ## 707 -88266.78 -55319.80 TRUE ## compare projections proj4string(trips) ## [1] &quot;+proj=longlat +datum=WGS84 +no_defs&quot; proj4string(tracks) ## [1] &quot;+proj=laea +lat_0=-15.5025687761751 +lon_0=-4.85666111798403 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs&quot; NOTE: Above you have changed your main object name from trips to tracks ##findScale() findScale() provides options for setting the all-important smoothing parameter in the KDE. findScale() calculates candidate smoothing parameter values using different methods. Choosing the ‘optimal’ smoothing parameter is critical. See GitHub page. Consider what further advice we can give to users regarding choice of smoothing parameter? hVals &lt;- findScale( tracks = tracks, scaleARS = TRUE, sumTrips = sumTrips) ## Review output hVals ## med_max_dist step_length mag href scaleARS ## 1 22.97 0.92 3.13 5.78 29.5 ## must choose between one of three smoothing parameters for further analyses ## smoothing parameter is distance in km. Read more in supporting documents. ## Review each outputted smoothing parameter option hVals$mag # affected by range of animal movement. Only works for central place foragers. ## [1] 3.13 hVals$href # sort of represents quality of data ## [1] 5.78 hVals$scaleARS # affected by quality of data and subsequent ability to determine scale at which animal interacts with environment. Learn more about First Passage Time analysis ## [1] 29.5 6.7 estSpaceUse() #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## estSpaceUse() ---- ## Produce KDEs for each individual ## Note: here we might want to remove the trip start and end points that fall ## within the innerBuff distance we set in tripSplit, so that they don&#39;t skew ## the at-sea distribution towards to colony. #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## review input again head(data.frame(tracks),2) ## ID date_gmt time_gmt Longitude Latitude lon_colony lat_colony ## 706 69302 2012-07-22 07:52:11 -5.69104 -16.00650 -5.73 -16.01 ## 707 69302 2012-07-22 07:53:50 -5.68132 -16.00096 -5.73 -16.01 ## DateTime tripID X Y Returns StartsOut ColDist ## 706 2012-07-22 07:52:11 69302_01 -5.69104 -16.00650 Yes 3783.071 ## 707 2012-07-22 07:53:50 69302_01 -5.68132 -16.00096 Yes 4870.651 ## dataGroup.Longitude dataGroup.Latitude optional ## 706 -89304.69 -55936.88 TRUE ## 707 -88266.78 -55319.80 TRUE #min(tracks$ColDist) warning(&quot;Must update GitHub tutorial which specifies distance incorrectly&quot;) ## remove trip start and end points near colony - distance is in m (unlike innerBuff where distance was in km) proj4string(tracks) ## [1] &quot;+proj=laea +lat_0=-15.5025687761751 +lon_0=-4.85666111798403 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs&quot; tracks &lt;- tracks[tracks$ColDist &gt; 3*1000, ] ## produce the KDEs for each individual ## NOTE: The grid cell size (i.e., grid resolution) should be less than the ## selected h value, otherwise the entire space use area of the animal may be ## encompassed in few cells KDE &lt;- estSpaceUse( tracks = tracks, scale = hVals$mag, levelUD = 50, polyOut = TRUE ) ## use the simple mapping function to get an overview of UDs for individuals mapKDE(KDE = KDE$UDPolygons, colony = colony) 6.8 Review smoothing After applying estSpaceUse and viewing plot with mapKDE, at this step we should verify that the smoothing parameter value we selected is producing reasonable space use estimates, given what we know about our study animals. Are the core areas much larger than expected? Much smaller? If so, consider using a different value for the scale parameter. ## convert to sf object trips_sf_IndBird &lt;- st_as_sf(trips) %&gt;% dplyr::filter(ID == unique(trips$ID)[1]) ## get the UD for a single individual ud_sf_IndBird &lt;- KDE$UDPolygons %&gt;% dplyr::filter(id == trips_sf_IndBird$ID[1]) %&gt;% st_transform(.,crs = st_crs(trips_sf_IndBird)) ## Plot OVERALL data again for first single individual plot(st_geometry(trips_sf_IndBird), cex = 0.5, pch = 1) ## and add the UD to the plot plot(st_geometry(ud_sf_IndBird),add=T, border = &quot;blue&quot;) ## Determine number of points captured in UD ## sf::sf_use_s2(FALSE) # run this if issues with st_intersection: https://stackoverflow.com/questions/68478179/how-to-resolve-spherical-geometry-failures-when-joining-spatial-data ## PointsInUD &lt;- st_intersection(trips_sf_IndBird, ud_sf_IndBird) ## nrow(trips_sf_IndBird) ## length(unique(PointsInUD$DateTime)) ## length(unique(PointsInUD$DateTime)) / nrow(trips_sf_IndBird) * 100 warning(&quot;Assess whether your selected smoothing parameter has resulted in sensible Utilisation Distributions.&quot;) warning(&quot;Can we use the above to consider some form of test to guide smoothing parameter choice?.&quot;) 6.9 repAssess() Estimate how representative this sample of animals is of the population. NOTE: iterations should be set to 100 at a minimum when running the script officially. #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## repAssess() ---- ## estimate how representative this sample of animals is of the population. #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ &quot;NOTE: See iterations&quot; ## [1] &quot;NOTE: See iterations&quot; repr &lt;- repAssess( tracks = tracks, KDE = KDE$KDE.Surface, levelUD = 50, iteration = 1, ## iterations should be set to 100 at a minimum when running the script officially bootTable = FALSE) 6.10 findSite() #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ## findSite() ---- ## using findSite we can identify areas where animals are overlapping in space ## and delineate sites that meet some criteria of importance. #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ # ## indicate the population size of your source populaiton. e.g. the population size # ## of the colony from which you tracked birds. For KBA identification, this estimate # ## should be in Mature Individuals. # ## I.e. for seabird colonies: breeding pairs * 2 = mature individuals # SourcePopulationSize = 500 # # ## findSite function # Site_PolyTrue &lt;- findSite( # KDE = KDE$KDE.Surface, # represent = repr$out, # levelUD = 50, # popSize = SourcePopulationSize, # 500 individual seabirds breed one the island # polyOut = TRUE # ) # # ## review outputs # dim(Site_PolyTrue) # # ## plot option # Sitemap_PolyTrue &lt;- mapSite(Site_PolyTrue, colony = colony) # # ## review output object # Sitemap_PolyTrue # # ## If in findSite we instead specify polyOut=FALSE, our output will be a spatial # ## grid of animal densities, with each cell representing the estimated number, or # ## percentage of animals using that area. So this output is independent of the # ## representativness-based importance threshold. i.e. the output indicates # ## only the areas used by more or less individuals that you tracked, it does not # ## give you a polygon that you would necessarily assess against IBA / KBA criteria. # ## The output also does not use the representatives measure to estimate the OVERALL # ## number of individuals that are likely using certain areas when you specify the # ## popSize of your source population. # # ## findSite with polyOut=FALSE # Site_PolyFalse &lt;- findSite( # KDE = KDE$KDE.Surface, # represent = repr$out, # levelUD = 50, # popSize = SourcePopulationSize, # 500 individual seabirds breed one the island # polyOut = FALSE # ) # # ## review outputs # dim(Site_PolyFalse) # max(Site_PolyFalse@data$N_IND) # max(Site_PolyFalse@data$N_animals) # head(unique(Site_PolyFalse@data$ID_IND)) # # ## simple plot option # Sitemap_PolyFalse &lt;- mapSite(Site_PolyFalse, colony = colony) # # ## review output object # Sitemap_PolyFalse "],["seaward-extension-introduction.html", "7 Seaward Extension Introduction", " 7 Seaward Extension Introduction This document was last updated on 2023-05-09 This chapter provides guidance and code for delineating a seaward extension boundary from a colony of breeding seabirds. SEAWARD EXTENSION DEFINITION: These are marine areas immediately surrounding seabird breeding colonies. The areas are typically used for ecologically relevant behaviours such as rafting, preening, bathing, foraging or transiting between foraging trips, depending on a species. This tutorial uses the example data for Adelie Penguins. For information on the original study, see Handley et al. 2021 Marine Important Bird and Biodiversity Areas for Penguins in Antarctica, Targets for Conservation Action. Frontiers in Marine Science 7: 602972. https://doi.org/10.3389/fmars.2020.602972 While this tutorial is designed to allow minimal input from the user, users should understand the consequence of choices to input parameters while using the functions provided. What does this tutorial cover: Creating a suitable background raster (grid file) for use in the seaward extension method Producing a raster density grid and a polygon site boundary output for a seabird colony Producing raster density grids and polygon site boundaries outputs for a multiple seabird colonies and combine them to produce a stack final output. Inputs to this tutorial: Polygon (shapefile) of land Seabird colony location(s) (latitude and longitude) Radius around the colony (distance in km) Colony size(s) (number of breeding pairs) [Link to input data csv template] Guidance for inputs: Polygon of land (shapefile) The resolution of this file will impact the final results, so it needs to be sufficiently fine scale compared to the scale of distance used in the method. Shapefiles can be downloaded from https://gadm.org/data.html [Also r natural earth?] Seabird colony location (latitude and longitude) The accuracy of the location will impact the results, so it is recommended to check the location before running the method. For island colonies, if the colony covers the entire island, the centre of the island is suitable. If not, it is better to use a location on the correct side of the island. Radius around the colony (distance in km) [Possible distances: maxium, mean maximum, mean] [Could be from tracking (e.g. if sample size is too small to use track2KBA)] [Could be informed by at sea surveys?] Colony size (number of breeding pairs) Could also use Apparently Occupied Sites/Nests If the count is a range, could use mean. [Could also run for upper and lower estimate to include uncertainty] Output(s) from this tutorial, can be used to: assess data against relevant criteria, such as: IBA criteria: http://datazone.birdlife.org/site/ibacriteria KBA criteria: https://www.keybiodiversityareas.org/working-with-kbas/proposing-updating/criteria or, for identification of sites from animal tracking data to be used in alternate spatial planning exercises. "],["seaward-extensions-1-create-background-raster.html", "8 Seaward Extensions 1: Create Background Raster 8.1 Fill in raster values with land polygon basemap 8.2 Save the raster for use in the next section", " 8 Seaward Extensions 1: Create Background Raster This analysis was performed in R version 4.2.2 (2022-10-31 ucrt) This document was last updated on 2023-05-09 What does this section cover: Creating a raster (grid) that can be used for delineation of a seaward extension boundary from a colony of breeding seabirds. This raster will: Have a specified cell size (resolution). Cover the location of the colony or colonies with a buffer greater than the maximum radius distance. Specify cells at either marine or terrestrial (ice can be classified as terrestrial). This is the required input for the tutorials on how to produce outputs for a single seabird colony [link to 2] and multiple seabird colonies [link to 3]. Load required R packages: If the packages fail to load, you will need to install them. ## Load libraries #### #install.packages(&quot;sf&quot;) #install.packages(&quot;terra&quot;) library(sf) library(terra) Supply input data [For Marine Toolkit, need to provide guidance on choice of resolution. Currently, 5km aligned with same scale as the Critchley et al. 2018 paper.] The shapefile is not provide in the github repository as the file size was too large. The file can be downloaded here: https://data.bas.ac.uk/collections/e74543c0-4c4e-4b41-aa33-5bb2f67df389/ Alternatively, the output is provided, so this can be used directly in the next section. ## Colony location latitude &lt;- -60.683 longitude &lt;- -45.644 ## Land polygon basemap &lt;- read_sf(paste0(wd,&quot;/data-input-files-bookdown/Coastline_high_res_polygon_v7.1&quot;)) ## Maximum colony radius distance (m) max_colony_radius &lt;- 149000 ## Specified resolution of grid cell (m) grid_res &lt;- 5000 Format colony locations as spatial objects #format colony location as dataframe df &lt;- data.frame(cbind(latitude,longitude)) #Set coordinate reference system (CRS) for colony locations col_locs &lt;- st_as_sf(df,coords = c(&quot;longitude&quot;,&quot;latitude&quot;), crs = 4326) #If needed, convert colony data to basemap projection if(st_crs(col_locs) != st_crs(basemap)){ col_locs_proj &lt;- st_transform(col_locs, crs = st_crs(basemap)) } else { col_locs_proj &lt;- col_locs } Create raster #First set a buffer (m) around the colony/colonies + the resolution of the grid to make sure the grid is large enough. raster_buffer &lt;- max_colony_radius + grid_res #Find the extent of the colony locations bounds &lt;- st_bbox(col_locs_proj) #Create the blank raster grid with the crs of the land polygon ras &lt;- terra::rast(xmin = bounds[[1]] - raster_buffer, ymin = bounds[[2]] - raster_buffer, xmax = bounds[[3]] + raster_buffer, ymax = bounds[[4]] + raster_buffer, resolution = grid_res, crs = st_crs(basemap)$wkt) 8.1 Fill in raster values with land polygon basemap Convert the basemap, currently in polygon format, to a raster and then overlay with the blank raster NOTE: Operation will take time depending on size of polygon data and detail of borders. i.e. Higher resolution maps take longer to process. basemap_vector &lt;- vect(basemap) mask &lt;- terra::rasterize(basemap_vector, ras) ras &lt;- is.na(mask) ras[ras==0] &lt;- 2 plot(ras) #plot(st_geometry(col_locs_proj), pch = 19, col = &quot;blue&quot;, add = T) 8.2 Save the raster for use in the next section terra::writeRaster(ras,paste0(wd,&quot;/data-input-files-bookdown/seaward-ext-background-raster-single.tif&quot;), overwrite=T) "],["seaward-extensions-1-create-background-raster-1.html", "9 Seaward Extensions 1: Create Background Raster 9.1 Fill in raster values with land polygon basemap 9.2 Save the raster for use in the next section", " 9 Seaward Extensions 1: Create Background Raster This analysis was performed in R version 4.2.2 (2022-10-31 ucrt) This document was last updated on 2023-05-09 What does this section cover: Creating a raster (grid) that can be used for delineation of a seaward extension boundary from a colony of breeding seabirds. This raster will: Have a specified cell size (resolution). Cover the location of the colony or colonies with a buffer greater than the maximum radius distance. Specify cells at either marine or terrestrial (ice can be classified as terrestrial). This is the required input for the tutorials on how to produce outputs for a single seabird colony [link to 2] and multiple seabird colonies [link to 3]. Load required R packages: If the packages fail to load, you will need to install them. ## Load libraries #### #install.packages(&quot;sf&quot;) #install.packages(&quot;terra&quot;) library(sf) library(terra) Supply input data [For Marine Toolkit, need to provide guidance on choice of resolution. Currently, 5km aligned with same scale as the Critchley et al. 2018 paper.] The shapefile is not provide in the github repository as the file size was too large. The file can be downloaded here: https://data.bas.ac.uk/collections/e74543c0-4c4e-4b41-aa33-5bb2f67df389/ Alternatively, the output is provided, so this can be used directly in the next section. ## Colony data: location, abundance estimate df &lt;- read.csv(paste0(wd,&quot;/data-input-files-bookdown/AdeliePenguin_example_dataset.csv&quot;)) head(df) ## colony_name colony_size colony_size_min colony_size_max latitude ## 1 Acuna Island 3079 1880 3079 -60.7612 ## 2 Adams Island 425 76 425 -66.5459 ## 3 Cape Adare 428516 169200 428516 -71.3063 ## 4 Akarui Point 106 106 211 -68.4999 ## 5 Alasheyev Bight 1080 1080 1080 -67.6540 ## 6 Ambush Bay 17621 17621 17621 -63.1840 ## longitude ## 1 -44.6370 ## 2 92.5486 ## 3 170.1999 ## 4 41.3901 ## 5 46.1090 ## 6 -55.3930 ## Land polygon basemap &lt;- read_sf(paste0(wd,&quot;/data-input-files-bookdown/Coastline_high_res_polygon_v7.1&quot;)) ## Maximum colony radius distance (m) max_colony_radius &lt;- 149000 ## Specified resolution of grid cell (m) grid_res &lt;- 5000 Format colony locations as spatial objects #Set coordinate reference system (CRS) for colony locations col_locs &lt;- st_as_sf(df,coords = c(&quot;longitude&quot;,&quot;latitude&quot;), crs = 4326) #If needed, convert colony data to basemap projection if(st_crs(col_locs) != st_crs(basemap)){ col_locs_proj &lt;- st_transform(col_locs, crs = st_crs(basemap)) } else { col_locs_proj &lt;- col_locs } #Plot to check plot(st_geometry(col_locs_proj), pch = 19, col = &quot;blue&quot;) Create raster #First set a buffer (m) around the colony/colonies + the resolution of the grid to make sure the grid is large enough. raster_buffer &lt;- max_colony_radius + grid_res #Find the extent of the colony locations bounds &lt;- st_bbox(col_locs_proj) #Create the blank raster grid with the crs of the land polygon ras &lt;- terra::rast(xmin = bounds[[1]] - raster_buffer, ymin = bounds[[2]] - raster_buffer, xmax = bounds[[3]] + raster_buffer, ymax = bounds[[4]] + raster_buffer, resolution = grid_res, crs = st_crs(basemap)$wkt) 9.1 Fill in raster values with land polygon basemap Convert the basemap, currently in polygon format, to a raster and then overlay with the blank raster NOTE: Operation will take time depending on size of polygon data and detail of borders. i.e. Higher resolution maps take longer to process. basemap_vector &lt;- vect(basemap) mask &lt;- terra::rasterize(basemap_vector, ras) ras &lt;- is.na(mask) ras[ras==0] &lt;- 2 plot(ras) #plot(st_geometry(col_locs_proj), pch = 19, col = &quot;blue&quot;, add = T) 9.2 Save the raster for use in the next section terra::writeRaster(ras,paste0(wd,&quot;/data-input-files-bookdown/seaward-ext-background-raster.tif&quot;), overwrite=T) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
